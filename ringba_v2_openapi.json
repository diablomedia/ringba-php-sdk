{
  "openapi": "3.0.0",
  "info": {
    "title": "Ringba API Documentation",
    "description": "Ringba’s APIs allow you to interact, gather information, and make dynamic changes in real-time. All functions found within the Ringba portal are also available programmatically through our API. \n\nIf this is your first time using our API, please read the __Getting Started__ section below.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.ringba.com/v2/",
      "variables": {}
    },
    {
      "url": "https://rtb.ringba.com/v1/{environment}",
      "variables": {
        "environment": {
          "default": "DefaultParameterValue"
        }
      }
    }
  ],
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "Bearer Tokens"
        ],
        "summary": "Get User Authentication Bearer Token",
        "operationId": "GetUserAuthenticationBearerToken",
        "parameters": [
          {
            "name": "content-type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/x-www-form-urlencoded; charset=UTF-8"
              ],
              "type": "string",
              "example": "application/x-www-form-urlencoded; charset=UTF-8"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "required": [
                  "grant_type",
                  "username",
                  "password"
                ],
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "example": "password"
                  },
                  "username": {
                    "type": "string",
                    "example": "{{userEmail}}"
                  },
                  "password": {
                    "type": "string",
                    "example": "{{password}}"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 01 Feb 2021 18:25:55 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "1354"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserAuthenticationBearerToken"
                },
                "example": {
                  "access_token": "0VH31LtRMFtHowoXf2IpXgcEvZMKVcs8uIjGcM9As91mYDpWJAwMZCeeWo8fDKI-oIbVlWrEmGJwkNiDMvu6NSN2ibkOWKzOOdshY6mSvhgfSykciPegwkepTrhc8EjWDBOR1zM0Y9GffMXcSIxAQEZAyxIIxrc7e12ipGROlWQtTJ8Ync0e9WiGAFTSvX5YNewfJgvef4S_ObwWvsCIsHPeEoyVxoNHoBoZMyeZih0_Wyq9hp8aPXdjmNLaBPMDMtrXSZocIWMVbz4LSjk18tmjtDy4dHwgtkFzcqhomaeYqz2sS-xJLUdb7DfTRUZpbGRamG4in5jpcAWKwkWmgRIl9vNKH4wKQiR8CrlNgSgf4VCaR-NKuZqOJXrLxn6JJlBTqJLueOZBv3FK27ex7X1gvm3Q9eul_XA4vzawFPDlnO6Xi7RpqG0rnfvkYjgWYVaV4G-vYdSoi3Tm4CkCMcHscCJ0ythxx1QQER##########",
                  "token_type": "bearer",
                  "expires_in": 3599,
                  "refresh_token": "tHt5ISkNZO_8apbiN1RdtTWHik7Uf5Rp6cVe0uX7auRPng0iFrMygs33L4HE8DEnWdMGxE6jNt10-hS8xEFjuerKJcU0qxSPVlaGCsifnE9z600TKOotN0UrM4-mzbzbydp18hsT2EYDgJ1MI0yAbbctcM8XTgxlnDhHaKnvLuA8ck7WUaPxqyyxtUvo9U-C4KunMHkIcZuNqx13wOBNbV2SQZ9Dgcw0ynPKHjoRemA9JCE3g0qhEDs-iQ3Rv9UE_lkXVzZp9_WzGTtfdU5a8V8mOfQhuE24Glw5LLRPa1oEUWMzdhKJMe5nqYF2gH_CDWR1fZwVXA1gjDrSKJqb8HnZPQPzYvegAxVNEpO-v_EHGV0c2g7Mx6zxdZJvy9huA5slJaJHef-rBwVI97MIrCgfFg1s9gnKEnC5kNpNs4NemAKP-B-tKMLYv12T4YT0K0lEZss76y-S4NdlT2QrtXKXSGqN3UYR0oj50c##########",
                  "userName": "ringba.api.user@gmail.com",
                  ".issued": "Mon, 01 Feb 2021 18:25:55 GMT",
                  ".expires": "Mon, 01 Feb 2021 19:25:55 GMT"
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/ApiTokens": {
      "get": {
        "tags": [
          "API Tokens"
        ],
        "summary": "Get API Tokens",
        "description": "Endpoint to retrieve a list of IDs of current API Tokens in your account. \n\n\n\n### Response Overview\n<hr>\n<br>\n\nIf the API Token has not been used, the `usage` array will be empty, otherwise it will contain the last 10 actions.\n\nThis request will __NOT__ return the actual API Token, but will show the ID of each Token. If you need the actual API Token, you can create a new one using the `POST Create API Token` request or contact Ringba support.",
        "operationId": "GetAPITokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 01 Jul 2020 18:30:41 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "538"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAPITokenswithusage"
                },
                "example": {
                  "transactionId": "TR4c37f7e0-674f-4370-9c88-278a624d9e25",
                  "apiTokens": [
                    {
                      "usage": [
                        {
                          "ipAddress": "68.6.132.162",
                          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                          "loginTime": "2020-06-30T23:10:02.159+00:00"
                        },
                        {
                          "ipAddress": "68.6.132.162",
                          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                          "loginTime": "2020-06-30T23:09:04.738+00:00"
                        },
                        {
                          "ipAddress": "68.6.132.162",
                          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                          "loginTime": "2020-06-30T23:08:59.522+00:00"
                        },
                        {
                          "ipAddress": "68.6.132.162",
                          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookupbulk",
                          "loginTime": "2020-06-30T23:06:18.717+00:00"
                        },
                        {
                          "ipAddress": "68.6.132.162",
                          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                          "loginTime": "2020-06-30T23:06:04.15+00:00"
                        },
                        {
                          "ipAddress": "68.6.132.162",
                          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                          "loginTime": "2020-06-30T23:05:54.129+00:00"
                        },
                        {
                          "ipAddress": "68.6.132.162",
                          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                          "loginTime": "2020-06-30T23:05:16.489+00:00"
                        }
                      ],
                      "name": "Test",
                      "userName": "gus@ringba.com",
                      "creationTime": "2020-06-30T23:03:06.781+00:00",
                      "tokenId": "API347036dbc137412195617416ab36cffa",
                      "userId": "398924893-cb0f-409b-9148-d65f4f5695be"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "API Tokens"
        ],
        "summary": "Create Api Token",
        "description": "#### How to Generate Your API Token\n\nCreate an API Token to be used for authenticating requests indefinitely. In the json response grab the `token` value and use as `{apiToken}` in the header `Authorization: Token {apiToken}` on all other requests. The body must contain the name for your API Token so you can identify when pulling the list of active tokens.\n\n**NOTE: The API Token will be shown only once, please keep it in a safe place**",
        "operationId": "CreateApiToken",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiTokenRequest"
              },
              "example": {
                "name": "Test"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/ApiTokens/{apiTokenId}": {
      "delete": {
        "tags": [
          "API Tokens"
        ],
        "summary": "Delete Api Token",
        "description": "Delete any existing API Token by supplying the ID in the URL. The IDs can be retrieved using the \"Get API Tokens\" endpoint.",
        "operationId": "DeleteApiToken",
        "parameters": [
          {
            "name": "apiTokenId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 25 Jun 2020 16:01:11 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "230"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteApiToken"
                },
                "example": {
                  "transactionId": "TR6d6470e4-8b72-4ec5-9cee-45c0378a5ce2",
                  "deleteApiToken": "API3c7ced56045443a8a66711683b663f51"
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/ringbaaccounts": {
      "get": {
        "tags": [
          "Account Information"
        ],
        "summary": "Get Account Info using API Token",
        "description": "Simple authenticated request that uses the `API Token`. This request pulls the account information of the user that was granted the API Token. You can use this request if you ever need to find out your `Account ID` for other API requests.",
        "operationId": "GetAccountInfousingAPIToken",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 01 Jul 2020 21:23:57 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "451"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountInfo"
                },
                "example": {
                  "transactionId": "TRdb998cad-82fd-45b3-ae3e-9fdc9001bbd3",
                  "account": [
                    {
                      "accountCreationEpoch": 1513899772617,
                      "timeZoneId": "Eastern Standard Time",
                      "accountAddress": {
                        "streetAddress": "3344 Terrace Ave",
                        "addressLine2": "",
                        "city": "San Diego",
                        "region": "California",
                        "postalCode": "92113",
                        "countryName": "United States",
                        "countryCode": "US"
                      },
                      "id": "RA432a55cf08d848b9aertac7402f3r5y6",
                      "name": "Ringba Testing Company",
                      "accountId": "RA432a55cf08d848b9aertac7402f3r5y6",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get Addresses",
        "description": "### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)",
        "operationId": "GetAddresses",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 22:23:11 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "448"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAddresses"
                },
                "example": {
                  "transactionId": "TR1fed7965-3065-4c76-bcd2-f97916964446",
                  "addresses": [
                    {
                      "id": "ADe86e712170c14d7caebe6f3afb130868",
                      "customerName": "Paper Street Soap Co.",
                      "streetAddress": "123 Paper St",
                      "city": "Lander",
                      "region": "Wyoming",
                      "postalCode": "82520",
                      "countryName": "United States",
                      "countryCode": "US",
                      "isDefault": false,
                      "status": "incomplete",
                      "name": "Tyler Durden",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Create New Address",
        "description": "Create a new address to associate with this account. \n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td>The name you want to assign to this address to make it easier to identify later</td>\n    </tr>\n    <tr>\n        <td><code>countryName</code></td>\n        <td>The country this address is in</td>\n    </tr>\n    <tr>\n        <td><code>countryCode</code></td>\n        <td>The alphabetic country code for the country of the address</td>\n    </tr>\n    <tr>\n        <td><code>customerName</code></td>\n        <td>The name of the business associated with this address</td>\n    </tr>\n    <tr>\n        <td><code>streetAddress</code></td>\n        <td>The street address you want to add</td>\n    </tr>\n    <tr>\n        <td><code>city</code></td>\n        <td>The city the address is in</td>\n    </tr>\n    <tr>\n        <td><code>postalCode</code></td>\n        <td>The postal (zip) code for the address</td>\n    </tr>\n</table>\n\n#### Optional Parameters\n<table>\n<tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n<tr>\n        <td><code>region</code></td>\n        <td>The state or region for the address, if applicable</td>\n    </tr>\n</table>",
        "operationId": "CreateNewAddress",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewAddressRequest"
              },
              "example": {
                "city": "Midlothian",
                "countryCode": "US",
                "countryName": "United States",
                "customerName": "Paper Street Soap Company",
                "name": "Test2",
                "postalCode": "23112",
                "region": "Virginia",
                "streetAddress": "456 Paper St"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 19 Jan 2021 22:21:43 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "445"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewAddress"
                },
                "example": {
                  "transactionId": "TR1af11695-2f80-47b8-aa74-d234e2c43d0e",
                  "addressId": "ADb56e411dffb346dc95b816f755869fe7",
                  "address": {
                    "id": "ADb56e411dffb346dc95b816f755869fe7",
                    "customerName": "Paper Street Soap Company",
                    "streetAddress": "456 Paper St",
                    "city": "Midlothian",
                    "region": "Virginia",
                    "postalCode": "23112",
                    "countryName": "United States",
                    "countryCode": "US",
                    "isDefault": false,
                    "status": "incomplete",
                    "name": "Test2",
                    "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/addresses/{addressId}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get Address by ID",
        "description": "Get details about a specific address. \n\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``addressId`` Find the [addressId](#get-addresses-associated-with-account) <br>",
        "operationId": "GetAddressbyID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 25 Jan 2021 16:05:41 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "441"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAddressbyID"
                },
                "example": {
                  "transactionId": "TR839d1ef2-7945-4549-9f00-b92d9f639ad4",
                  "address": {
                    "id": "AD3734b588e82b4757934d1cc456c2354f",
                    "customerName": "some business",
                    "streetAddress": "456 Example St",
                    "city": "San Diego",
                    "region": "California",
                    "postalCode": "92115",
                    "countryName": "United States",
                    "countryCode": "US",
                    "isDefault": false,
                    "status": "incomplete",
                    "name": "new name",
                    "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Addresses"
        ],
        "summary": "Edit Address",
        "description": "Users can edit any address associated with the account\n\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``addressId`` Find the [addressId](#get-addresses-associated-with-account) <br>\n\n### Request Body\n<hr>\n<br>\n\nThis request can be used to modify any of the parameters described in the \"POST Create New Address\" request above.",
        "operationId": "EditAddress",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAddressRequest"
              },
              "example": {
                "name": "new name",
                "customerName": "some business",
                "streetAddress": "456 Example St",
                "city": "San Diego",
                "region": "California",
                "postalCode": "92115",
                "countryName": "United States",
                "countryCode": "US"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 19 Jan 2021 21:43:45 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "439"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EditAddress"
                },
                "example": {
                  "transactionId": "TR1e4ee0a7-7f12-41bb-bd2f-afc849f0b2dc",
                  "address": {
                    "id": "AD3734b588e82b4757934d1cc456c2354f",
                    "customerName": "some business",
                    "streetAddress": "456 Example St",
                    "city": "San Diego",
                    "region": "California",
                    "postalCode": "92115",
                    "countryName": "United States",
                    "countryCode": "US",
                    "isDefault": false,
                    "status": "incomplete",
                    "name": "new name",
                    "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Addresses"
        ],
        "summary": "Delete Address",
        "description": "Users can delete addresses from the list associated with their account.\n\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``addressId`` Find the [addressId](#get-addresses-associated-with-account) <br>",
        "operationId": "DeleteAddress",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#a63045f1-9e95-46cd-896d-1fa137b3abc2)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 19 Jan 2021 22:26:58 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAddress"
                },
                "example": {
                  "transactionId": "TR27b6c6fc-2fb9-4711-a989-0e9a72dec2b4",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/addresses/countries": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get Countries Associated With Account",
        "description": "View details about the countries associated with the account\n\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>",
        "operationId": "GetCountriesAssociatedWithAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 25 Jan 2021 16:06:59 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "557"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAddressesbyCountry"
                  },
                  "description": "",
                  "example": [
                    {
                      "addressRequirementFullfilledForTollFreeNumbers": false,
                      "addressRequirementFullfilledForLocalNumbers": false,
                      "name": "Canada",
                      "countryCode": "CA",
                      "hasTollFreeNumbers": true,
                      "hasMobileNumbers": false,
                      "hasLocalNumbers": true,
                      "addressRequirementForTollFreeNumbers": "none",
                      "addressRequirementForLocalNumbers": "none",
                      "addressProofRequirementForTollFreeNumbers": false,
                      "addressProofRequirementForLocalNumbers": false,
                      "identityRequirementForTollFreeNumbers": "none",
                      "identityRequirementForLocalNumbers": "none",
                      "identityProofRequirementForTollFreeNumbers": false,
                      "identityProofRequirementForLocalNumbers": false,
                      "canSearchByZipCode": false,
                      "canSearchByRegion": true,
                      "canSearchByPrefix": true
                    },
                    {
                      "addressRequirementFullfilledForLocalNumbers": false,
                      "name": "New Zealand",
                      "countryCode": "NZ",
                      "hasTollFreeNumbers": false,
                      "hasMobileNumbers": false,
                      "hasLocalNumbers": true,
                      "addressRequirementForLocalNumbers": "none",
                      "addressProofRequirementForLocalNumbers": false,
                      "identityRequirementForLocalNumbers": "none",
                      "identityProofRequirementForLocalNumbers": false,
                      "canSearchByZipCode": false,
                      "canSearchByRegion": false,
                      "canSearchByPrefix": false
                    },
                    {
                      "addressRequirementFullfilledForTollFreeNumbers": false,
                      "addressRequirementFullfilledForLocalNumbers": false,
                      "name": "United States",
                      "countryCode": "US",
                      "hasTollFreeNumbers": true,
                      "hasMobileNumbers": false,
                      "hasLocalNumbers": true,
                      "addressRequirementForTollFreeNumbers": "none",
                      "addressRequirementForLocalNumbers": "none",
                      "addressProofRequirementForTollFreeNumbers": false,
                      "addressProofRequirementForLocalNumbers": false,
                      "identityRequirementForTollFreeNumbers": "none",
                      "identityRequirementForLocalNumbers": "none",
                      "identityProofRequirementForTollFreeNumbers": false,
                      "identityProofRequirementForLocalNumbers": false,
                      "canSearchByZipCode": true,
                      "canSearchByRegion": true,
                      "canSearchByPrefix": false
                    },
                    {
                      "addressRequirementFullfilledForLocalNumbers": false,
                      "name": "Australia",
                      "countryCode": "AU",
                      "hasTollFreeNumbers": false,
                      "hasMobileNumbers": false,
                      "hasLocalNumbers": true,
                      "addressRequirementForLocalNumbers": "none",
                      "addressProofRequirementForLocalNumbers": false,
                      "identityRequirementForLocalNumbers": "none",
                      "identityProofRequirementForLocalNumbers": false,
                      "canSearchByZipCode": false,
                      "canSearchByRegion": false,
                      "canSearchByPrefix": false
                    }
                  ]
                },
                "example": [
                  {
                    "addressRequirementFullfilledForTollFreeNumbers": false,
                    "addressRequirementFullfilledForLocalNumbers": false,
                    "name": "Canada",
                    "countryCode": "CA",
                    "hasTollFreeNumbers": true,
                    "hasMobileNumbers": false,
                    "hasLocalNumbers": true,
                    "addressRequirementForTollFreeNumbers": "none",
                    "addressRequirementForLocalNumbers": "none",
                    "addressProofRequirementForTollFreeNumbers": false,
                    "addressProofRequirementForLocalNumbers": false,
                    "identityRequirementForTollFreeNumbers": "none",
                    "identityRequirementForLocalNumbers": "none",
                    "identityProofRequirementForTollFreeNumbers": false,
                    "identityProofRequirementForLocalNumbers": false,
                    "canSearchByZipCode": false,
                    "canSearchByRegion": true,
                    "canSearchByPrefix": true
                  },
                  {
                    "addressRequirementFullfilledForLocalNumbers": false,
                    "name": "New Zealand",
                    "countryCode": "NZ",
                    "hasTollFreeNumbers": false,
                    "hasMobileNumbers": false,
                    "hasLocalNumbers": true,
                    "addressRequirementForLocalNumbers": "none",
                    "addressProofRequirementForLocalNumbers": false,
                    "identityRequirementForLocalNumbers": "none",
                    "identityProofRequirementForLocalNumbers": false,
                    "canSearchByZipCode": false,
                    "canSearchByRegion": false,
                    "canSearchByPrefix": false
                  },
                  {
                    "addressRequirementFullfilledForTollFreeNumbers": false,
                    "addressRequirementFullfilledForLocalNumbers": false,
                    "name": "United States",
                    "countryCode": "US",
                    "hasTollFreeNumbers": true,
                    "hasMobileNumbers": false,
                    "hasLocalNumbers": true,
                    "addressRequirementForTollFreeNumbers": "none",
                    "addressRequirementForLocalNumbers": "none",
                    "addressProofRequirementForTollFreeNumbers": false,
                    "addressProofRequirementForLocalNumbers": false,
                    "identityRequirementForTollFreeNumbers": "none",
                    "identityRequirementForLocalNumbers": "none",
                    "identityProofRequirementForTollFreeNumbers": false,
                    "identityProofRequirementForLocalNumbers": false,
                    "canSearchByZipCode": true,
                    "canSearchByRegion": true,
                    "canSearchByPrefix": false
                  },
                  {
                    "addressRequirementFullfilledForLocalNumbers": false,
                    "name": "Australia",
                    "countryCode": "AU",
                    "hasTollFreeNumbers": false,
                    "hasMobileNumbers": false,
                    "hasLocalNumbers": true,
                    "addressRequirementForLocalNumbers": "none",
                    "addressProofRequirementForLocalNumbers": false,
                    "identityRequirementForLocalNumbers": "none",
                    "identityProofRequirementForLocalNumbers": false,
                    "canSearchByZipCode": false,
                    "canSearchByRegion": false,
                    "canSearchByPrefix": false
                  }
                ]
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/addresses/requirements/{countryCode}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get Details and Requirements for a Specific Country",
        "operationId": "GetDetailsandRequirementsforaSpecificCountry",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 25 Jan 2021 16:09:59 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "332"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsaboutaspecificcountry"
                },
                "example": {
                  "addressRequirementFullfilledForTollFreeNumbers": false,
                  "addressRequirementFullfilledForLocalNumbers": false,
                  "name": "United States",
                  "countryCode": "US",
                  "hasTollFreeNumbers": true,
                  "hasMobileNumbers": false,
                  "hasLocalNumbers": true,
                  "addressRequirementForTollFreeNumbers": "none",
                  "addressRequirementForLocalNumbers": "none",
                  "addressProofRequirementForTollFreeNumbers": false,
                  "addressProofRequirementForLocalNumbers": false,
                  "identityRequirementForTollFreeNumbers": "none",
                  "identityRequirementForLocalNumbers": "none",
                  "identityProofRequirementForTollFreeNumbers": false,
                  "identityProofRequirementForLocalNumbers": false,
                  "canSearchByZipCode": true,
                  "canSearchByRegion": true,
                  "canSearchByPrefix": false
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/addresses/{addressId}/SetDefault": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Set Default Address",
        "description": "Modify which address is the default address for the account.\n\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``addressId`` Find the [addressId](#get-addresses-associated-with-account) <br>",
        "operationId": "SetDefaultAddress",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 26 Jan 2021 16:12:05 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "449"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SetDefaultAddress"
                },
                "example": {
                  "transactionId": "TR88870abe-f3b9-4159-a5c3-23a30b6a8bc1",
                  "isSuccessful": true,
                  "address": {
                    "id": "AD3734b588e82b4757934d1cc456c2354f",
                    "customerName": "some business",
                    "streetAddress": "456 Example St",
                    "city": "San Diego",
                    "region": "California",
                    "postalCode": "92115",
                    "countryName": "United States",
                    "countryCode": "US",
                    "isDefault": true,
                    "status": "incomplete",
                    "name": "new name",
                    "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Buyers": {
      "get": {
        "tags": [
          "Buyers"
        ],
        "summary": "Get Buyers",
        "description": "Request to retrieve a list of buyers associated with your account.\n\n### Path Variables\n<hr>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>",
        "operationId": "GetBuyers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Feb 2021 19:16:08 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "549"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetBuyers"
                },
                "example": {
                  "transactionId": "TRd7df7edd-39f8-4c47-8bb9-f59e1d0e4334",
                  "buyers": [
                    {
                      "email": "",
                      "canPauseTargets": false,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": false,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "id": "BU0db0aea8954049468ed3d2893d0b00e9",
                      "name": "Acme Call Buyers",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "email": "",
                      "canPauseTargets": true,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": false,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "id": "BUec50e9c7fa294283ba10a35893b13198",
                      "name": "Example Buyer Co.",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "email": "",
                      "canPauseTargets": false,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": false,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "id": "BUaf8fb40966cc40cd83e3ac27d9fa5c9a",
                      "name": "Call Buying Inc.",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calls/payments": {
      "post": {
        "tags": [
          "Call Adjustments"
        ],
        "summary": "Adjust Revenue and/or Payment for a Call (with relative adjustments)",
        "description": "This request can adjust the `revenue` received from a buyer for a call as well as the `payout` amount paid to a publisher for a call. \n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>inboundCallId</code></td>\n<td>The ID of the call you wish to make and adjustment for. You can get Call IDs using the <a href=\"#get-logs-of-calls-associated-with-account\">Call Log Requests</a>\n</tr>\n<tr>\n<td><code>reason</code></td>\n<td>The reason that the adjustment is being made</td>\n</tr>\n<tr>\n<td><code>adjustConversion</code></td>\n<td>Boolean value to determine whether this request is adjusting the revenue received from the buyer of the call. If set to \"true\" the value of <code>adjustConverionByAmount</code> must have the value by which you wish to adjust the revenue</td>\n</tr>\n<tr>\n<td><code>adjustPayout</code></td>\n<td>Boolean value to determine whether this request is adjusting to payout amount paid to the publisher. If set to \"true\" the value of <code>adjustPayoutByAmount</code> must have the value by which you wish to adjust the payout</td>\n</tr>\n</table>\n\n#### Optional Parameters \n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>adjustConverionByAmount</code></td>\n<td>The amount by which you want to adjust the revenue received from the buyer. See the note below for further information</td>\n</tr>\n<tr>\n<td><code>adjustPayoutByAmount</code></td>\n<td>The amount by which you want to adjust the payout amount paid to the publisher. See the note below for more information</td>\n</tr>\n</table>\n\n__NOTE:__ This request will adjust the revenue/payout by a _relative_ amount, meaning that if the `adjustConverionByAmount` or `adjustPayoutByAmount` fields have a value of \"0.10\" it will add $0.10 to the total amount and if they have a value of \"-0.10\" it will subtract $0.10 from the total amount. To adjust these values _absolutely_ check out the \"POST Adjust Revenue and/or Payment for a Call (with absolute adjusments)\" request below.\n\n\n<!-- `inboundCallId` The ID of the call you wish to make and adjustment for. You can get Call IDs using the [Call Log Requests](#get-logs-of-calls-associated-with-account).<br>\n`reason` The reason that the adjustment is being made. <br>\n`adjustConversion` Boolean value to determine whether this request is adjusting the revenue received from the buyer of the call. If set to \"true\" the value of `adjustConverionByAmount` must have the value by which you wish to adjust the revenue.<br>\n`adjustPayout` Boolean value to determine whether this request is adjusting to payout amount paid to the publisher. If set to \"true\" the value of `adjustPayoutByAmount` must have the value by which you wish to adjust the payout.<br>\n\n`adjustConverionByAmount` The amount by which you want to adjust the revenue received from the buyer. See the note below for further information.<br>\n`adjustPayoutByAmount` The amount by which you want to adjust the payout amount paid to the publisher. See the note below for more information.<br>\n<br> -->",
        "operationId": "AdjustRevenueand/orPaymentforaCall(withrelativeadjustments)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustRevenueandorPaymentforaCallwithrelativeadjustmentsRequest"
              },
              "example": {
                "inboundCallId": "{{InboundCallId}}",
                "reason": "Call payments adjusted by acct. Admin.",
                "adjustConversion": true,
                "adjustPayout": true,
                "adjustConverionByAmount": -0.01,
                "adjustPayoutByAmount": 0.01
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 18 Feb 2021 19:53:12 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "216"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustRevenueandPaymentforaCallwithrelativeadjustment"
                },
                "example": {
                  "transactionId": "TR8a4adf07-1b0e-48d7-a62b-ca95e5f47ec8",
                  "result": {
                    "payoutAmount": 0.11,
                    "conversionAmount": 0.11
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calls/payments/override": {
      "post": {
        "tags": [
          "Call Adjustments"
        ],
        "summary": "Adjust Revenue and/or Payment for a Call (with absolute adjustments)",
        "description": "This request can adjust the `revenue` received from a buyer for a call as well as the `payout` amount paid to a publisher for a call. \n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>inboundCallId</code></td>\n<td>The ID of the call you wish to make and adjustment for. You can get Call IDs using the <a href=\"#get-logs-of-calls-associated-with-account\">Call Log Requests</a>\n</tr>\n<tr>\n<td><code>reason</code></td>\n<td>The reason that the adjustment is being made</td>\n</tr>\n<tr>\n<td><code>adjustConversion</code></td>\n<td>Boolean value to determine whether this request is adjusting the revenue received from the buyer of the call. If set to \"true\" the value of <code>newConversionAmount</code> must have the new value you want to set for the revenue</td>\n</tr>\n<tr>\n<td><code>adjustPayout</code></td>\n<td>Boolean value to determine whether this request is adjusting to payout amount paid to the publisher. If set to \"true\" the value of <code>newPayoutAmount</code> must have the new value you want to set for the payout</td>\n</tr>\n</table>\n\n#### Optional Parameters \n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>newConversionAmount</code></td>\n<td>The new amount you want to set for the revenue received from the buyer. See the note below for further information</td>\n</tr>\n<tr>\n<td><code>newPayoutAmount</code></td>\n<td>The new amount you want to set for the payout amount paid to the publisher. See the note below for more information</td>\n</tr>\n</table>\n\n__NOTE:__ This request will adjust the revenue/payout by an _absolute_ amount, meaning that if the `newConversionAmount` or `newPayoutAmount` fields have a value of \"0.10\" it will change the total amount to $0.10. To adjust these values _relatively_ check out the \"POST Adjust Revenue and/or Payment for a Call (with relative adjustments)\" request above.\n\n__NOTE:__ The amounts for the adjustments cannot be negative number. If a request is sent with a negative value for either the `newConversionAmount` or `newPayoutAmount` fields you will receive an error with the message: \"Conversion would be brought below zero, the max refund is $0.1\".\n\n\n<!--\n#### Required Parameters\n`inboundCallId` The ID of the call you wish to make and adjustment for. You can get Call IDs using the [Call Log Requests](#get-logs-of-calls-associated-with-account).<br>\n`reason` The reason that the adjustment is being made. <br>\n`adjustConversion` Boolean value to determine whether this request is adjusting the revenue received from the buyer of the call. If set to \"true\" the value of `newConversionAmount` must have the new value you want to set for the revenue.<br>\n`adjustPayout` Boolean value to determine whether this request is adjusting to payout amount paid to the publisher. If set to \"true\" the value of `newPayoutAmount` must have the new value you want to set for the payout.<br>\n\n#### Optional Parameters \n`newConversionAmount` The new amount you want to set for the revenue received from the buyer. See the note below for further information.<br>\n`newPayoutAmount` The new amount you want to set for the payout amount paid to the publisher. See the note below for more information.<br>\n<br>\n-->\n\n",
        "operationId": "AdjustRevenueand/orPaymentforaCall(withabsoluteadjustments)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdjustRevenueandorPaymentforaCallwithabsoluteadjustmentsRequest"
              },
              "example": {
                "inboundCallId": "{{InboundCallId}}",
                "reason": "Call payments adjusted by acct. Admin.",
                "adjustConversion": true,
                "adjustPayout": true,
                "newConversionAmount": 0.1,
                "newPayoutAmount": 0.1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 18 Feb 2021 19:52:35 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "218"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AdjustRevenueandorPaymentforaCallwithabsoluteadjustments"
                },
                "example": {
                  "transactionId": "TRd498f207-fd42-4ef1-913d-e11775015a37",
                  "result": {
                    "payoutAmount": 0.1,
                    "conversionAmount": 0.1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calls/void": {
      "post": {
        "tags": [
          "Call Adjustments"
        ],
        "summary": "Void Revenue and/or Payment for a Call",
        "description": "Request to void (subtract) an amount from the revenue and/or payout for a call.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>inboundCallId</code></td>\n<td>The ID of the call you wish to make and adjustment for. You can get Call IDs using the <a href=\"#get-logs-of-calls-associated-with-account\">Call Log Requests</a>\n</tr>\n<tr>\n<td><code>voidReason</code></td>\n<td>The reason that the void is being made</td>\n</tr>\n<tr>\n<td><code>voidConversion</code></td>\n<td>Boolean value to determine whether this request is voiding some or all of the revenue received from the buyer of the call. If set to \"true\" the value of <code>voidConverionAmount</code> must have the amount you want to void from the revenue</td>\n</tr>\n<tr>\n<td><code>voidPayout</code></td>\n<td>Boolean value to determine whether this request is voiding some or all of the payout amount paid to the publisher. If set to \"true\" the value of <code>voidPayoutAmount</code> must have the amount you want to void from the payout</td>\n</tr>\n</table>\n\n#### Optional Parameters \n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>voidConverionAmount</code></td>\n<td>The amount you want to void from the revenue received from the buyer. This value needs to be a positive number that is less than or equal to the current <code>conversionAmount</code></td>\n</tr>\n<tr>\n<td><code>voidPayoutAmount</code></td>\n<td>The amount you want to void from the payout amount paid to the publisher. This value needs to be a positive number that is less than or equal to the current <code>payoutAmount</code></td>\n</tr>\n</table>\n\n<!--\n#### Required Parameters\n`inboundCallId` The ID of the call you wish to make and adjustment for. You can get Call IDs using the [Call Log Requests](#get-logs-of-calls-associated-with-account).<br>\n`voidReason` The reason that the void is being made. <br>\n`voidConversion` Boolean value to determine whether this request is voiding some or all of the revenue received from the buyer of the call. If set to \"true\" the value of `voidConverionAmount` must have the amount you want to void from the revenue.<br>\n`voidPayout` Boolean value to determine whether this request is voiding some or all of the payout amount paid to the publisher. If set to \"true\" the value of `voidPayoutAmount` must have the amount you want to void from the payout.<br>\n\n#### Optional Parameters \n`voidConverionAmount` The amount you want to void from the revenue received from the buyer. This value needs to be a positive that is less than or equal to the current `conversionAmount`.<br>\n`adjustPayoutByAmount` The amount you want to void from the payout amount paid to the publisher. This value needs to be a positive that is less than or equal to the current `payoutAmount`.\n<br>\n-->",
        "operationId": "VoidRevenueand/orPaymentforaCall",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidRevenueandorPaymentforaCallRequest"
              },
              "example": {
                "inboundCallId": "{{InboundCallId}}",
                "voidReason": "Test call voiding",
                "voidConversion": true,
                "voidPayout": true,
                "voidConverionAmount": 0.03,
                "voidPayoutAmount": 0.06
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 18 Feb 2021 23:55:45 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "218"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/VoidRevenueandPaymentforaCall"
                },
                "example": {
                  "transactionId": "TR611821a0-3052-48af-b1c3-d352cb5e1cbb",
                  "result": {
                    "payoutAmount": 0.04,
                    "conversionAmount": 0.07
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calls/annotate": {
      "post": {
        "tags": [
          "Call Adjustments"
        ],
        "summary": "Add Annotation to a Call",
        "description": "Request to add an annotation to a call to make it easier to find in the call log.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>inboundCallId</code></td>\n<td>The ID of the call you wish to make and adjustment for. You can get Call IDs using the <a href=\"#get-logs-of-calls-associated-with-account\">Call Log Requests</a></td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>An array containing an object for each of the tags you wish to add to the call. Each object in the array has the following required parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>tagType</code></p><p>This value should always be set to \"Annotations\"</p><hr><p><code>tagName</code></p><p>The name you want to assign to the tag</p><hr><p><code>tagValue</code></p><p>The value you want to assign to the tag</p>\n</tr>\n</table>\n\n",
        "operationId": "AddAnnotationtoaCall",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAnnotationtoaCallRequest"
              },
              "example": {
                "inboundCallId": "{{InboundCallId}}",
                "tags": [
                  {
                    "tagType": "Annotations",
                    "tagName": "Any Name",
                    "tagValue": "Any Value"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Feb 2021 00:09:02 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "196"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddAnnotationtoaCall"
                },
                "example": {
                  "transactionId": "TR3a816760-ca7d-4ec5-958f-c605608bbe56",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{buyerAccountId}/calls/requestConversionAdjustment": {
      "post": {
        "tags": [
          "Call Adjustments"
        ],
        "summary": "BUYER Request for Payout Adjustment (with relative adjustment)",
        "description": "Request to allow a buyer to send a request to the admin for the account handling the specified call to have the revenue amount adjusted. This request will send a notice to the admin of the account handling the campaign requesting an adjustment to the revenue for this call. The account admin will have final say in how much the actual adjustment is.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>inboundCallId</code></td>\n<td>The ID of the call you wish to make and adjustment for. You can get Call IDs using the <a href=\"#get-logs-of-calls-associated-with-account\">Call Log Requests</a>\n</tr>\n<tr>\n<td><code>reason</code></td>\n<td>The reason you are requesting the revenue amount be adjusted</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The amount by which you want the revenue to be adjusted. This value can be positive or negative to reflect a request increase or decrease in the total payout. This amount is a <i>relative</i> change so if this field has a value 0f \"0.20\" the admin will receive a notice requesting the revenue be increased by $0.20</td>\n</tr>\n</table>\n",
        "operationId": "BUYERRequestforPayoutAdjustment(withrelativeadjustment)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{buyerApiToken}}"
            }
          },
          {
            "name": "buyerAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BUYERRequestforPayoutAdjustmentwithrelativeadjustmentRequest"
              },
              "example": {
                "inboundCallId": "{{InboundCallId}}",
                "reason": "Test call revenue adjustment request",
                "amount": 0.2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Feb 2021 18:36:50 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "269"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BUYERRequestforPayoutAdjustmentwithrelativeadjustment"
                },
                "example": {
                  "transactionId": "TRbc991b1b-a5fe-4375-a57f-311bf081eae2",
                  "result": {
                    "requestJobID": "JQI_v2-TgZ9W5Wd5as1PBPyNLXBrNPN-WkngQMoucaOW1hQJJpQay8vErGHg"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{buyerAccountId}/calls/requestConversionOverride": {
      "post": {
        "tags": [
          "Call Adjustments"
        ],
        "summary": "BUYER Request for Payout Adjustment (with absolute adjustment)",
        "description": "Request to allow a buyer to send a request to the admin for the account handling the specified call to have the revenue amount adjusted. This request will send a notice to the admin of the account handling the campaign requesting an adjustment to the revenue for this call. The account admin will have final say in how much the actual adjustment is. When the admin receives the requested adjustment, it will automatically be converted into a _relative_ adjustment to make the final amount equal to the _absolute_ amount specified in this request.\n\n#### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>inboundCallId</code></td>\n<td>The ID of the call you wish to make and adjustment for. You can get Call IDs using the <a href=\"#get-logs-of-calls-associated-with-account\">Call Log Requests</a>\n</tr>\n<tr>\n<td><code>reason</code></td>\n<td>The reason you are requesting the revenue amount be adjusted</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The new amount you want as the revenue. This must be a positive number</td>\n</tr>\n</table>",
        "operationId": "BUYERRequestforPayoutAdjustment(withabsoluteadjustment)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{buyerApiToken}}"
            }
          },
          {
            "name": "buyerAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BUYERRequestforPayoutAdjustmentwithabsoluteadjustmentRequest"
              },
              "example": {
                "inboundCallId": "{{InboundCallId}}",
                "reason": "Test call revenue adjustment request",
                "amount": 0.4
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Feb 2021 18:44:16 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "272"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BUYERRequestforPayoutAdjustmentwithabsoluteadjustment"
                },
                "example": {
                  "transactionId": "TR52b02b55-30b1-49c9-a747-9972d6e588f8",
                  "result": {
                    "requestJobID": "JQI_v2-TgZ9W5Wd5as1PBPyNLXBrNPN-WkngQMoucaOW1hQJJpQay8vErGHg"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calllogs/columns": {
      "get": {
        "tags": [
          "Get Call Logs"
        ],
        "summary": "Get Column Names",
        "description": "This request will show you all of the available columns that can be inculded in the Call Log.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n### Response Overview\n<hr>\n<br>\n\nThe body of the response to this request will contatain an array of objects. Each of the objects in this array is for one column available on the report and has some details to help you use them. If you want to include a column and/or sort by it, you will pull the `id` from the object for that column.",
        "operationId": "GetColumnNames",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 03 Feb 2021 15:59:34 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "transfer-encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetColumnNames"
                },
                "example": {
                  "isSuccessful": true,
                  "transactionId": "TReb919019-66ad-4cc2-accd-f03126d55b45",
                  "columns": [
                    {
                      "id": "campaignName",
                      "title": "Campaign",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "publisherName",
                      "title": "Publisher",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "targetName",
                      "title": "Target",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "targetNumber",
                      "title": "Target Number",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "buyer",
                      "title": "Buyer",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "targetGroupName",
                      "title": "Target Group",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "campaignId",
                      "title": "Campaign ID",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "publisherId",
                      "title": "Publisher ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "publisherSubId",
                      "title": "Publisher Sub ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "targetId",
                      "title": "Target ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "targetSubId",
                      "title": "Target Sub ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "buyerId",
                      "title": "Buyer ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "targetBuyerSubId",
                      "title": "Buyer Sub ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "inboundCallId",
                      "title": "Inbound Call ID",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate",
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "callDt",
                      "title": "Call Date",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate",
                        "buyer"
                      ],
                      "type": "date",
                      "isTag": false,
                      "groupName": "Call",
                      "supportsFilter": false,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "targetGroupId",
                      "title": "Target Group ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "inboundPhoneNumber",
                      "title": "Caller ID",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate",
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "number",
                      "title": "Number",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "numberId",
                      "title": "Number ID",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "isFromNumberPool",
                      "title": "Number Pool Used",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Impression",
                      "filterGroupName": "Impression",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "numberPoolId",
                      "title": "Number Pool ID",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Impression",
                      "filterGroupName": "Impression",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "numberPoolName",
                      "title": "Number Pool",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Impression",
                      "filterGroupName": "Impression",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "timeToCallInSeconds",
                      "title": "Time To Call",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate",
                        "buyer"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Time",
                      "filterGroupName": "Time",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "callCompletedDt",
                      "title": "Call Complete Timestamp",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "date",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": false,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "callConnectionDt",
                      "title": "Call Connected Timestamp",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "date",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": false,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "callLengthInSeconds",
                      "title": "Call Length",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Time",
                      "filterGroupName": "Time",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "connectedCallLengthInSeconds",
                      "title": "Connected Call Length",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Time",
                      "filterGroupName": "Time",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "endCallSource",
                      "title": "End Call Source",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "noPayoutReason",
                      "title": "No Payout Reason",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "noConversionReason",
                      "title": "No Conversion Reason",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "blockReason",
                      "title": "Block Reason",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "incompleteCallReason",
                      "title": "Incomplete Call Reason",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "hasConnected",
                      "title": "Connected",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "offlineConversionUploaded",
                      "title": "Offline Conversion Uploaded",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "hasPayout",
                      "title": "Paid Out",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "wasConversionAdjusted",
                      "title": "Conversion Adjusted",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Adjustment",
                      "filterGroupName": "Adjustment",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "conversionAdjustedCalls",
                      "title": "Conversion-Adjusted",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "Adjustment",
                      "filterGroupName": "Adjustment",
                      "supportsFilter": false,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "wasPayoutAdjusted",
                      "title": "Payout Adjusted",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Adjustment",
                      "filterGroupName": "Adjustment",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "hasAnnotations",
                      "title": "Has Annotations",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Adjustment",
                      "filterGroupName": "Adjustment",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "isDuplicate",
                      "title": "Is Duplicate",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "hasPreviouslyConnected",
                      "title": "Previously Connected",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "isIncomplete",
                      "title": "Incomplete",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "hasRecording",
                      "title": "Has Recording",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "hasConverted",
                      "title": "Converted",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "isLive",
                      "title": "Is Live",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate",
                        "buyer"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "wasBlocked",
                      "title": "Blocked",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "tcpaCount",
                      "title": "TCPA Shield Count",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "TCPAShield",
                      "filterGroupName": "TCPAShield",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "wasBlockedByTCPA",
                      "title": "TCPA Shield Blocked",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "TCPAShield",
                      "filterGroupName": "TCPAShield",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "dataEnrichmentCount",
                      "title": "ICP Count",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "ICP",
                      "filterGroupName": "ICP",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "ivrDepth",
                      "title": "IVR Depth",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "IVR",
                      "filterGroupName": "IVR",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "convAdjustmentsRejectedCount",
                      "title": "Rejected Adjustments",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "Adjustment",
                      "filterGroupName": "Adjustment",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "convAdjustmentRequestCount",
                      "title": "Requested Adjustments",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "Adjustment",
                      "filterGroupName": "Adjustment",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "convAdjustmentsApproved",
                      "title": "Approved Adjustments",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "Adjustment",
                      "filterGroupName": "Adjustment",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "convAdjustmentsApprovedAmount",
                      "title": "Approved Adjustment",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "double",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "conversionAmount",
                      "title": "Revenue",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "profitNet",
                      "title": "Profit Net Telco",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "profitGross",
                      "title": "Profit",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "payoutAmount",
                      "title": "Payout",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "hasVoiceMail",
                      "title": "Voicemail",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "totalCost",
                      "title": "Total Cost",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "telcoCost",
                      "title": "Telco Cost",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "icpCost",
                      "title": "ICP Cost",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "ICP",
                      "filterGroupName": "ICP",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "tcpaCost",
                      "title": "TCPA Shield Cost",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "TCPAShield",
                      "filterGroupName": "TCPAShield",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "recordingUrl",
                      "title": "Recording URL",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate",
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerTargetName",
                      "title": "Target",
                      "roles": [
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerTargetNumber",
                      "title": "Target Number",
                      "roles": [
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerTargetId",
                      "title": "Target ID",
                      "roles": [
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerTargetSubId",
                      "title": "Target Sub ID",
                      "roles": [
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Popular",
                      "filterGroupName": "Name/ID",
                      "supportsFilter": true,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerCallLengthInSeconds",
                      "title": "Duration",
                      "roles": [
                        "buyer"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Time",
                      "filterGroupName": "Time",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerConversionAmount",
                      "title": "Payout",
                      "roles": [
                        "buyer"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerTimeToConnectInSeconds",
                      "title": "Time To Connect",
                      "roles": [
                        "buyer"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Time",
                      "filterGroupName": "Time",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerHasConnected",
                      "title": "Connected",
                      "roles": [
                        "buyer"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Call",
                      "filterGroupName": "Call",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerHasConverted",
                      "title": "Paid out",
                      "roles": [
                        "buyer"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "Performance",
                      "filterGroupName": "Performance",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "buyerConversionAdjustmentStatus",
                      "title": "Conversion Adjustment Status",
                      "roles": [
                        "buyer"
                      ],
                      "type": "keyword",
                      "isTag": false,
                      "groupName": "Call",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "pingSuccessCount",
                      "title": "Ping Successes",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "Ping Tree",
                      "filterGroupName": "Ping Tree",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "pingFailCount",
                      "title": "Ping Failures",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "long",
                      "isTag": false,
                      "groupName": "Ping Tree",
                      "filterGroupName": "Ping Tree",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "pingTotalBidAmount",
                      "title": "Ping Tree Bid Amount",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Ping Tree",
                      "filterGroupName": "Ping Tree",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "pingDynamicCallLengthInSeconds",
                      "title": "Dynamic Duration",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Ping Tree",
                      "filterGroupName": "Ping Tree",
                      "supportsFilter": false,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "winningBid",
                      "title": "Winning Bid",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "RTB",
                      "filterGroupName": "RTB",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "winningBidCallAccepted",
                      "title": "Winning Bid - Call Accepted",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "RTB",
                      "filterGroupName": "RTB",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "winningBidCallRejected",
                      "title": "Winning Bid - Call Rejected",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "boolean",
                      "isTag": false,
                      "groupName": "RTB",
                      "filterGroupName": "RTB",
                      "supportsFilter": true,
                      "supportsSorting": true,
                      "isComputed": false
                    },
                    {
                      "id": "timeToConnectInSeconds",
                      "title": "Time To Connect",
                      "roles": [
                        "admin",
                        "user",
                        "affiliate"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Time",
                      "filterGroupName": "Time",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": true
                    },
                    {
                      "id": "buyerConnectedCallLengthInSeconds",
                      "title": "Connected Call Length",
                      "roles": [
                        "buyer"
                      ],
                      "type": "timespan",
                      "isTag": false,
                      "groupName": "Time",
                      "filterGroupName": "Time",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": false
                    },
                    {
                      "id": "avgPingTreeBidAmount",
                      "title": "Avg. Ping Tree Bid Amount",
                      "roles": [
                        "admin",
                        "user"
                      ],
                      "type": "money",
                      "isTag": false,
                      "groupName": "Ping Tree",
                      "filterGroupName": "Ping Tree",
                      "supportsFilter": false,
                      "supportsSorting": false,
                      "isComputed": true
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calllogs/tags": {
      "get": {
        "tags": [
          "Get Call Logs"
        ],
        "summary": "Get Tags for Filtering Call Log",
        "description": "This request will allow you to view all tags available for filtering the call log by specific values. Tags are broken down by `Type` and each `Type` is broken down by `Name`. In order to filter by a tag you must include the `Type` `Name` and a `Value`.\n<br>\n<br>\n\nThe first example to the right shows a list of all of the tag `Types`. The subsequent examples to the right show the breakdown of the `Names` available for a few of the `Types`. To see how to implement these tags, check out the \"Get Call Log With Filters\" example to the right of the \"POST Get Call Log\" request below.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)",
        "operationId": "GetTagsforFilteringCallLog",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Feb 2021 22:53:48 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "274"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagNamesforTypeInboundNumbers"
                },
                "example": {
                  "transactionId": "TR2c6b0135-df39-4b6b-813d-2825650fe94a",
                  "values": [
                    "AreaCode",
                    "CountryCode",
                    "CountryDigits",
                    "IsPhoneNumberValid",
                    "Number",
                    "Number-NoPlus",
                    "NumberE164",
                    "Prefix",
                    "Region",
                    "State",
                    "Suffix"
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calllogs": {
      "post": {
        "tags": [
          "Get Call Logs"
        ],
        "summary": "Get Call Log",
        "description": "Request to get a log of the calls associated with this account. This log can be exported as a CSV using the \"POST Export Call Log - CSV\" request below to be more useful for human consumption. The call log must have a date range, which will return all calls within the date range and by default they will be sorted by \"Call Date\" in descending order. By default, all available columns will be displayed. Using the optional parameters will allow you to choose which columns are displayed, how the results are sorted, and filter by columns or available tags.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>reportStart</code></td>\n        <td>Beginning of report time period in UTC format</td>\n    </tr>\n    <tr>\n        <td><code>reportEnd</code></td>\n        <td>Beginning of report time period in UTC format</td>\n    </tr>\n</table>\n\n#### Optional Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>valueColumns</code></td>\n        <td>Array of objects to select which columns are displayed. A list of available columns can be found by using the \"GET Get Column Names\" request above. See \"Get Call Log With Specified Columns\" example to the right for implementation.</td>\n    </tr>\n    <tr>\n        <td><code>orderByColumns</code></td>\n        <td>Sorts the report in ascending or descending order by using <code>asc</code> or <code>desc</code> as the direction. Report can be sorted by multiple column and will prioritize them by their order in the array. So in the \"Get Call Log Sorted\" example to the right, the report will have all available columns displayed, sorted by <code>numberId</code> then if there are multiple rows with the same <code>numberId</code>, those columns will be sorted by <code>callDt</code>.\n    </tr>\n<tr>\n<td><code>size</code></td>\n<td>The maximum number of calls you want to display on the report. The maximum size for reports is 1000. If you want a report with more than 100 calls, see the \"POST Export Call Log-CSV\" request below.</td>\n</tr>\n<tr>\n<td><code>offset</code></td>\n<td>The number of calls you want to omit from the beginning of the report. So an offset value of 100 will make the report start with what would otherwise be call number 101.<p>* For more information on size/offset and how to create a paginated report, see the note below.</td>\n</tr>\n    <tr>\n        <td><code>filters</code></td>\n        <td>Array of filters to apply to the report. Within the array, filters are grouped into sub-arrays with the key of <code>anyConditionToMatch</code> and can be broken down by the following:</td>\n    </tr>\n    <tr>\n        <td></td>\n        <td><p><code>column</code></p><p>Filter by a value in any of the columns included in the call log or by a tag.</p><hr><p><code>value</code></p><p>The value you want to filter based on</p><hr><p><code>isNegativeMatch</code></p><p>Boolean value if set to \"true\" this will make the filter the opposite.</p><hr><p><code>comparisonType</code></p><p>The type of comparison you want to apply to the value for the filter</p><hr><p>See the <b>notes</b> below for more information about implementing filters.</p></td>\n    </tr>\n</table>\n<br>\n\n__Note About Pagination:__ If you want to create a report with multiple pages, you can do that using the `size` and `offset` parameters. If you have a report with 1000 calls and want it broken into 10 pages with 100 calls each, you will need to make 10 requests with `size:100` and the following values for `offset`:\n* `offset:0` will return calls 1-100\n* `offset:100` will return calls 101-200\n* `offset:200` will return calls 201-300\n\nContinue increasing the `offset` by 100 for each page until you have all 10 pages of the report.\n \n\n__Notes About Filters:__<br>\nThe `comparisonType` has the following options:\n* \"EQUALS\"\n* \"CONTAINS\"\n* \"BEGINS_WITH\"\n* \"GREATER_THAN\"\n* \"LESS_THAN\"\n\nEach `comparisonType` can be negated by changing the `isNegativeMatch` value to \"true\". For example:<br>\n```\n\"column\": \"tag:Date:Day\",\n\"value\": \"1\",\n\"isNegativeMatch\": false,\n\"comparisonType\": \"EQUALS\"\n```\n\nwill return all calls with a day value equal to 1, while<br>\n```\n\"column\": \"tag:Date:Day\",\n\"value\": \"1\",\n\"isNegativeMatch\": true,\n\"comparisonType\": \"EQUALS\"\n```\n\nwill return calls from all other days of the month.<br>\n<br>\n\n__Combining Filters:__<br>\nFilters can be combined as an __OR__ statement by putting them in the same `anyConditionToMatch` sub-array. <br>\nFilters can be combined as an __AND__ statement by putting them in separate `anyConditionToMatch` sub-arrays.<br>\nThe \"Get Call Log with Filters\" example to the right shows how to filter for calls made on the 1st __OR__ 3rd day of the month __AND__ with a `hasConnected` value of \"yes\".",
        "operationId": "GetCallLog",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallLogRequest"
              },
              "example": {
                "reportEnd": "2021-02-04T07:59:59Z",
                "reportStart": "2021-02-01T08:00:00Z"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Feb 2021 23:02:05 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "transfer-encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallLogWithFilters"
                },
                "example": {
                  "isSuccessful": true,
                  "transactionId": "TR44a98169-3226-42bc-9ca0-bb2b3a055059",
                  "report": {
                    "partialResult": false,
                    "records": [
                      {
                        "campaignName": "API Test",
                        "publisherName": "You",
                        "targetName": "Ringba Test Target",
                        "targetNumber": "+16317918378",
                        "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "publisherSubId": "",
                        "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                        "inboundCallId": "v2cd7lW_KVB95pJnSeRSRBMHuL_MOzcMTn5A8qL5_Hc178aRgTZhj-JA",
                        "callDt": 1612368427115,
                        "inboundPhoneNumber": "+17813364178",
                        "number": "+18884143472",
                        "numberId": "PV18884143472",
                        "isFromNumberPool": false,
                        "numberPoolId": "",
                        "numberPoolName": "",
                        "timeToCallInSeconds": 0,
                        "callCompletedDt": 1612368438741,
                        "callConnectionDt": 1612368429090,
                        "callLengthInSeconds": 11,
                        "connectedCallLengthInSeconds": 9,
                        "endCallSource": "Caller",
                        "hasConnected": true,
                        "hasPayout": true,
                        "hasPreviouslyConnected": false,
                        "hasRecording": true,
                        "hasConverted": true,
                        "isLive": false,
                        "conversionAmount": 0,
                        "profitNet": -0.04,
                        "profitGross": 0,
                        "payoutAmount": 0,
                        "totalCost": 0.04,
                        "telcoCost": 0.04,
                        "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=y9MzL4Piohc0PA6gvEzyfhSlFSkTP%2fHJ%2bNC%2bNCf6fBCBZNm7wxigrtck1p6%2bfD84WOvvjfU95PfXAccJLcuGmiet2Au4MliudDK0yw0aNTpOb5jjqa9hKlTD3z0cLQbcWuGtcoBvH37qH3tuSN4P9%2b%2f4pMSjfBKuvgDbJf9d%2f7M9ah9YORsV%2fgX6nLx4dic3ci9EGmn8w1Jh6upQ%2fOFsIsbf1qNSwy9LukHjOnRTmz4Nwms11oUZ9YAHFiVjQRE%2fPJz9ffBBoO841bApMvATxNBeh9k%3d",
                        "timeToConnectInSeconds": 2
                      },
                      {
                        "campaignName": "API Test",
                        "publisherName": "You",
                        "targetName": "Ringba Test Target",
                        "targetNumber": "+16317918378",
                        "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "publisherSubId": "",
                        "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                        "inboundCallId": "v2147G0eMkK4nw_BU3SAcXiDHM4reCssygiNWj_2dEJ78LxV4pFrCWWw",
                        "callDt": 1612219032605,
                        "inboundPhoneNumber": "+17745459961",
                        "number": "+18884143472",
                        "numberId": "PV18884143472",
                        "isFromNumberPool": false,
                        "numberPoolId": "",
                        "numberPoolName": "",
                        "timeToCallInSeconds": 0,
                        "callCompletedDt": 1612219037364,
                        "callConnectionDt": 1612219034636,
                        "callLengthInSeconds": 4,
                        "connectedCallLengthInSeconds": 2,
                        "endCallSource": "Caller",
                        "hasConnected": true,
                        "hasPayout": true,
                        "hasPreviouslyConnected": false,
                        "hasRecording": true,
                        "hasConverted": true,
                        "isLive": false,
                        "conversionAmount": 0,
                        "profitNet": -0.04,
                        "profitGross": 0,
                        "payoutAmount": 0,
                        "totalCost": 0.04,
                        "telcoCost": 0.04,
                        "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
                        "timeToConnectInSeconds": 2
                      },
                      {
                        "campaignName": "API Test",
                        "publisherName": "You",
                        "targetName": "Ringba Test Target",
                        "targetNumber": "+16317918378",
                        "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "publisherSubId": "",
                        "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                        "inboundCallId": "v2YHKrf7eZPPPJ06nrZS4cdrhZWLN1OVXpcQkH9zG6qHKFQqzjiWc0Gw",
                        "callDt": 1612218085439,
                        "inboundPhoneNumber": "+16192488427",
                        "number": "+18334013665",
                        "numberId": "CLAOGNEH",
                        "isFromNumberPool": false,
                        "numberPoolId": "",
                        "numberPoolName": "",
                        "timeToCallInSeconds": 0,
                        "callCompletedDt": 1612218091303,
                        "callConnectionDt": 1612218087256,
                        "callLengthInSeconds": 5,
                        "connectedCallLengthInSeconds": 4,
                        "endCallSource": "Caller",
                        "hasConnected": true,
                        "hasPayout": true,
                        "hasPreviouslyConnected": false,
                        "hasRecording": true,
                        "hasConverted": true,
                        "isLive": false,
                        "conversionAmount": 0,
                        "profitNet": -0.04,
                        "profitGross": 0,
                        "payoutAmount": 0,
                        "totalCost": 0.04,
                        "telcoCost": 0.04,
                        "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
                        "timeToConnectInSeconds": 1
                      },
                      {
                        "campaignName": "API Test",
                        "publisherName": "You",
                        "targetName": "Ringba Test Target",
                        "targetNumber": "+16317918378",
                        "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "publisherSubId": "",
                        "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                        "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
                        "callDt": 1612219718965,
                        "inboundPhoneNumber": "+16613804706",
                        "number": "+18884143472",
                        "numberId": "PV18884143472",
                        "isFromNumberPool": false,
                        "numberPoolId": "",
                        "numberPoolName": "",
                        "timeToCallInSeconds": 0,
                        "callCompletedDt": 1612219731658,
                        "callConnectionDt": 1612219720840,
                        "callLengthInSeconds": 12,
                        "connectedCallLengthInSeconds": 10,
                        "endCallSource": "Caller",
                        "hasConnected": true,
                        "hasPayout": true,
                        "hasAnnotations": true,
                        "hasPreviouslyConnected": false,
                        "hasRecording": true,
                        "hasConverted": true,
                        "isLive": false,
                        "conversionAmount": 0,
                        "profitNet": -0.04,
                        "profitGross": 0,
                        "payoutAmount": 0,
                        "totalCost": 0.04,
                        "telcoCost": 0.04,
                        "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                        "timeToConnectInSeconds": 2
                      }
                    ],
                    "totalCount": 4
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calllogs/detail": {
      "post": {
        "tags": [
          "Get Call Logs"
        ],
        "summary": "Get Details About Specific Calls",
        "description": "Request to view more detail about specific calls using the `InboundCallId` which can be found using the \"POST Get Call Log\" request above. \n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>InboundCallId</code></td>\n        <td>IDs of one or more calls</td>\n    </tr>\n</table>\n<br>\n\n__NOTE:__ Even if the request body only contains one `InboundCallId` it must be in an array. If requesting details for more than one `InboundCallId` separate each Id with a comma.\n\n<!-- `InboundCallId` IDs of one or more calls\n<br> -->",
        "operationId": "GetDetailsAboutSpecificCalls",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDetailsAboutSpecificCallsRequest"
              },
              "example": {
                "InboundCallIds": [
                  "{{InboundCallId}}",
                  "{{InboundCallId2}}",
                  "{{InboundCallId3}}"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 02 Feb 2021 22:47:00 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "transfer-encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutSingleCall"
                },
                "example": {
                  "isSuccessful": true,
                  "transactionId": "TRb5d57064-4012-48d8-9803-f3647729fb2e",
                  "report": {
                    "records": [
                      {
                        "campaignName": "API Test",
                        "publisherName": "You",
                        "targetName": "Ringba Test Target",
                        "targetNumber": "+16317918378",
                        "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "publisherSubId": "",
                        "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                        "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
                        "callDt": 1612219718965,
                        "inboundPhoneNumber": "+16613804706",
                        "number": "+18884143472",
                        "numberId": "PV18884143472",
                        "isFromNumberPool": false,
                        "numberPoolId": "",
                        "numberPoolName": "",
                        "timeToCallInSeconds": 0,
                        "callCompletedDt": 1612219731658,
                        "callConnectionDt": 1612219720840,
                        "callLengthInSeconds": 12,
                        "connectedCallLengthInSeconds": 10,
                        "endCallSource": "Caller",
                        "hasConnected": true,
                        "hasPayout": true,
                        "hasPreviouslyConnected": false,
                        "hasRecording": true,
                        "hasConverted": true,
                        "isLive": false,
                        "conversionAmount": 0,
                        "profitNet": -0.04,
                        "profitGross": 0,
                        "payoutAmount": 0,
                        "totalCost": 0.04,
                        "telcoCost": 0.04,
                        "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                        "timeToConnectInSeconds": 2,
                        "events": [
                          {
                            "name": "CallPlanDetail",
                            "ineligibleTargets": "",
                            "eligibleOrderedTargets": "Ringba Test Target[1,1]",
                            "dtStamp": "2021-02-01T22:48:38.9811491Z"
                          },
                          {
                            "targetBuyerSubId": "",
                            "targetName": "Ringba Test Target",
                            "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                            "targetBuyer": "",
                            "targetBuyerId": "",
                            "totalAmount": 0.04,
                            "targetNumber": "+16317918378",
                            "name": "TargetDialed",
                            "dtStamp": "2021-02-01T22:48:38.9967945Z",
                            "targetSubId": ""
                          },
                          {
                            "targetBuyerSubId": "",
                            "targetName": "Ringba Test Target",
                            "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                            "targetBuyer": "",
                            "targetBuyerId": "",
                            "timeToConnect": 1,
                            "callConnectionDt": 1612219720840,
                            "targetNumber": "+16317918378",
                            "name": "ConnectedCall",
                            "dtStamp": "2021-02-01T22:48:40.8405533Z",
                            "targetSubId": ""
                          },
                          {
                            "targetBuyerSubId": "",
                            "targetBuyer": "",
                            "targetBuyerId": "",
                            "callLengthInSeconds": 12,
                            "callCompletedDt": 1612219731658,
                            "totalAmount": 0.04,
                            "recordingUrl": "",
                            "name": "CompletedCall",
                            "dtStamp": "2021-02-01T22:48:51.6589290Z"
                          },
                          {
                            "targetBuyerSubId": "",
                            "targetName": "Ringba Test Target",
                            "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                            "targetBuyer": "",
                            "targetBuyerId": "",
                            "conversionAmount": 0,
                            "payoutAmount": 0,
                            "targetNumber": "+16317918378",
                            "name": "ConvertedCall",
                            "dtStamp": "2021-02-01T22:48:51.6745531Z",
                            "targetSubId": ""
                          },
                          {
                            "name": "PayoutCall",
                            "dtStamp": "2021-02-01T22:48:51.6901622Z",
                            "payoutAmount": 0
                          },
                          {
                            "name": "EndCallSource",
                            "source": "Caller",
                            "dtStamp": "2021-02-01T22:48:51.6901622Z"
                          },
                          {
                            "targetBuyer": "",
                            "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                            "name": "CallRecordingMigrated",
                            "targetBuyerId": "",
                            "dtStamp": "2021-02-01T22:48:52.7140912Z"
                          }
                        ],
                        "message-tags": [
                          {
                            "name": "testingtags",
                            "source": "Impression",
                            "type": "DialedNumber",
                            "value": "12345",
                            "value-num": 12345
                          },
                          {
                            "name": "Number",
                            "source": "Call",
                            "type": "DialedNumber",
                            "value": "+18884143472",
                            "value-num": 18884143472
                          },
                          {
                            "name": "UTCHour",
                            "source": "Call",
                            "type": "Time",
                            "value": "22",
                            "value-num": 22
                          },
                          {
                            "name": "UTCMinute",
                            "source": "Call",
                            "type": "Time",
                            "value": "48",
                            "value-num": 48
                          },
                          {
                            "name": "UTCSecond",
                            "source": "Call",
                            "type": "Time",
                            "value": "38",
                            "value-num": 38
                          },
                          {
                            "name": "UTCOffset",
                            "source": "Call",
                            "type": "Time",
                            "value": "-8",
                            "value-num": -8
                          },
                          {
                            "name": "Hour",
                            "source": "Call",
                            "type": "Time",
                            "value": "14",
                            "value-num": 14
                          },
                          {
                            "name": "Minute",
                            "source": "Call",
                            "type": "Time",
                            "value": "48",
                            "value-num": 48
                          },
                          {
                            "name": "Second",
                            "source": "Call",
                            "type": "Time",
                            "value": "38",
                            "value-num": 38
                          },
                          {
                            "name": "UTCWeekDay",
                            "source": "Call",
                            "type": "Date",
                            "value": "Monday"
                          },
                          {
                            "name": "UTCDay",
                            "source": "Call",
                            "type": "Date",
                            "value": "1",
                            "value-num": 1
                          },
                          {
                            "name": "UTCMonth",
                            "source": "Call",
                            "type": "Date",
                            "value": "2",
                            "value-num": 2
                          },
                          {
                            "name": "UTCYear",
                            "source": "Call",
                            "type": "Date",
                            "value": "2021",
                            "value-num": 2021
                          },
                          {
                            "name": "WeekDay",
                            "source": "Call",
                            "type": "Date",
                            "value": "Monday"
                          },
                          {
                            "name": "Day",
                            "source": "Call",
                            "type": "Date",
                            "value": "1",
                            "value-num": 1
                          },
                          {
                            "name": "Month",
                            "source": "Call",
                            "type": "Date",
                            "value": "2",
                            "value-num": 2
                          },
                          {
                            "name": "Year",
                            "source": "Call",
                            "type": "Date",
                            "value": "2021",
                            "value-num": 2021
                          },
                          {
                            "name": "TimeZone",
                            "source": "Call",
                            "type": "Date",
                            "value": "Pacific Standard Time"
                          },
                          {
                            "name": "Name",
                            "source": "Call",
                            "type": "Campaign",
                            "value": "API Test"
                          },
                          {
                            "name": "Id",
                            "source": "Call",
                            "type": "Campaign",
                            "value": "CA74c0b7f1f3824246b73e72a9238b4bfc"
                          },
                          {
                            "name": "TrackingId",
                            "source": "Call",
                            "type": "Campaign",
                            "value": ""
                          },
                          {
                            "name": "Company",
                            "source": "Call",
                            "type": "Publisher",
                            "value": "You"
                          },
                          {
                            "name": "Name",
                            "source": "Call",
                            "type": "Publisher",
                            "value": "You"
                          },
                          {
                            "name": "Id",
                            "source": "Call",
                            "type": "Publisher",
                            "value": "AFbd21c4a3274c4382aa98919d5149baf3"
                          },
                          {
                            "name": "SubId",
                            "source": "Call",
                            "type": "Publisher",
                            "value": ""
                          },
                          {
                            "name": "Number",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "+16613804706",
                            "value-num": 16613804706
                          },
                          {
                            "name": "Number-NoPlus",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "16613804706",
                            "value-num": 16613804706
                          },
                          {
                            "name": "CountryCode",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "US"
                          },
                          {
                            "name": "CountryDigits",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "1",
                            "value-num": 1
                          },
                          {
                            "name": "AreaCode",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "661",
                            "value-num": 661
                          },
                          {
                            "name": "Prefix",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "380",
                            "value-num": 380
                          },
                          {
                            "name": "Suffix",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "4706",
                            "value-num": 4706
                          },
                          {
                            "name": "Region",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "California"
                          },
                          {
                            "name": "State",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "CA"
                          },
                          {
                            "name": "IsPhoneNumberValid",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "yes"
                          },
                          {
                            "name": "NumberE164",
                            "source": "Call",
                            "type": "InboundNumber",
                            "value": "+16613804706",
                            "value-num": 16613804706
                          },
                          {
                            "name": "Total",
                            "source": "Call",
                            "type": "CallLength",
                            "value": "12",
                            "value-num": 12
                          },
                          {
                            "name": "FromConnect",
                            "source": "Call",
                            "type": "CallLength",
                            "value": "10",
                            "value-num": 10
                          },
                          {
                            "name": "FromDial",
                            "source": "Call",
                            "type": "CallLength",
                            "value": "11",
                            "value-num": 11
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calllogs/export/csv": {
      "post": {
        "tags": [
          "Export Call Logs"
        ],
        "summary": "Export Call Log - CSV",
        "description": "Request to generate a CSV table for the call log. \n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>reportStart</code></td>\n        <td>Beginning of report time period in UTC format</td>\n    </tr>\n    <tr>\n        <td><code>reportEnd</code></td>\n        <td>Beginning of report time period in UTC format</td>\n    </tr>\n    <tr>\n        <td><code>valueColumns</code></td>\n        <td>Columns desired on the report, at least one is required. The example to the right shows all columns available, but you only need to include the ones you want displayed on the report</td>\n    </tr>\n</table>\n\n#### Optional Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>orderByColumns</code></td>\n        <td>Sorts the report in ascending or descending order by using `asc` or `desc` as the direction</td>\n    </tr>\n</table>\n\n__NOTE:__ The report can be sorted by multiple columns and will prioritize them by their order in the array. So in the following example, the report will have all available columns displayed, sorted by `numberId` then if there are multiple rows with the same `numberId`, those columns will be sorted by `callDt`.\n\n### Response Overview\n<hr>\n<br>\n\nIf successful, this request will return something like `\"id\": EJ772657c816e54f4face3c917f2a5f28c`. This `id` can then be used in the next request \"GET Export CSV By Job Id\" in order to retrieve the CSV file.",
        "operationId": "ExportCallLog-CSV",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportCallLog-CSVRequest"
              },
              "example": {
                "reportEnd": "2021-02-02T07:59:59Z",
                "reportStart": "2021-02-01T08:00:00Z",
                "orderByColumns": [
                  {
                    "column": "numberId",
                    "direction": "desc"
                  },
                  {
                    "column": "callDt",
                    "direction": "desc"
                  }
                ],
                "valueColumns": [
                  {
                    "column": "campaignName"
                  },
                  {
                    "column": "publisherName"
                  },
                  {
                    "column": "targetName"
                  },
                  {
                    "column": "targetNumber"
                  },
                  {
                    "column": "buyer"
                  },
                  {
                    "column": "targetGroupName"
                  },
                  {
                    "column": "campaignId"
                  },
                  {
                    "column": "publisherId"
                  },
                  {
                    "column": "publisherSubId"
                  },
                  {
                    "column": "targetId"
                  },
                  {
                    "column": "targetSubId"
                  },
                  {
                    "column": "buyerId"
                  },
                  {
                    "column": "targetBuyerSubId"
                  },
                  {
                    "column": "targetGroupId"
                  },
                  {
                    "column": "inboundCallId"
                  },
                  {
                    "column": "callDt"
                  },
                  {
                    "column": "inboundPhoneNumber"
                  },
                  {
                    "column": "number"
                  },
                  {
                    "column": "numberId"
                  },
                  {
                    "column": "callCompletedDt"
                  },
                  {
                    "column": "callConnectionDt"
                  },
                  {
                    "column": "endCallSource"
                  },
                  {
                    "column": "hasConnected"
                  },
                  {
                    "column": "isIncomplete"
                  },
                  {
                    "column": "hasRecording"
                  },
                  {
                    "column": "isLive"
                  },
                  {
                    "column": "recordingUrl"
                  },
                  {
                    "column": "isFromNumberPool"
                  },
                  {
                    "column": "numberPoolId"
                  },
                  {
                    "column": "numberPoolName"
                  },
                  {
                    "column": "timeToCallInSeconds"
                  },
                  {
                    "column": "callLengthInSeconds"
                  },
                  {
                    "column": "connectedCallLengthInSeconds"
                  },
                  {
                    "column": "timeToConnectInSeconds"
                  },
                  {
                    "column": "noPayoutReason"
                  },
                  {
                    "column": "noConversionReason"
                  },
                  {
                    "column": "blockReason"
                  },
                  {
                    "column": "incompleteCallReason"
                  },
                  {
                    "column": "offlineConversionUploaded"
                  },
                  {
                    "column": "hasPayout"
                  },
                  {
                    "column": "isDuplicate"
                  },
                  {
                    "column": "hasPreviouslyConnected"
                  },
                  {
                    "column": "hasConverted"
                  },
                  {
                    "column": "wasBlocked"
                  },
                  {
                    "column": "convAdjustmentsApprovedAmount"
                  },
                  {
                    "column": "conversionAmount"
                  },
                  {
                    "column": "profitNet"
                  },
                  {
                    "column": "profitGross"
                  },
                  {
                    "column": "payoutAmount"
                  },
                  {
                    "column": "hasVoiceMail"
                  },
                  {
                    "column": "totalCost"
                  },
                  {
                    "column": "telcoCost"
                  },
                  {
                    "column": "wasConversionAdjusted"
                  },
                  {
                    "column": "conversionAdjustedCalls"
                  },
                  {
                    "column": "wasPayoutAdjusted"
                  },
                  {
                    "column": "hasAnnotations"
                  },
                  {
                    "column": "convAdjustmentsRejectedCount"
                  },
                  {
                    "column": "convAdjustmentRequestCount"
                  },
                  {
                    "column": "convAdjustmentsApproved"
                  },
                  {
                    "column": "tcpaCount"
                  },
                  {
                    "column": "wasBlockedByTCPA"
                  },
                  {
                    "column": "tcpaCost"
                  },
                  {
                    "column": "dataEnrichmentCount"
                  },
                  {
                    "column": "icpCost"
                  },
                  {
                    "column": "ivrDepth"
                  },
                  {
                    "column": "pingSuccessCount"
                  },
                  {
                    "column": "pingFailCount"
                  },
                  {
                    "column": "pingTotalBidAmount"
                  },
                  {
                    "column": "pingDynamicCallLengthInSeconds"
                  },
                  {
                    "column": "avgPingTreeBidAmount"
                  },
                  {
                    "column": "winningBid"
                  },
                  {
                    "column": "winningBidCallAccepted"
                  },
                  {
                    "column": "winningBidCallRejected"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 03 Feb 2021 00:38:16 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "transfer-encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ExportCallLog-CSV"
                },
                "example": {
                  "id": "EJ772657c816e54f4face3c917f2a5f28c"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/calllogs/export/{CSVJobId}": {
      "get": {
        "tags": [
          "Export Call Logs"
        ],
        "summary": "Export CSV By Job Id",
        "description": "This request takes the `id` from the previous request in the place of {CSVJobId}. \n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Response Overview\n<hr>\n<br>\n\nThis request will return an object with a \"status\". If the \"status\" is \"Error\" that means there is a problem with the CSV you attempted to generate in the previous request. If the \"status\" is \"Pending\" that means your report is not yet ready and you need to try again until the \"status\" changes to \"Ready\". Once you get a \"status\" of \"Ready\" the response will also have a \"url\". Copy this \"url\" and paste it into a browser window which will automatically initiate a download of a zip file. Download and unzip this file to see the CSV report you just generated.",
        "operationId": "ExportCSVByJobId",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CSVJobId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 03 Feb 2021 00:45:12 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "238"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ExportByJobId"
                },
                "example": {
                  "status": "Ready",
                  "url": "https://s3.amazonaws.com/ringba-export/call_logs/2021/02/03/577827c925174a5f98ac350085d5c755.zip"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns": {
      "get": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Get Campaigns",
        "description": "Request to get information about all active campaigns in your account. This request will not display information about any campaigns that you have deleted from your account.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "GetCampaigns",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 20 Feb 2021 15:35:10 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "3304"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaigns"
                },
                "example": {
                  "transactionId": "TR983ef334-6d3e-4ccc-94a0-7fb09d6f5b87",
                  "campaigns": [
                    {
                      "defaultPayout": {
                        "id": "PS72474b39788e4c0084d5306418f55d50",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      },
                      "defaultPayouts": [
                        {
                          "id": "PS72474b39788e4c0084d5306418f55d50",
                          "name": "Campaign Default",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 0,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "incomingCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "timeZoneId": "UTC",
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        }
                      ],
                      "ivrEnabled": true,
                      "userCampaignId": "",
                      "countryCode": "US",
                      "completed": true,
                      "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                      "evalAnonymDuplication": true,
                      "payoutDupesGlobal": false,
                      "affiliateNumbers": [
                        {
                          "phoneNumber": "+18334013665",
                          "displayNumber": "+18334013665",
                          "provider": "callrSipForward",
                          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                          "providerId": "+18334013665",
                          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                          "allocationDT": "2021-02-01T17:20:22.1504921Z",
                          "lastBillDT": "2021-02-01T00:00:00Z",
                          "nextChargeDT": "2021-02-27T00:00:00Z",
                          "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                          "deAllocationDT": "0001-01-01T00:00:00",
                          "autoRenew": true,
                          "renewDOM": 1,
                          "isTollFree": true,
                          "isActivated": false,
                          "assignmentSettings": {
                            "countryCode": "US",
                            "isTollFree": true
                          },
                          "deallocFlag": false,
                          "failedRechargeAttempts": 0,
                          "isCarrierNumber": true,
                          "carrierNumberId": "CLAOGNEH",
                          "affiliate": {
                            "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "createNumbers": false,
                            "isSelf": true,
                            "name": "You",
                            "enabled": true,
                            "version": 1
                          },
                          "id": "CLAOGNEH",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 3
                        }
                      ],
                      "deDupeSettings": {
                        "routeToOriginal": false,
                        "routeToDifferent": false,
                        "strict": true
                      },
                      "routes": [
                        {
                          "id": "CR7492a41e3ba7453e809a9d7523307918",
                          "priority": {
                            "priority": 1,
                            "weight": 1
                          },
                          "callTarget": {
                            "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                            "instructions": {
                              "connectionTimeOut": 0,
                              "callType": "number",
                              "number": "+18885852294"
                            },
                            "isHighRateTarget": false,
                            "targetCallIncrement": "onConvert",
                            "owner": {
                              "accountId": "RA25107ee2411049989cd8672852278bdb",
                              "id": "BUec50e9c7fa294283ba10a35893b13198",
                              "userIds": [
                                "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                              ],
                              "canPauseTargets": true,
                              "canSetConcurrencyCaps": false,
                              "canDisputeConversions": true,
                              "capacity": {
                                "timeZoneId": "UTC",
                                "allTimeSumCap": -1,
                                "monthlySumCap": -1,
                                "dailySumCap": -1,
                                "hourlySumCap": -1,
                                "allTimeCap": -1,
                                "monthlyCap": -1,
                                "dailyCap": -1,
                                "hourlyCap": -1
                              },
                              "name": "Example Buyer Co.",
                              "enabled": true,
                              "version": 1
                            },
                            "conversionTimerOffset": 0,
                            "schedule": {
                              "concurrencyCap": -1,
                              "timeZoneId": "Romance Standard Time",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "blockRecordings": false,
                            "name": "Ringba Test Target",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionSettings": [
                            {
                              "conversionValue": 0,
                              "payoutValue": 0,
                              "deDupeSetting": {
                                "secondsFromLastCall": 0
                              },
                              "conversionType": "dialed"
                            }
                          ],
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        {
                          "id": "CRcdfd34e3411245f79c115ad0c8f7a5aa",
                          "priority": {
                            "priority": 2,
                            "weight": 2
                          },
                          "callTarget": {
                            "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                            "instructions": {
                              "connectionTimeOut": 0,
                              "callType": "number",
                              "number": "+17605550149"
                            },
                            "isHighRateTarget": false,
                            "targetCallIncrement": "onConvert",
                            "owner": {
                              "accountId": "RA25107ee2411049989cd8672852278bdb",
                              "id": "BUec50e9c7fa294283ba10a35893b13198",
                              "userIds": [
                                "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                              ],
                              "canPauseTargets": true,
                              "canSetConcurrencyCaps": false,
                              "canDisputeConversions": true,
                              "capacity": {
                                "timeZoneId": "UTC",
                                "allTimeSumCap": -1,
                                "monthlySumCap": -1,
                                "dailySumCap": -1,
                                "hourlySumCap": -1,
                                "allTimeCap": -1,
                                "monthlyCap": -1,
                                "dailyCap": -1,
                                "hourlyCap": -1
                              },
                              "name": "Example Buyer Co.",
                              "enabled": true,
                              "version": 1
                            },
                            "conversionTimerOffset": 0,
                            "schedule": {
                              "concurrencyCap": -1,
                              "timeZoneId": "Mountain Standard Time",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "blockRecordings": false,
                            "name": "New Test Target",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionSettings": [
                            {
                              "conversionValue": 0,
                              "payoutValue": 0,
                              "deDupeSetting": {
                                "secondsFromLastCall": 0
                              },
                              "conversionType": "connectedCall",
                              "conversionArgs": {
                                "startTimerEvent": "OnConnectedCall"
                              }
                            }
                          ],
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        {
                          "id": "CRc9021a8fdee04af483097efc76c2ef88",
                          "priority": {
                            "priority": 3,
                            "weight": 3
                          },
                          "callTarget": {
                            "id": "TAdef30c972ca149468e618900de78906f",
                            "instructions": {
                              "connectionTimeOut": 0,
                              "callType": "number",
                              "number": "+17205551235"
                            },
                            "isHighRateTarget": false,
                            "targetCallIncrement": "onConvert",
                            "conversionTimerOffset": 0,
                            "schedule": {
                              "concurrencyCap": -1,
                              "timeZoneId": "Mountain Standard Time",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "blockRecordings": false,
                            "name": "Phone Number Target",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionSettings": [
                            {
                              "conversionValue": 0,
                              "payoutValue": 0,
                              "deDupeSetting": {
                                "secondsFromLastCall": 0
                              },
                              "conversionType": "dialed",
                              "conversionArgs": {
                                "startTimerEvent": "OnConnectedCall"
                              }
                            }
                          ],
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        }
                      ],
                      "duplicateSettings": {
                        "duplicateSetting": "ON_CONNECT",
                        "callLengthInSeconds": 0
                      },
                      "dialSettings": {
                        "dialAttempts": 3
                      },
                      "recordSetting": {
                        "record": true,
                        "recordFromAnswer": true,
                        "trimSilence": false,
                        "dualChannelRecording": true
                      },
                      "affiliates": [
                        {
                          "payoutConversionSettings": [],
                          "createNumbers": false,
                          "isSelf": false,
                          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                          "name": "You",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        }
                      ],
                      "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                      "name": "API Test",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "defaultPayout": {
                        "id": "PS6eee5f0c12aa4aa7a574e517da2f4726",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      },
                      "defaultPayouts": [
                        {
                          "id": "PS6eee5f0c12aa4aa7a574e517da2f4726",
                          "name": "Campaign Default",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 0,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "incomingCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "timeZoneId": "UTC",
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        }
                      ],
                      "ivrEnabled": true,
                      "userCampaignId": "",
                      "countryCode": "US",
                      "completed": true,
                      "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                      "evalAnonymDuplication": true,
                      "payoutDupesGlobal": false,
                      "affiliateNumbers": [
                        {
                          "phoneNumber": "+18442757927",
                          "displayNumber": "+18442757927",
                          "provider": "callrSipForward",
                          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                          "providerId": "+18442757927",
                          "campaignId": "CAf36c8dcd536349bd9114d27618eefb97",
                          "allocationDT": "2021-02-08T16:28:48.5721619Z",
                          "lastBillDT": "2021-02-08T00:00:00Z",
                          "nextChargeDT": "2021-03-06T00:00:00Z",
                          "lastChargeDT": "2021-02-08T16:28:48.5721619Z",
                          "deAllocationDT": "0001-01-01T00:00:00",
                          "autoRenew": true,
                          "renewDOM": 8,
                          "isTollFree": true,
                          "isActivated": false,
                          "assignmentSettings": {
                            "countryCode": "US",
                            "isTollFree": true
                          },
                          "deallocFlag": false,
                          "failedRechargeAttempts": 0,
                          "isCarrierNumber": true,
                          "carrierNumberId": "SRHBTMYV",
                          "affiliate": {
                            "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "createNumbers": false,
                            "isSelf": true,
                            "name": "You",
                            "enabled": true,
                            "version": 1
                          },
                          "id": "SRHBTMYV",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 3
                        }
                      ],
                      "deDupeSettings": {
                        "routeToOriginal": false,
                        "routeToDifferent": false,
                        "strict": true
                      },
                      "routes": [
                        {
                          "id": "CR7acf5b915cc941d6be54dea44aeb5fd0",
                          "priority": {
                            "priority": 1,
                            "weight": 1
                          },
                          "callTarget": {
                            "id": "TA1183b884e2df4541ad9651c168e3bab9",
                            "targetGroupId": "",
                            "instructions": {
                              "connectionTimeOut": 0,
                              "callType": "number",
                              "number": "+17205550167"
                            },
                            "isHighRateTarget": false,
                            "targetCallIncrement": "onConvert",
                            "owner": {
                              "accountId": "RA25107ee2411049989cd8672852278bdb",
                              "id": "BUaf8fb40966cc40cd83e3ac27d9fa5c9a",
                              "canPauseTargets": false,
                              "canSetConcurrencyCaps": false,
                              "canDisputeConversions": false,
                              "capacity": {
                                "timeZoneId": "UTC",
                                "allTimeSumCap": -1,
                                "monthlySumCap": -1,
                                "dailySumCap": -1,
                                "hourlySumCap": -1,
                                "allTimeCap": -1,
                                "monthlyCap": -1,
                                "dailyCap": -1,
                                "hourlyCap": -1
                              },
                              "name": "Call Buying Inc.",
                              "enabled": true,
                              "version": 1
                            },
                            "conversionTimerOffset": 0,
                            "schedule": {
                              "concurrencyCap": -1,
                              "timeZoneId": "Mountain Standard Time",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "blockRecordings": false,
                            "name": "Test Target Two",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionSettings": [
                            {
                              "conversionValue": 0,
                              "payoutValue": 0,
                              "deDupeSetting": {
                                "secondsFromLastCall": 0
                              },
                              "conversionType": "connectedCall"
                            }
                          ],
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        }
                      ],
                      "duplicateSettings": {
                        "duplicateSetting": "ON_CONNECT",
                        "callLengthInSeconds": 0
                      },
                      "dialSettings": {
                        "dialAttempts": 3
                      },
                      "recordSetting": {
                        "record": true,
                        "recordFromAnswer": true,
                        "trimSilence": false,
                        "dualChannelRecording": true
                      },
                      "affiliates": [
                        {
                          "payoutConversionSettings": [],
                          "createNumbers": false,
                          "isSelf": false,
                          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                          "name": "You",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        }
                      ],
                      "id": "CAf36c8dcd536349bd9114d27618eefb97",
                      "name": "Super Cool Campaign",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "defaultPayout": {
                        "id": "PS2f39062e18284765877875f3fda57a83",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      },
                      "defaultPayouts": [
                        {
                          "id": "PS2f39062e18284765877875f3fda57a83",
                          "name": "Campaign Default",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 0,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "incomingCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "timeZoneId": "UTC",
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        }
                      ],
                      "ivrEnabled": true,
                      "userCampaignId": "Test Campaign",
                      "numberDisplayFormat": "(nnn) nnn-nnnn",
                      "countryCode": "US",
                      "completed": true,
                      "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                      "evalAnonymDuplication": true,
                      "payoutDupesGlobal": false,
                      "affiliateNumbers": [],
                      "deDupeSettings": {
                        "routeToOriginal": false,
                        "routeToDifferent": false,
                        "strict": true
                      },
                      "routes": [
                        {
                          "id": "CR4931118ff1354163bb470999d70ddd74",
                          "priority": {
                            "priority": 1,
                            "weight": 1
                          },
                          "callTarget": {
                            "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                            "instructions": {
                              "connectionTimeOut": 0,
                              "callType": "number",
                              "number": "+18885852294"
                            },
                            "isHighRateTarget": false,
                            "targetCallIncrement": "onConvert",
                            "owner": {
                              "accountId": "RA25107ee2411049989cd8672852278bdb",
                              "id": "BUec50e9c7fa294283ba10a35893b13198",
                              "userIds": [
                                "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                              ],
                              "canPauseTargets": true,
                              "canSetConcurrencyCaps": false,
                              "canDisputeConversions": true,
                              "capacity": {
                                "timeZoneId": "UTC",
                                "allTimeSumCap": -1,
                                "monthlySumCap": -1,
                                "dailySumCap": -1,
                                "hourlySumCap": -1,
                                "allTimeCap": -1,
                                "monthlyCap": -1,
                                "dailyCap": -1,
                                "hourlyCap": -1
                              },
                              "name": "Example Buyer Co.",
                              "enabled": true,
                              "version": 1
                            },
                            "conversionTimerOffset": 0,
                            "schedule": {
                              "concurrencyCap": -1,
                              "timeZoneId": "Romance Standard Time",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "blockRecordings": false,
                            "name": "Ringba Test Target",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionSettings": [
                            {
                              "conversionValue": 0,
                              "payoutValue": 0,
                              "deDupeSetting": {
                                "secondsFromLastCall": 0
                              },
                              "conversionType": "dialed",
                              "conversionArgs": {
                                "startTimerEvent": "OnConnectedCall"
                              }
                            }
                          ],
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        }
                      ],
                      "duplicateSettings": {
                        "duplicateSetting": "ON_CONNECT",
                        "callLengthInSeconds": 0
                      },
                      "dialSettings": {
                        "dialAttempts": 3
                      },
                      "recordSetting": {
                        "record": true,
                        "recordFromAnswer": true,
                        "trimSilence": true,
                        "dualChannelRecording": true
                      },
                      "affiliates": [
                        {
                          "payoutConversionSettings": [],
                          "createNumbers": false,
                          "isSelf": false,
                          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                          "name": "You",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        }
                      ],
                      "id": "CAa2714586592f464f817efc493f3a4b50",
                      "name": "RINGBA TEST CAMPAIGN",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Create New Campaign",
        "description": "Request to create a new campaign. If the request is sent using just the required parameters, the optional parameters will default to the values listed with each parameter. If you want to modify these default values later, you can do so with the \"PATCH Update a Campaign\" request below. In order to modify anything else, such as Targets, Default Number, Default Payouts, Offers, RTB settings, Publishers, Publisher Numbers, or Publisher Payout Overrides you will need to use the other requests in the \"Campaigns\" folder.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>The name of the campaign as it will be displayed in the Ringba portal. This is how publishers will identify the campaign.</td>\n</tr>\n<tr>\n<td><code>countryCode</code></td>\n<td>The country you want the phone number for this campaign to be in.</td>\n</tr>\n</table>\n\n#### Optional Parameters\n_Default values listed in italics below each parameter's decription_\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>userCampaignId</code></td>\n<td>A custom ID that you will be able to use to track this campaign in reports. <p><i>Default: NONE</i></td>\n</tr>\n<tr>\n<td><code>numberDisplayFormat</code></td>\n<td>The format you want the numbers for the campaign to be displayed by using an 'n' for each number. For example(nnn) nnn-nnnn will display as (212) 332-2345 <p><i>Default: (nnn) nnn-nnnn</i></td>\n</tr>\n<tr>\n<td><code>duplicateSettings</code></td>\n<td>An object to configure the criteria that will make a call from a number that has already called be counted as a duplicate. It has two parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>duplicateSetting</code></p><p>The criteria to make a call from a number that has already called count as a duplicate. This has three options:</p><ul><li>\"ON_CONNECT\" will count any connected call form a repeat number</li><li>\"ON_INCOMING\" will count ant incoming call from a repeat number</li><li>\"ON_CALL_LENGTH\" will count any call that last longer than the number of seconds specified in the next parameter</li><p><i>Default: \"ON_CONNECT\"</i></ul><hr><p><code>callLengthInSeconds</code></p><p>Is using \"ON_CONNECT\" or \"ON_INCOMING\" set this value to 0.</p><p>If using \"ON_CALL_LENGTH\" this number specifies the number of seconds a call needs to last to be counted as a duplicate</p><p><i>Default: 0</i></td>\n</tr>\n<tr>\n<td><code>deDupeSettings</code></td>\n<td>An object to specify what should be done with calls that are deemed to be a duplicate call. It has three parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>routeToOriginal</code></p><p>Boolean value. If set to true, duplicate calls will be routed to the target to which they were originally routed</p><p><i>Default: false</i><hr><p><code>routeToDifferent</code></p><p>Boolean value. If set to true, duplicate calls will be routed to a different target than the one to which they were originally routed</p><p><i>Default: false</i><p><b>NOTE:</b> If both of these are set to false, then calls will be routed normally according to the campaign's routing plan.</p><hr><p><code>strict</code></p><p>Boolean value. If set to true, the rules established will be strictly adhered to even if the target is not accepting calls. If set to false, calls to targets not accepting calls will be automatically rerouted.</p><p><i>Default: true</i></td>\n</tr>\n<tr>\n<td><code>dialSettings</code></td>\n<td>An object that has one parameter:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>dialAttempts</code></p><p>The number of attempts to reach a target before routing to a different target</p><p><i>Default: 3</i></td>\n</tr>\n<tr>\n<td><code>evalAnonymDuplication</code></td>\n<td>Boolean value. If set to true anonymous calls will be handled as duplicate calls. <p><i>Default: true</i></td>\n</tr>\n<tr>\n<td><code>payoutDupesGlobal</code></td>\n<td>Boolean value. If set to true, only one payout will be allowed per Caller ID, regardless of what publisher generates the call.<p><i>Default: false</i></td>\n</tr>\n<tr>\n<td><code>recordSetting</code></td>\n<td>An object to specify call recording settings for the campaign. It has three parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>record</code></p><p>Boolean value. If set to true, calls will be recorded for the campaign</p><p><i>Default: true</i><hr><p><code>recordFromAnswer</code></p><p>Boolean value. If set to true, call recordings will start once the call is answered. If set to false the entire call will be recorded.</p><p><i>Default: true</i><hr><p><code>trimSilence</code></p><p>Boolean value. If set to true, silence will be trimmed from the recording</p><p><i>Default: false</i><p><b>NOTE:</b> If you set <code>recordFromAnswer</code> or <code>trimSilence</code> to true, you must also set <code>record</code> to true.\n</tr>\n<tr>\n<td><code>spamDetection</code></td>\n<td>An object that specifies how to handle potential spam calls. It has two parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>blockDuplicatesForSeconds</code></p><p>Automatically blocks calls with the same Caller ID for the specified number of seconds.</p><p><i>Default: 2</i><hr><p><code>trackAnonymous</code></p><p>Boolean value. If set to true then anonymous calls (e.g.: +anonymous, +restricted, +unavailable, etc.) as the same Caller ID to be blocked for the specified number of seconds.</p><p><i>Default: false</i></td>\n</tr>\n</table>",
        "operationId": "CreateNewCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewCampaignRequest"
              },
              "example": {
                "name": "New Campaign",
                "userCampaignId": "Test Campaign",
                "numberDisplayFormat": "(nnn) nnn-nnnn",
                "countryCode": "US",
                "duplicateSettings": {
                  "duplicateSetting": "ON_CALL_LENGTH",
                  "callLengthInSeconds": 21
                },
                "deDupeSettings": {
                  "routeToOriginal": true,
                  "routeToDifferent": false,
                  "strict": true
                },
                "dialSettings": {
                  "dialAttempts": 7
                },
                "evalAnonymDuplication": false,
                "payoutDupesGlobal": true,
                "recordSetting": {
                  "record": true,
                  "recordFromAnswer": false,
                  "trimSilence": true
                },
                "spamDetection": {
                  "blockDuplicatesForSeconds": "3",
                  "trackAnonymous": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 24 Mar 2021 16:04:07 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "681"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewCampaignwithallavailableparametersspecified"
                },
                "example": {
                  "transactionId": "TR334fac3f-4c14-4353-89f9-55dab6ed597e",
                  "campaignId": "CA478a4239bc844b828fc086db6892b2d5",
                  "campaign": {
                    "defaultPayouts": [],
                    "ivrEnabled": true,
                    "userCampaignId": "Test Campaign",
                    "numberDisplayFormat": "(nnn) nnn-nnnn",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "evalAnonymDuplication": false,
                    "payoutDupesGlobal": true,
                    "spamDetection": {
                      "blockDuplicatesForSeconds": 3,
                      "trackAnonymous": true
                    },
                    "deDupeSettings": {
                      "routeToOriginal": true,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CALL_LENGTH",
                      "callLengthInSeconds": 21
                    },
                    "dialSettings": {
                      "dialAttempts": 7
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": false,
                      "trimSilence": true,
                      "dualChannelRecording": true
                    },
                    "id": "CA478a4239bc844b828fc086db6892b2d5",
                    "name": "New Campaign",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/stats": {
      "get": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Get Campaigns Stats only",
        "description": "Request to retrieve the stats for all campaigns associated with your account that have ever received calls, even if they have been deleted. Any active campaigns that have not yet received calls will not be displayed. To get stats for active campaigns without any calls, see the \"GET Get Campaigns\" request above and check out the optional query parameter `includeStats=true`.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "GetCampaignsStatsonly",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 20 Feb 2021 16:00:09 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "358"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignsStatsOnly"
                },
                "example": {
                  "transactionId": "TR87ff7754-a897-4eff-be9b-873e3b74da5c",
                  "stats": {
                    "cA9f6800fa2f074f41afde0aadd88292bd": {
                      "total": 1,
                      "currentMonth": 1,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "cA74c0b7f1f3824246b73e72a9238b4bfc": {
                      "total": 5,
                      "currentMonth": 5,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "cAa2714586592f464f817efc493f3a4b50": {
                      "total": 6,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}": {
      "get": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Get Information About a Single Campaign",
        "description": "Request to retrieve information about a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n#### Optional Query Parameters\n`includeIntegrationSetting=true` After a ? in the url will add integration setting to the response if any are associated with the campaign. See the \"Get Information About a Single Campaign with Integration Settings\" example to the right for implementation.<br>\n<br>\n\n\n__NOTE:__ The `campaignId` must have a capital \"CA\" at the beginning. If the \"CA\" is not capitalized you will receive an error message.",
        "operationId": "GetInformationAboutaSingleCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Mar 2021 21:52:21 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2692"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInformationAboutaSingleCampaign"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Update a Campaign",
        "description": "Request to update information about a campaign.\n\n__NOTE:__ This request will not modify any settings that are not explicitly stated. It also will not affect any of the other settings such as Targets, Default Number, Default Payouts, Offers, RTB settings, Publishers, Publisher Numbers, or Publisher Payout Overrides. To modify those settings you need to use the other requests found in the appropriate sub-folder of the \"Campaigns\" folder of this documentation\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\nYou can use this request to update any of the required or optional parameters specified in the description of the \"POST Create New Campaign\" request above.",
        "operationId": "UpdateaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaCampaignRequest"
              },
              "example": {
                "name": "New Name",
                "userCampaignId": "New ID",
                "numberDisplayFormat": "nnn-nnn-nnnn",
                "countryCode": "US",
                "duplicateSettings": {
                  "duplicateSetting": "ON_CONNECT",
                  "callLengthInSeconds": 0
                },
                "deDupeSettings": {
                  "routeToOriginal": false,
                  "routeToDifferent": true,
                  "strict": false
                },
                "dialSettings": {
                  "dialAttempts": 3
                },
                "evalAnonymDuplication": true,
                "payoutDupesGlobal": false,
                "recordSetting": {
                  "record": false,
                  "recordFromAnswer": false,
                  "trimSilence": false
                },
                "spamDetection": {
                  "blockDuplicatesForSeconds": "7",
                  "trackAnonymous": false
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 24 Mar 2021 17:33:30 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "937"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateaCampaign"
                },
                "example": {
                  "transactionId": "TRf4ff4041-3c13-41eb-95b4-c9000c0e770a",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PSe3a0d11525b440849c744454b2c73974",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PSe3a0d11525b440849c744454b2c73974",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "New ID",
                    "numberDisplayFormat": "nnn-nnn-nnnn",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "spamDetection": {
                      "blockDuplicatesForSeconds": 7,
                      "trackAnonymous": false
                    },
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": true,
                      "strict": false
                    },
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": false,
                      "recordFromAnswer": false,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "id": "CAa32ff0c29a764cf99ca4304b8d941c12",
                    "name": "New Name",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Delete a Campaign",
        "description": "Request to delete a campaign from your account.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "DeleteaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sun, 21 Feb 2021 16:02:00 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaCampaign"
                },
                "example": {
                  "transactionId": "TRca4ce249-6ba1-4691-b94f-923aab91838d",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/InboundReferences": {
      "get": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Get Inbound References for a Single Campaign",
        "description": "Request to retrieve a list of all the publishers, buyers, and targets that reference the specified campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "GetInboundReferencesforaSingleCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 20 Feb 2021 21:37:10 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "365"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboundReferencesforaSingleCampaign"
                },
                "example": {
                  "transactionId": "TR856f310d-9020-4c3c-9593-ce36e6870772",
                  "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                  "hasReferences": true,
                  "refByAccount": true,
                  "affiliates": [
                    {
                      "affiliateId": "AFbd21c4a3274c4382aa98919d5149baf3",
                      "affiliateName": "You"
                    }
                  ],
                  "numbers": [
                    {
                      "numberId": "CLAOGNEH",
                      "numberName": "+18334013665",
                      "numberPhoneNumber": "+18334013665"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/clone": {
      "post": {
        "tags": [
          "Campaign Information"
        ],
        "summary": "Clone a Campaign",
        "description": "Request to clone a campaign. This will create an a copy of the campaign with all the setting exactly the same and automatically add \"- Copy\" to the end of the name.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "CloneaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sun, 21 Feb 2021 15:58:54 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "1441"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CloneaCampaign"
                },
                "example": {
                  "transactionId": "TReddce6fa-e8e4-4918-aabc-0373bd73fd22",
                  "campaignId": "CA61e0d0f850ac48e5aea0374629b7f601",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PS102132daefda4b9496774ed561b39d5f",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PS102132daefda4b9496774ed561b39d5f",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR46678c979f4d4a26acae7e564b59e36b",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "name": "Example Buyer Co.",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Romance Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "id": "CA61e0d0f850ac48e5aea0374629b7f601",
                    "name": "Example Campaign - Copy",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/defaultNumber": {
      "patch": {
        "tags": [
          "Campaign Numbers"
        ],
        "summary": "Add a Default Number for a Campaign",
        "description": "Request to add a default number to a campaign. This number will be used if your number pool is locked or if you do not a number pool for the campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>numberId</code></td>\n<td>The ID of the number you want to make the default number for the campaign. You can find IDs of <a href=#get-numbers-associated-with-your-account>numbers</a> associated with your account associated with your account. The response returned from that request will contain an object for each number. Each number object will have a <code>id</code> which is the ID needed for this request.</td>\n</tr>\n</table>",
        "operationId": "AddaDefaultNumberforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddaDefaultNumberforaCampaignRequest"
              },
              "example": {
                "numberId": "{{numberId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Mar 2021 18:38:23 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2574"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddaDefaultNumberforaCampaign"
                },
                "example": {
                  "transactionId": "TR9af2e2e7-48ee-4160-ad31-3b06963e06e3",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "defaultNumber": {
                      "phoneNumber": "+18885852294",
                      "displayNumber": "+18885852294",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18885852294",
                      "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                      "allocationDT": "2021-02-08T23:56:26.0457102Z",
                      "lastBillDT": "2021-03-08T00:00:00Z",
                      "nextChargeDT": "2021-04-06T00:00:00Z",
                      "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 8,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "areaCode": "888",
                        "isTollFree": true
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "PNZFWQO0",
                      "id": "PNZFWQO0",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18336371466",
                        "localNumber": "(833) 637-1466",
                        "displayNumber": "18336371466",
                        "provider": "telnyx",
                        "providerAccountId": "1299489388324979809",
                        "providerId": "1362385882509739900",
                        "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                        "allocationDT": "2020-05-01T17:37:35.3481506Z",
                        "lastBillDT": "2021-03-01T00:00:00Z",
                        "nextChargeDT": "2021-03-30T00:00:00Z",
                        "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "isTollFree": true
                        },
                        "tags": [],
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": false,
                        "carrierNumberId": "",
                        "affiliate": {
                          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                          "subId": "",
                          "createNumbers": true,
                          "accessToRecordings": true,
                          "userIds": [
                            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                          ],
                          "isSelf": false,
                          "name": "Example Publisher",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "id": "1362385882509739900",
                        "name": "Skype3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      },
                      {
                        "phoneNumber": "+18885852294",
                        "displayNumber": "+18885852294",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+18885852294",
                        "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                        "allocationDT": "2021-02-08T23:56:26.0457102Z",
                        "lastBillDT": "2021-03-08T00:00:00Z",
                        "nextChargeDT": "2021-04-06T00:00:00Z",
                        "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 8,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "areaCode": "888",
                          "isTollFree": true
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "PNZFWQO0",
                        "id": "PNZFWQO0",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Pacific Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSetting": {
                          "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 7,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "convertedCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        },
                        "payoutConversionSettings": [
                          {
                            "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                            "priority": 0,
                            "isRevShare": false,
                            "payoutAmount": 7,
                            "revSharePercentage": -1,
                            "revShareMaxPayoutAmount": -1,
                            "revShareMinPayoutAmount": -1,
                            "payoutConversionType": "convertedCall",
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            }
                          },
                          {
                            "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                            "priority": 1,
                            "isRevShare": true,
                            "payoutAmount": -1,
                            "revSharePercentage": 50,
                            "revShareMaxPayoutAmount": 10,
                            "revShareMinPayoutAmount": 1,
                            "payoutConversionType": "convertedCall",
                            "payoutConversionArgs": {
                              "startTimerEvent": "OnConnectedCall"
                            },
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": -1
                            }
                          }
                        ],
                        "subId": "",
                        "createNumbers": true,
                        "isSelf": false,
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "name": "Example Publisher",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA7c2b799310f0453982d366cc09488a6a",
                    "name": "Example Campaign",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  },
                  "jsTags": {},
                  "pubNumberEnrichmentUrls": {
                    "_1362385882509739900": "https://display.ringba.com/enrich/1362385882509739900?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2",
                    "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
                  },
                  "rtb": {
                    "setup": true,
                    "enabled": true
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign Numbers"
        ],
        "summary": "Remove Default Number from a Campaign",
        "description": "Request to remove a default number from a campaign\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>numberId</code></td>\n<td>The ID of the number you want to make the default number for the campaign. You can find IDs of numbers associated with your account using the \"GET Get Numbers Associated with Your Account\" request found in the \"Numbers\" folder above. The response returned from that request will contain an object for each number. Each number object will have a <code>id</code> which is the ID needed for this request.</td>\n</tr>\n</table>",
        "operationId": "RemoveDefaultNumberfromaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Mar 2021 18:43:18 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2535"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveDefaultNumberfromaCampaign"
                },
                "example": {
                  "transactionId": "TRa81a2f2e-de7d-43ef-9151-0d31bdfbc184",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18336371466",
                        "localNumber": "(833) 637-1466",
                        "displayNumber": "18336371466",
                        "provider": "telnyx",
                        "providerAccountId": "1299489388324979809",
                        "providerId": "1362385882509739900",
                        "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                        "allocationDT": "2020-05-01T17:37:35.3481506Z",
                        "lastBillDT": "2021-03-01T00:00:00Z",
                        "nextChargeDT": "2021-03-30T00:00:00Z",
                        "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "isTollFree": true
                        },
                        "tags": [],
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": false,
                        "carrierNumberId": "",
                        "affiliate": {
                          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                          "subId": "",
                          "createNumbers": true,
                          "accessToRecordings": true,
                          "userIds": [
                            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                          ],
                          "isSelf": false,
                          "name": "Example Publisher",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "id": "1362385882509739900",
                        "name": "Skype3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      },
                      {
                        "phoneNumber": "+18885852294",
                        "displayNumber": "+18885852294",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+18885852294",
                        "campaignId": "",
                        "allocationDT": "2021-02-08T23:56:26.0457102Z",
                        "lastBillDT": "2021-03-08T00:00:00Z",
                        "nextChargeDT": "2021-04-06T00:00:00Z",
                        "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 8,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "areaCode": "888",
                          "isTollFree": true
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "PNZFWQO0",
                        "id": "PNZFWQO0",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Pacific Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSetting": {
                          "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 7,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "convertedCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        },
                        "payoutConversionSettings": [
                          {
                            "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                            "priority": 0,
                            "isRevShare": false,
                            "payoutAmount": 7,
                            "revSharePercentage": -1,
                            "revShareMaxPayoutAmount": -1,
                            "revShareMinPayoutAmount": -1,
                            "payoutConversionType": "convertedCall",
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            }
                          },
                          {
                            "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                            "priority": 1,
                            "isRevShare": true,
                            "payoutAmount": -1,
                            "revSharePercentage": 50,
                            "revShareMaxPayoutAmount": 10,
                            "revShareMinPayoutAmount": 1,
                            "payoutConversionType": "convertedCall",
                            "payoutConversionArgs": {
                              "startTimerEvent": "OnConnectedCall"
                            },
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": -1
                            }
                          }
                        ],
                        "subId": "",
                        "createNumbers": true,
                        "isSelf": false,
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "name": "Example Publisher",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA7c2b799310f0453982d366cc09488a6a",
                    "name": "Example Campaign",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  },
                  "jsTags": {},
                  "pubNumberEnrichmentUrls": {
                    "_1362385882509739900": "https://display.ringba.com/enrich/1362385882509739900?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2",
                    "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
                  },
                  "rtb": {
                    "setup": true,
                    "enabled": true
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/affiliateNumbers": {
      "patch": {
        "tags": [
          "Campaign Numbers"
        ],
        "summary": "Add Publisher Number to a Campaign",
        "description": "Request to add a publisher's number associated with your account to the specified campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>numberId</code></td>\n<td>The ID of the number you want to make the default number for the campaign. You can find IDs of <a href=#get-numbers-associated-with-your-account>numbers</a> associated with your account. The response returned from that request will contain an object for each number. Each number object will have a <code>id</code> which is the ID needed for this request.</td>\n</tr>\n</table>",
        "operationId": "AddPublisherNumbertoaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPublisherNumbertoaCampaignRequest"
              },
              "example": {
                "numberId": "{{numberId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Mar 2021 17:11:24 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2586"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddPublisherNumbertoaCampaign"
                },
                "example": {
                  "transactionId": "TRe154a076-bbeb-4d37-98c7-7a360a0f8bb4",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18336371466",
                        "localNumber": "(833) 637-1466",
                        "displayNumber": "18336371466",
                        "provider": "telnyx",
                        "providerAccountId": "1299489388324979809",
                        "providerId": "1362385882509739900",
                        "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                        "allocationDT": "2020-05-01T17:37:35.3481506Z",
                        "lastBillDT": "2021-03-01T00:00:00Z",
                        "nextChargeDT": "2021-03-30T00:00:00Z",
                        "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "isTollFree": true
                        },
                        "tags": [],
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": false,
                        "carrierNumberId": "",
                        "affiliate": {
                          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                          "subId": "",
                          "createNumbers": true,
                          "accessToRecordings": true,
                          "userIds": [
                            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                          ],
                          "isSelf": false,
                          "name": "Example Publisher",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "id": "1362385882509739900",
                        "name": "Skype3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      },
                      {
                        "phoneNumber": "+18885852294",
                        "displayNumber": "+18885852294",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+18885852294",
                        "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                        "allocationDT": "2021-02-08T23:56:26.0457102Z",
                        "lastBillDT": "2021-03-08T00:00:00Z",
                        "nextChargeDT": "2021-04-06T00:00:00Z",
                        "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 8,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "areaCode": "888",
                          "isTollFree": true
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "PNZFWQO0",
                        "id": "PNZFWQO0",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Pacific Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSetting": {
                          "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 7,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "convertedCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        },
                        "payoutConversionSettings": [
                          {
                            "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                            "priority": 0,
                            "isRevShare": false,
                            "payoutAmount": 7,
                            "revSharePercentage": -1,
                            "revShareMaxPayoutAmount": -1,
                            "revShareMinPayoutAmount": -1,
                            "payoutConversionType": "convertedCall",
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            }
                          },
                          {
                            "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                            "priority": 1,
                            "isRevShare": true,
                            "payoutAmount": -1,
                            "revSharePercentage": 50,
                            "revShareMaxPayoutAmount": 10,
                            "revShareMinPayoutAmount": 1,
                            "payoutConversionType": "convertedCall",
                            "payoutConversionArgs": {
                              "startTimerEvent": "OnConnectedCall"
                            },
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": -1
                            }
                          }
                        ],
                        "subId": "",
                        "createNumbers": true,
                        "isSelf": false,
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "name": "Example Publisher",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "payoutConversionSettings": [],
                        "createNumbers": false,
                        "isSelf": false,
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "name": "You",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA7c2b799310f0453982d366cc09488a6a",
                    "name": "Example Campaign",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  },
                  "jsTags": {},
                  "pubNumberEnrichmentUrls": {
                    "_1362385882509739900": "https://display.ringba.com/enrich/1362385882509739900?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2",
                    "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
                  },
                  "rtb": {
                    "setup": true,
                    "enabled": true
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/affiliates": {
      "patch": {
        "tags": [
          "Campaign Publishers"
        ],
        "summary": "Add Publisher to a Campaign",
        "description": "Request to add a publisher to a campaign. This only adds them to the campaign but does not add any numbers or payout overrides for the publisher.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>publisherId</code></td>\n<td>The ID of the publisher you want to add to the campaign. Find <a href=\"#get-information-about-publishers\">publishers</a> associated with your account.</td>\n</tr>\n</table>",
        "operationId": "AddPublishertoaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPublishertoaCampaignRequest"
              },
              "example": {
                "publisherId": "{{publisherId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Mar 2021 16:56:55 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2302"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddPublishertoaCampaign"
                },
                "example": {
                  "transactionId": "TR72cbc559-aab0-407c-9087-cf5d6550da2f",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18336371466",
                        "localNumber": "(833) 637-1466",
                        "displayNumber": "18336371466",
                        "provider": "telnyx",
                        "providerAccountId": "1299489388324979809",
                        "providerId": "1362385882509739900",
                        "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                        "allocationDT": "2020-05-01T17:37:35.3481506Z",
                        "lastBillDT": "2021-03-01T00:00:00Z",
                        "nextChargeDT": "2021-03-30T00:00:00Z",
                        "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "isTollFree": true
                        },
                        "tags": [],
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": false,
                        "carrierNumberId": "",
                        "affiliate": {
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                          "subId": "",
                          "createNumbers": true,
                          "accessToRecordings": true,
                          "userIds": [
                            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                          ],
                          "isSelf": false,
                          "name": "Example Publisher",
                          "enabled": true,
                          "version": 1
                        },
                        "id": "1362385882509739900",
                        "name": "Skype3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "name": "Example Buyer Co.",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Pacific Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSetting": {
                          "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 7,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "convertedCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        },
                        "payoutConversionSettings": [
                          {
                            "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                            "priority": 0,
                            "isRevShare": false,
                            "payoutAmount": 7,
                            "revSharePercentage": -1,
                            "revShareMaxPayoutAmount": -1,
                            "revShareMinPayoutAmount": -1,
                            "payoutConversionType": "convertedCall",
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            }
                          },
                          {
                            "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                            "priority": 1,
                            "isRevShare": true,
                            "payoutAmount": -1,
                            "revSharePercentage": 50,
                            "revShareMaxPayoutAmount": 10,
                            "revShareMinPayoutAmount": 1,
                            "payoutConversionType": "convertedCall",
                            "payoutConversionArgs": {
                              "startTimerEvent": "OnConnectedCall"
                            },
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": -1
                            }
                          }
                        ],
                        "subId": "",
                        "createNumbers": true,
                        "isSelf": false,
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "name": "Example Publisher",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "payoutConversionSettings": [],
                        "createNumbers": false,
                        "isSelf": false,
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "name": "You",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA7c2b799310f0453982d366cc09488a6a",
                    "name": "Example Campaign",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/affiliates/{publisherId}": {
      "delete": {
        "tags": [
          "Campaign Publishers"
        ],
        "summary": "Remove Publisher from a Campaign",
        "description": "Request to remove a publisher from a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account",
        "operationId": "RemovePublisherfromaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Mar 2021 17:01:38 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2242"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemovePublisherfromaCampaign"
                },
                "example": {
                  "transactionId": "TR2dfb64f5-f2b9-4df4-b03f-146c672e0ee8",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18336371466",
                        "localNumber": "(833) 637-1466",
                        "displayNumber": "18336371466",
                        "provider": "telnyx",
                        "providerAccountId": "1299489388324979809",
                        "providerId": "1362385882509739900",
                        "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                        "allocationDT": "2020-05-01T17:37:35.3481506Z",
                        "lastBillDT": "2021-03-01T00:00:00Z",
                        "nextChargeDT": "2021-03-30T00:00:00Z",
                        "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "isTollFree": true
                        },
                        "tags": [],
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": false,
                        "carrierNumberId": "",
                        "affiliate": {
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                          "subId": "",
                          "createNumbers": true,
                          "accessToRecordings": true,
                          "userIds": [
                            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                          ],
                          "isSelf": false,
                          "name": "Example Publisher",
                          "enabled": true,
                          "version": 1
                        },
                        "id": "1362385882509739900",
                        "name": "Skype3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "name": "Example Buyer Co.",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Pacific Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSetting": {
                          "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                          "priority": 0,
                          "isRevShare": false,
                          "payoutAmount": 7,
                          "revSharePercentage": -1,
                          "revShareMaxPayoutAmount": -1,
                          "revShareMinPayoutAmount": -1,
                          "payoutConversionType": "convertedCall",
                          "isGlobal": false,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1,
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "concurrencyCap": -1,
                          "deDupeSetting": {
                            "secondsFromLastCall": 0
                          }
                        },
                        "payoutConversionSettings": [
                          {
                            "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                            "priority": 0,
                            "isRevShare": false,
                            "payoutAmount": 7,
                            "revSharePercentage": -1,
                            "revShareMaxPayoutAmount": -1,
                            "revShareMinPayoutAmount": -1,
                            "payoutConversionType": "convertedCall",
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            }
                          },
                          {
                            "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                            "priority": 1,
                            "isRevShare": true,
                            "payoutAmount": -1,
                            "revSharePercentage": 50,
                            "revShareMaxPayoutAmount": 10,
                            "revShareMinPayoutAmount": 1,
                            "payoutConversionType": "convertedCall",
                            "payoutConversionArgs": {
                              "startTimerEvent": "OnConnectedCall"
                            },
                            "isGlobal": false,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1,
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "concurrencyCap": -1,
                            "deDupeSetting": {
                              "secondsFromLastCall": -1
                            }
                          }
                        ],
                        "subId": "",
                        "createNumbers": true,
                        "isSelf": false,
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "name": "Example Publisher",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA7c2b799310f0453982d366cc09488a6a",
                    "name": "Example Campaign",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Affiliates/{publisherId}/Numbers/{numberId}/JsTag": {
      "get": {
        "tags": [
          "Number Js Tags"
        ],
        "summary": "Get Js Tags for a Number",
        "description": "Request to get Js Tags associated with a specified number.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n`numberId` get IDs of [numbers](#get-numbers-associated-with-your-account) associated with your account. The response returned form that request will contain an object for each number. Each number object will have a `id` which is the ID needed for this request.",
        "operationId": "GetJsTagsforaNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 18:13:31 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "494"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetJsTagsforaNumber"
                },
                "example": {
                  "transactionId": "TR90fbdb0b-fb12-4b50-a246-830003ae4d2e",
                  "tag": {
                    "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                    "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
                    "numberId": "PNZFWQO0",
                    "previousNumber": {
                      "e164Number": "+18885551234",
                      "countryCode": "1",
                      "formatedNumber": "(888) 555-1234",
                      "numberParts": [
                        "(888)",
                        "555",
                        "1234"
                      ]
                    },
                    "id": "JS1884eadf96674e26b4bd17f6deff28cf",
                    "name": "Example Tag",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 2
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Number Js Tags"
        ],
        "summary": "Create New Js Tag for a Number",
        "description": "Request to create a new Js Tag for the specified number\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n`numberId` get IDs of [numbers](#get-numbers-associated-with-your-account) associated with your account. The response returned form that request will contain an object for each number. Each number object will have a `id` which is the ID needed for this request.\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>The name you want to assign to this Js Tag</td>\n</tr>\n<tr>\n<td><code>e164ExistingNumber</code></td>\n<td>The number that you will be displaying on your webpage that you want to link to the campaign number specified in the request.</td>\n</tr>\n<tr>\n<td><code>hasNumberPool</code></td>\n<td>Boolean value to determine if this Js Tag is linking to a number pool. Set to false if you are linking it to a single number</td>\n</tr>\n<tr>\n<td><code>numberPoolId</code></td>\n<td>If <code>hasNumberPool</code> is set to true, put the ID of the number pool here</td>\n</tr>\n</table>",
        "operationId": "CreateNewJsTagforaNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewJsTagforaNumberRequest"
              },
              "example": {
                "name": "Example Tag",
                "e164ExistingNumber": "+18885551234",
                "hasNumberPool": false,
                "numberPoolId": null
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 18:17:33 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2775"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewJsTagforaNumber"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Number Js Tags"
        ],
        "summary": "Remove a Js Tag from a Number",
        "description": "Request to remove a Js Tag from the specified number.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n`numberId` get IDs of [numbers](#get-numbers-associated-with-your-account) associated with your account. The response returned form that request will contain an object for each number. Each number object will have a `id` which is the ID needed for this request.",
        "operationId": "RemoveaJsTagfromaNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 18:15:04 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2633"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveaJsTagfromaNumber"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Affiliates/{publisherId}/Numbers/{numberId}/JsTag/{JsTagId}": {
      "patch": {
        "tags": [
          "Number Js Tags"
        ],
        "summary": "Modify Js Tag for a Number",
        "description": "### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account",
        "operationId": "ModifyJsTagforaNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "JsTagId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyJsTagforaNumberRequest"
              },
              "example": {
                "name": "New Name",
                "e164ExistingNumber": "+18885559876"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 18:24:10 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2779"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyJsTagforaNumber"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Routes": {
      "post": {
        "tags": [
          "Campaign Target Routes"
        ],
        "summary": "Add Target Route to a Campaign",
        "description": "Request to add a target to a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>targetId</code></td>\n<td>The ID of target you want to add to the campaign</td>\n</tr>\n<tr>\n<td><code>priority</code></td>\n<td>An object with two parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>priority</code></p><p>The priority you want to assign to the target. This is used to select targets, with 1 being the highest priority.</p><hr><p><code>weight</code></p><p>The weight assigned to a target in case there are two targets with the same priority. __NOTE:__ The weight is a _relative_ value so if two targets with the same priority each have a weight of 10, they will each receive 50% of calls. If one has a weight of 5 and one has a weight of 10 then the one with a weight of 5 will receive twice the amount of calls as the one with a weight of 10.</p></td>\n</tr>\n<tr>\n<td><code>callConversion</code></td>\n<td>An object with multiple options. See the <a href=\"#conversion-options\">Conversion Options</a> section below for more information.</td>\n</tr>\n</table>\n\n#### Conversion Options\nIf you want the call to convert on any dialed call, use the following parameters in the `callConversion` object:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>conversionType</code></td>\n<td>Set value to \"dialed\"</td>\n</tr>\n<tr>\n<td><code>conversionValue</code></td>\n<td>The amount of money generated when this target is dialed</td>\n</tr>\n</table>\n\n<hr>\n\nIf you want the call to convert on any connected call, use the following parameters in the `callConversion` object:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>conversionType</code></td>\n<td>Set value to \"connectedCall\"</td>\n</tr>\n<tr>\n<td><code>conversionValue</code></td>\n<td>The amount of money generated when this target is dialed</td>\n</tr>\n</table>\n\n<hr>\n\nIf you want the call to convert based on a postback or webhook use the following parameters in the `callConversion` object:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>conversionType</code></td>\n<td>Set value to \"postBack\"</td>\n</tr>\n<tr>\n<td><code>conversionValue</code></td>\n<td>The amount of money generated when this target is dialed</td>\n</tr>\n</table>\n\n__NOTE:__ If you elect to convert based on a webhook or postback, you will need to set up the endpoint for the webhook using the requests in the \"Webhooks\" section of this documentation\n\n<hr>\n\nIf you want the call to convert based on call length use the following parameters in the `callConversion` object:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>conversionType</code></td>\n<td>Set value to \"callLength\"</td>\n</tr>\n<tr>\n<td><code>conversionValue</code></td>\n<td>The amount of money generated when this target is dialed</td>\n</tr>\n<tr>\n<td><code>conversionArgs</code></td>\n<td>An object with the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>startTimerEvent</code></p><p>The event which will trigger the timer to measure call length. This has three options: <ul><li>\"OnIncomingCall\"</li><li>\"OnDial\"</li><li>\"OnConnectedCall\"</li></ul><hr><p><code>callLengthInSeconds</code></p><p>The number of seconds after the timer has been triggered until the call will convert</p>\n</table>\n\nCheck out the \"Add Target converting on call length\" example to see how to add a target that converts 30 seconds after a call has connected.",
        "operationId": "AddTargetRoutetoaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTargetRoutetoaCampaignRequest"
              },
              "example": {
                "targetid": "{{targetId}}",
                "priority": {
                  "priority": 2,
                  "weight": 2
                },
                "callConversion": {
                  "conversionType": "callLength",
                  "conversionValue": 0,
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall",
                    "callLengthInSeconds": 30
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sun, 21 Feb 2021 16:36:33 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2256"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddTargetRoutetoaCampaignwithdefaulttargetsettings"
                },
                "example": {
                  "transactionId": "TRa8b74eb5-5c70-4b95-bcaa-862d42fda9d1",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PS72474b39788e4c0084d5306418f55d50",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PS72474b39788e4c0084d5306418f55d50",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18334013665",
                        "displayNumber": "+18334013665",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+18334013665",
                        "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "allocationDT": "2021-02-01T17:20:22.1504921Z",
                        "lastBillDT": "2021-02-01T00:00:00Z",
                        "nextChargeDT": "2021-02-27T00:00:00Z",
                        "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "isTollFree": true
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "CLAOGNEH",
                        "affiliate": {
                          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                          "createNumbers": false,
                          "isSelf": true,
                          "name": "You",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "id": "CLAOGNEH",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR7492a41e3ba7453e809a9d7523307918",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Romance Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "id": "CRc9021a8fdee04af483097efc76c2ef88",
                        "priority": {
                          "priority": 3,
                          "weight": 3
                        },
                        "callTarget": {
                          "id": "TAdef30c972ca149468e618900de78906f",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+17205551235"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Mountain Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Phone Number Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed",
                            "conversionArgs": {
                              "startTimerEvent": "OnConnectedCall"
                            }
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "id": "CRa815dd9785234d88a3ed50d808f40497",
                        "priority": {
                          "priority": 2,
                          "weight": 2
                        },
                        "callTarget": {
                          "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+17605550149"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Mountain Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "New Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSettings": [],
                        "createNumbers": false,
                        "isSelf": false,
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "name": "You",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                    "name": "API Test",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  },
                  "jsTags": {},
                  "pubNumberEnrichmentUrls": {
                    "_CLAOGNEH": "https://display.ringba.com/enrich/CLAOGNEH?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
                  },
                  "rtb": {
                    "setup": false,
                    "enabled": false
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign Target Routes"
        ],
        "summary": "Remove Target Route from a Campaign",
        "description": "Request to remove a target or a target group from a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>The campaign route ID</td>\n</tr>\n</table>\n\n__NOTE:__ This is _not_ the target/target group ID. It is the ID for the route on the campaign. You can retrieve this ID using the \"GET Get Information About a Single Campaign\" request above. Each route will have an ID beginning with \"CR\", this is the campaign route ID.",
        "operationId": "RemoveTargetRoutefromaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sun, 21 Feb 2021 17:49:45 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2264"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveTargetRoutefromaCampaign"
                },
                "example": {
                  "transactionId": "TR56ed1085-6181-42b3-b416-a165f8d4419c",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PS72474b39788e4c0084d5306418f55d50",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PS72474b39788e4c0084d5306418f55d50",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18334013665",
                        "displayNumber": "+18334013665",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+18334013665",
                        "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "allocationDT": "2021-02-01T17:20:22.1504921Z",
                        "lastBillDT": "2021-02-01T00:00:00Z",
                        "nextChargeDT": "2021-02-27T00:00:00Z",
                        "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "isTollFree": true
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "CLAOGNEH",
                        "affiliate": {
                          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                          "createNumbers": false,
                          "isSelf": true,
                          "name": "You",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "id": "CLAOGNEH",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR7492a41e3ba7453e809a9d7523307918",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Romance Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "id": "CRc9021a8fdee04af483097efc76c2ef88",
                        "priority": {
                          "priority": 3,
                          "weight": 3
                        },
                        "callTarget": {
                          "id": "TAdef30c972ca149468e618900de78906f",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+17205551235"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Mountain Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Phone Number Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed",
                            "conversionArgs": {
                              "startTimerEvent": "OnConnectedCall"
                            }
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "id": "CR3797704eadf24e1ebb0e05ebcb19c355",
                        "priority": {
                          "priority": 2,
                          "weight": 2
                        },
                        "callTarget": {
                          "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+17605550149"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Mountain Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "New Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "conversionType": "connectedCall"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSettings": [],
                        "createNumbers": false,
                        "isSelf": false,
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "name": "You",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                    "name": "API Test",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  },
                  "jsTags": {},
                  "pubNumberEnrichmentUrls": {
                    "_CLAOGNEH": "https://display.ringba.com/enrich/CLAOGNEH?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
                  },
                  "rtb": {
                    "setup": false,
                    "enabled": false
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers": {
      "get": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Get All Offers for a Campaign",
        "description": "Request to view all offers associated with the campaign. If there are draft offers and published offers present, they will both be displayed in the `offers` object in the response.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "GetAllOffersforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:19:25 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "705"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllOffersforaCampaign"
                },
                "example": {
                  "transactionId": "TRcd29a1f0-9624-4c52-aa6c-2638930f35fe",
                  "isSuccessful": true,
                  "offers": {
                    "draft": {
                      "revision": 0,
                      "notes": "These notes can only be seen in the detail view",
                      "category": "Automotive\\Engine Repair",
                      "languageCodes": [
                        "EN"
                      ],
                      "numberRestrictions": {
                        "maxNumbersPerPublisher": 1,
                        "allowTF": false,
                        "allowDID": true
                      },
                      "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                      "name": "Second Offer",
                      "description": "This is a draft offer to demonstrate having a published and a draft offer for a campaign",
                      "offerState": "draft",
                      "offerVisibility": "account",
                      "requireApproval": true,
                      "expiration": "2021-03-21T15:48:00",
                      "timeZoneId": "Mountain Standard Time",
                      "publisherHasNumber": false
                    },
                    "published": {
                      "revision": 1,
                      "notes": "These notes can only be seen in the detail view",
                      "category": "Home Services\\Tree Removal",
                      "languageCodes": [
                        "EN"
                      ],
                      "numberRestrictions": {
                        "maxNumbersPerPublisher": 1,
                        "allowTF": true,
                        "allowDID": true
                      },
                      "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                      "name": "New new Offer",
                      "description": "This is an offer to be sent to publishers",
                      "offerState": "enabled",
                      "offerVisibility": "private",
                      "requireApproval": false,
                      "expiration": "2021-03-10T15:48:00",
                      "timeZoneId": "Mountain Standard Time",
                      "publisherHasNumber": false
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers/Draft": {
      "get": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Get Draft Offers for a Campaign",
        "description": "Request to retrieve offers previously created but not yet published for the specified campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "GetDraftOffersforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:08:13 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "208"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDraftOffersforaCampaignwithnodraftoffersincampaign"
                },
                "example": {
                  "transactionId": "TRcaa6b9b6-b910-4673-bfd4-9496479bb387",
                  "isSuccessful": true,
                  "draft": null
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Create a Draft Offer for a Campaign",
        "description": "Request to create a draft offer for a campaign. Once successful, this draft will be stored in your account until it is published or deleted. If you want to edit the draft before publishing, resend this request with the updated information.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>The name you want to assign to this offer</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>A description for the offer that will be shown when it is sent to the publishers</td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>The industry category that the offer pertains to i.e. \"Automotive\\\\Car Insurance\" for an offer that will be sent to buyers in the car insurance industry</td>\n</tr>\n<tr>\n<td><code>offerVisibility</code></td>\n<td><p>Determines who can see the offer. This has two options:</p><ul><li>\"private\" makes the offer invitation-only</li><li>\"account\" makes the offer visible to any of your registered publishers</li></ul></td>\n</tr>\n<tr>\n<td><code>requireApproval</code></td>\n<td>Boolean value. If set to true then publishers must be approved by you before they can participate in an offer.</td>\n</tr>\n<tr>\n<td><code>languageCodes</code></td>\n<td>An array containing the codes for the languages of callers that should be routed through this offer</td>\n</tr>\n<tr>\n<td><code>numberRestrictions</code></td>\n<td>An object with the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>allowTF</code></p><p>Boolean value to determine if publishers can allocate Toll-Free numbers to this offer. This is the default setting that can be overridden per publisher.</p><hr><p><code>allowDID</code></p><p>Boolean value to determine if publishers can allocate Toll-Free numbers to this offer. This is the default setting that can be overridden per publisher.</p><hr><p><b>NOTE:</b> At least one of the <code>allowTF</code> or <code>allowDID</code> must be set to true</p><hr><p><code>maxNumbersPerPublisher</code></p><p>The maximum number of unique publisher numbers a participating publisher can allocate to this offer. This is the default setting that can be overridden per publisher.\n</tr>\n</table>\n\n#### Optional Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>notes</code></td>\n<td>Additional information about the offer that will only be visible when the publisher views the detail view for the offer</td>\n</tr>\n<tr>\n<td><code>expiration</code></td>\n<td>The offer will be discontinued at the specified date and time. It will no longer accept calls or new participants. It can be re-enabled after it expires. Publishers will be notified about the expiration immediately when they receive the offers and upon expiration. If you set an <code>expiation</code> you also need to add the following parameter called <code>timeZoneId</code></td>\n</tr>\n<tr>\n<td><code>timeZoneId</code></td>\n<td>The time zone that the <code>expiration</code> is set in</td>\n</tr>\n</table>",
        "operationId": "CreateaDraftOfferforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaDraftOfferforaCampaignRequest"
              },
              "example": {
                "numberRestrictions": {
                  "allowTF": true,
                  "allowDID": true,
                  "maxNumbersPerPublisher": 1
                },
                "offerVisibility": "private",
                "languageCodes": [
                  "EN"
                ],
                "requireApproval": false,
                "name": "New Offer",
                "description": "This is an offer to be sent to publishers",
                "notes": "These notes can only be seen in the detail view",
                "category": "Home Services\\Tree Removal",
                "expiration": "03/10/2021 03:48 PM",
                "timeZoneId": "Mountain Standard Time"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:03:18 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "194"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaDraftOffer"
                },
                "example": {
                  "transactionId": "TRcabb4379-ce2f-4ec4-9e5c-e75c0740b65b",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Delete a Draft Offer Before Publishing",
        "description": "Request to delete the draft offer associated with the campaign before it has been published.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "DeleteaDraftOfferBeforePublishing",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 22:57:33 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "196"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaDraftOfferBeforePublishing"
                },
                "example": {
                  "transactionId": "TRb7d32651-1769-40f3-be18-641810da72cc",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers/Published": {
      "get": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Get Published Offers for a Campaign",
        "description": "Request to view published offers associated with the campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "GetPublishedOffersforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:21:33 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "568"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublishedOffersforaCampaign"
                },
                "example": {
                  "transactionId": "TRd1443f4f-5ac7-4066-97e4-2c28365af970",
                  "isSuccessful": true,
                  "published": {
                    "revision": 1,
                    "notes": "These notes can only be seen in the detail view",
                    "category": "Home Services\\Tree Removal",
                    "languageCodes": [
                      "EN"
                    ],
                    "numberRestrictions": {
                      "maxNumbersPerPublisher": 1,
                      "allowTF": true,
                      "allowDID": true
                    },
                    "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                    "name": "New new Offer",
                    "description": "This is an offer to be sent to publishers",
                    "offerState": "enabled",
                    "offerVisibility": "private",
                    "requireApproval": false,
                    "expiration": "2021-03-10T15:48:00",
                    "timeZoneId": "Mountain Standard Time",
                    "publisherHasNumber": false
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Delete Published Offer for a Campaign",
        "description": "Request to delete the published offer from a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>",
        "operationId": "DeletePublishedOfferforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:27:38 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "134"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePublishedOfferforaCampaignwhennopublishedoffersarepresent1"
                },
                "example": {
                  "transactionId": "TRf3d26752-cc2b-4d43-93d2-d5e0a3ac77bc",
                  "message": "The campaign has no published offer",
                  "messageCode": 0,
                  "errors": []
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:27:31 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePublishedOfferforaCampaign"
                },
                "example": {
                  "transactionId": "TR4788ff89-0804-44c7-8ae0-b4643021c855",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers/Published/Participants": {
      "get": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "View Publishers Participating in Published Offer",
        "description": "Request to retrieve a list of publishers currently participating in the offer for the specified campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>",
        "operationId": "ViewPublishersParticipatinginPublishedOffer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 16:52:01 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "288"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ViewPublishersParticipatinginPublishedOffers"
                },
                "example": {
                  "transactionId": "TRe77b59e3-dfd7-4500-932a-4bbe93482ca0",
                  "isSuccessful": true,
                  "participationRecords": [
                    {
                      "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
                      "offerParticipationStatus": "enrolled"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers/Draft/Publish": {
      "post": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Publish Draft Offers",
        "description": "Request to publish the draft offer created using the \"PUT Create a Draft Offer for a Campaign\" request above.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "PublishDraftOffers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:07:08 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "193"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PublishDraftOffers"
                },
                "example": {
                  "transactionId": "TRc75dfd4d-db4d-4d56-94e5-ac13ac8b099b",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers/Published/Pause": {
      "post": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Pause a Published Offer for a Campaign",
        "description": "Request to pause the offer you currently have published for the specified campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "PauseaPublishedOfferforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:23:06 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "196"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PauseaPublishedOfferforaCampaign"
                },
                "example": {
                  "transactionId": "TR5c7c5340-56c2-4be3-84f9-00da71174278",
                  "isSuccessful": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:26:07 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "123"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PauseaPublishedOfferforaCampaignwhenthereisnoactiveoffertopause1"
                },
                "example": {
                  "transactionId": "TR65f5c8cb-c794-4570-b560-ff1360ab526e",
                  "message": "Operation is not allowed",
                  "messageCode": 0,
                  "errors": []
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers/Published/Resume": {
      "post": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Resume a Paused Offer",
        "description": "Request to resume a published offer that has been paused.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "ResumeaPausedOffer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:25:35 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "123"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeaPausedOfferwhennopausedoffersarepresent1"
                },
                "example": {
                  "transactionId": "TRd9ac5589-db89-4a40-9d85-2f8e0f54e3e8",
                  "message": "Operation is not allowed",
                  "messageCode": 0,
                  "errors": []
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 23:25:01 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "196"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeaPausedOffer"
                },
                "example": {
                  "transactionId": "TR9b8f13fe-2007-45a6-b655-56e87d4d3196",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Offers/Published/Invite": {
      "post": {
        "tags": [
          "Campaign Offers"
        ],
        "summary": "Invite Publisher to Participate in Offer",
        "description": "Request to invite a publisher to join the published offer associated with the specified campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>publisherId</code></td>\n<td>The ID of the publisher you want to invite to participate in the published offer for the specified campaign. Get IDs of <a href=\"#get-information-about-publishers\">publishers</a> associated with your account.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>The message you want the publisher to see when they receive the invite for the offer.</td>\n</tr>\n</table>",
        "operationId": "InvitePublishertoParticipateinOffer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitePublishertoParticipateinOfferRequest"
              },
              "example": {
                "publisherId": "{{publisherId}}",
                "message": "Please join my new offer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 16:49:18 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "196"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InvitePublishertoParticipateinOffer"
                },
                "example": {
                  "transactionId": "TR402494b5-84e0-4e96-96d5-d6aa92cd5360",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/DefaultPayouts": {
      "post": {
        "tags": [
          "Default Payouts for Campaign"
        ],
        "summary": "Add New Default Payout for a Campaign",
        "description": "Request to add a new default payout setting for a campaign. This default payout will be applied to all publishers associated with the campaign unless an override for a publisher is set up using the \"Publisher Payout Overrides\" requests.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\nThere are two types of default payouts you can use for a campaign:\n\n1. \"Fixed Amount\" will modify the payout to a specific amount based on the parameters provided. For more information see the [Fixed Amount](#fixed-amount-payout) Section below.\n\n2. \"Revenue Share\" will modify the payout to a percentage of what the payout would otherwise be based on the parameters provided. For more information see the [Revenue Share](#revenue-share-payout) Section below.\n\n##### Fixed Amount Payout\n<hr>\n\n#### Fixed Amount Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>isRevShare</code></td>\n<td>Set this value to false.</td>\n</tr>\n<tr>\n<td><code>priority</code></td>\n<td><p>The order in which default payouts will be prioritized if a call meets the criteria of more than one.</p><p><b>NOTE:</b> if this is the first default payout you are setting up for the campaign, set the <code>priority</code> to \"0\", which is the highest priority. If you already have default payout(s) associated with this campaign, make sure you each one has a different priority.</p></td>\n</tr>\n<tr>\n<td><code>payoutAmount</code></td>\n<td>The fixed amount that will be paid for calls meeting the criteria of the default payout</td>\n</tr>\n<tr>\n<td><code>payoutConversionType</code></td>\n<td><p>The event that will trigger a payout to the publisher. This has four options:</p><ul><li>\"connectedCall\" will trigger on any call that connects</li><li>\"incomingCall\" will trigger on any incoming call.</li><li>\"convertedCall\" will trigger on any call that converts</li><li>\"callLength\" will convert based on the length of the call.</li></ul><p><b>NOTE:</b> if using the \"callLength\" option, the <code>payoutConversionArgs</code> parameter is also required. See the <a href=\"#payout-conversion-args\">Payout Conversion Args</a> below for more information.</td>\n</tr>\n</table>\n\n#### Fixed Amount Payout Conversion Args\nThis parameter is required only if you are using a `payoutConversionType` of \"callLength\".\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>payoutConversionArgs</code></td>\n<td>An object that contains the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>callLengthInSeconds</code></p>The number of seconds that a call needs to last in order to convert</p><hr><p><code>startTimerEvent</code></p><p>The event that will start the clock for the call length. This has three options:</p><ul><li>\"OnIncomingCall\" Starts the call as soon as it arrives at Ringba before any RTB or routing has been applied</li><li>\"OnDial\" Starts the timer once Ringba dials a target (and before the target answers)</li><li>\"OnCallConnected\" Starts the timer once a call is answered by the target</li></ul></td>\n</tr>\n</table>\n\n##### Revenue Share Payout\n<hr>\n\n#### RevShare Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>isRevShare</code></td>\n<td>Set this value to true.</td>\n</tr>\n<tr>\n<td><code>priority</code></td>\n<td><p>The order in which default payouts will be prioritized if a call meets the criteria of more than one.</p><p><b>NOTE:</b> if this is the first default payout you are setting up for the campaign, set the <code>priority</code> to \"0\", which is the highest priority. If you already have default payout(s) associated with this campaign, make sure you each one has a different priority.</p></td>\n</tr>\n<tr>\n<td><code>revSharePercentage</code></td>\n<td>The percent amount of the standard payout that you want to pay for calls in this campaign</td>\n</tr>\n</table>\n\n#### RevShare Optional Parameters\nIf you are using the Revenue Share Payout option, you can also add a minimum and maximum payout amount using the following parameters.\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>revShareMinPayoutAmount</code></td>\n<td>The minimum payment for calls to this campaign. If the <code>revSharePercentage</code> would otherwise make the payment lower than this amount, it will be adjusted to this amount.</td>\n</tr>\n<tr>\n<td><code>revShareMaxPayoutAmount</code></td>\n<td>The maximum payment for calls to this campaign. If the <code>revSharePercentage</code> would otherwise make the payment higher than this amount, it will be adjusted to this amount.</td>\n</tr>\n</table>\n\n#### Optional Parameters (Fixed Amount OR RevShare)\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>deDupeSetting</code></td>\n<td>Determines how payouts will be handled for duplicate or repeat calls. This is an object containing one parameter</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>secondsFromLasCall</code></p><p>Has three options:<ul><li>-1 disables payouts for duplicate calls</li><li>0 enables payouts for all duplicate calls</li><li>any value greater than 0 allows payouts for duplicate calls that are separated by that number of seconds</li></ul></p></td>\n</tr>\n<tr>\n<td><code>allTimeCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the campaign. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>monthlyCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the campaign each month. Once a new month starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>dailyCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the campaign each day. Once a new day starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>hourlyCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the campaign each hour. Once a new hour starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>concurrencyCap</code></td>\n<td>Payouts will be credited until this number of concurrent calls is reached. Once a call is completed, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>allTimeSumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount. A value of \"-1\" will disable this limit. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>monthlySumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount each month. Once a new month starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>dailySumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount each day. Once a new day starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>hourlySumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount each day. Once a new hour starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>payoutHours</code></td>\n<td>sets the hours during which payouts will be credited for calls to this campaign. This parameter is an array of 7 objects, one for each day starting with Sunday. Each day object contains the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>openTime</code></p><p>Object with parameters <code>hour</code> and <code>minute</code> to decide what hours (in 24 hour format) payouts will start being credited</p><hr><p><code>closeTime</code></p><p>Object with parameters <code>hour</code> and <code>minute</code> to decide what hours (in 24 hour format) payouts will start being credited</p><hr><p><code>inverted</code></p><p>Set this value to \"false\"</p><hr><p><code>isClosed</code></p><p>If set to \"true\" this will disable payouts for the campaign for the entire day, regardless of the values for <code>openTime</code> or <code>closeTime</code>.</p><hr><p><b>NOTE:</b> See the \"Add New Default Payout With All Optional Parameters Specified\" example to the right to see how to set the hours of operation to Monday-Friday 9AM-5PM and closed Saturday and Sunday.</p></td>\n</tr>Ï\n<tr>\n<td><code>timeZoneId</code></td>\n<td>The time zone for the <code>payoutHours</code> limits for the campaign</td>\n</tr>\n<tr>\n<td><code>sendNotifications</code></td>\n<td>Boolean value. If set to true all publishers associated with the campaign will receive a notification about the new default payout settings being added.</td>\n</tr>\n</table>",
        "operationId": "AddNewDefaultPayoutforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewDefaultPayoutforaCampaignRequest"
              },
              "example": {
                "isRevShare": true,
                "priority": 1,
                "revSharePercentage": 90,
                "revShareMinPayoutAmount": 1,
                "revShareMaxPayoutAmount": 10,
                "deDupeSetting": {
                  "secondsFromLastCall": -1
                },
                "allTimeCap": 100,
                "monthlyCap": 10,
                "dailyCap": -1,
                "hourlyCap": 2,
                "concurrencyCap": -1,
                "allTimeSumCap": 1000,
                "monthlySumCap": 100,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "payoutHours": [
                  {
                    "openTime": {
                      "hour": 9,
                      "minute": 0
                    },
                    "closeTime": {
                      "hour": 17,
                      "minute": 0
                    },
                    "inverted": false,
                    "isClosed": true
                  },
                  {
                    "openTime": {
                      "hour": 9,
                      "minute": 0
                    },
                    "closeTime": {
                      "hour": 17,
                      "minute": 0
                    },
                    "inverted": false,
                    "isClosed": false
                  },
                  {
                    "openTime": {
                      "hour": 9,
                      "minute": 0
                    },
                    "closeTime": {
                      "hour": 17,
                      "minute": 0
                    },
                    "inverted": false,
                    "isClosed": false
                  },
                  {
                    "openTime": {
                      "hour": 9,
                      "minute": 0
                    },
                    "closeTime": {
                      "hour": 17,
                      "minute": 0
                    },
                    "inverted": false,
                    "isClosed": false
                  },
                  {
                    "openTime": {
                      "hour": 9,
                      "minute": 0
                    },
                    "closeTime": {
                      "hour": 17,
                      "minute": 0
                    },
                    "inverted": false,
                    "isClosed": false
                  },
                  {
                    "openTime": {
                      "hour": 9,
                      "minute": 0
                    },
                    "closeTime": {
                      "hour": 17,
                      "minute": 0
                    },
                    "inverted": false,
                    "isClosed": false
                  },
                  {
                    "openTime": {
                      "hour": 9,
                      "minute": 0
                    },
                    "closeTime": {
                      "hour": 17,
                      "minute": 0
                    },
                    "inverted": false,
                    "isClosed": true
                  }
                ],
                "timeZoneId": "Mountain Standard Time",
                "notUsedPayout": false,
                "sendNotifications": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Mar 2021 17:00:27 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2692"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewDefaultPayoutforaCampaignWithAllOptionalParametersSpecified"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Default Payouts for Campaign"
        ],
        "summary": "Update ALL Default Payout Settings for a Campaign",
        "description": "Request to modify __ALL__ default payout settings for a specified campaign.\n\n__NOTE:__ This request will modify all of the default payouts for the campaign, so if a default payout is not included in the request body it will be removed from the campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\nThe best way to ensure the fidelity of all the payouts associated with the campaign, it is recommended that you follow these steps in order to use this request:\n\n1. Using the \"GET Get Information About a Single Campaign\" request above, you can retrieve the most current settings for the campaign's default payouts. See the example associated with that request and check out the `defaultPayouts` array, starting on line 27. \n\n3. Once you run that request for the campaign you are interested in, take the objects (one for each default payout) in the `defaultPayouts` array and paste them into an array called `allPayouts` in the body of this request.\n\n3. The `allPayouts` array needs to be put into a JSON object in the body of this request. See the example for implementation\n\n4. At this point, you can modify any of the settings for any or all of the default payouts for the campaign. Check out the \"POST Add New Default Payout\" request above for an explanation of each setting and which ones are required for a Fixed or a RevShare Payout.\n\n__NOTE:__ For this request, the `sendNotifications` parameter is specified one time outside of the `allPayouts` array to determine if publishers will be notified about the changes made using this request.\n\nFollowing these steps will be the best way to use this request and ensure that none of the default payouts are lost by not being included in the request body.",
        "operationId": "UpdateALLDefaultPayoutSettingsforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateALLDefaultPayoutSettingsforaCampaignRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Mar 2021 21:54:06 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2370"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAllDefaultPayoutSettingsforaCampaign"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/DefaultPayouts/{payoutId}": {
      "patch": {
        "tags": [
          "Default Payouts for Campaign"
        ],
        "summary": "Update Single Default Payout Settings",
        "description": "Request to modify a __single__ default payout setting for a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`payoutId` IDs of default payout settings for a campaign can be found in the `defaultPayouts` object in the response of the \"GET Get Information About a Single Campaign\" request above.\n\n### Request Body\n<hr>\n<br>\n\nThis request can be used to modify any of the settings for a default payout. Check out the \"POST Add New Default Payout for a Campaign\" request above for an explanation of all the parameters for a default payout. You can include as many of the parameters as you would like but make sure you at least have the following parameters:\n\n`isRevShare` must be included even if it is not being changed\n\nIf true, you must include `revSharePercentage` even if it is not being changed\n\nIf false, you must include `payoutAmount` and `payoutConversionType` even if they are not being changed",
        "operationId": "UpdateSingleDefaultPayoutSettings",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payoutId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSingleDefaultPayoutSettingsRequest"
              },
              "example": {
                "priority": 1,
                "isRevShare": false,
                "payoutAmount": 10,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                },
                "notUsedPayout": false,
                "sendNotifications": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 23:23:56 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2937"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSingleDefaultPayoutSettingswithonlyonechange"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Default Payouts for Campaign"
        ],
        "summary": "Remove Default Payout Setting form a Campaign",
        "description": "Request to remove a default payout setting from a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`payoutId` IDs of default payout settings for a campaign can be found in the `defaultPayouts` object in the response of the \"GET Get Information About a Single Campaign\" request above.",
        "operationId": "RemoveDefaultPayoutSettingformaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payoutId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 22:40:22 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveDefaultPayoutSettingformaCampaign"
                },
                "example": {
                  "transactionId": "TRc6fdff87-fdf8-457a-9923-812629f1b53e",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Affiliates/{publisherId}/payouts": {
      "get": {
        "tags": [
          "Publisher Payout Overrides"
        ],
        "summary": "Get Publisher Payout Overrides",
        "description": "Request to view the payout overrides for a publisher associated with a specific campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n### Response Overview\nThe response will show you what overrides exist for the publisher and campaign you specify in the request. Any field with a value of \"-1\" means that there is no override set for the publisher and that the campaign payout settings apply for that setting.",
        "operationId": "GetPublisherPayoutOverrides",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Publisher Payout Overrides"
        ],
        "summary": "Create New Publisher Payout Override",
        "description": "Request to create a new payout override for a specified publisher.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n### Request Body\n<hr>\n<br>\nThere are two types of payout override you can use for a publisher:\n\n1. \"Fixed Amount\" will modify the payout to a specific amount based on the parameters provided. For more information see the [Fixed Amount](#fixed-amount-publisher-override) Section below.\n\n2. \"Revenue Share\" will modify the payout to a percentage of what the payout would otherwise be based on the parameters provided. For more information see the [Revenue Share](#revenue-share-publisher-override) Section below.\n\n##### Fixed Amount Publisher Override\n<hr>\n\n#### Fixed Amount Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>isRevShare</code></td>\n<td>Set this value to false.</td>\n</tr>\n<tr>\n<td><code>priority</code></td>\n<td><p>The order in which default payouts will be prioritized if a call meets the criteria of more than one.</p><p><b>NOTE:</b> if this is the first payout override you are setting up for the publisher, set the <code>priority</code> to \"0\", which is the highest priority. If you already have payout override(s) associated with this publisher, make sure you each one has a different priority.</p></td>\n</tr>\n<tr>\n<td><code>payoutAmount</code></td>\n<td>The fixed amount that will be paid for calls meeting the criteria of the payout override</td>\n</tr>\n<tr>\n<td><code>payoutConversionType</code></td>\n<td><p>The event that will trigger a payout to the publisher. This has four options:</p><ul><li>\"connectedCall\" will trigger on any call that connects</li><li>\"incomingCall\" will trigger on any incoming call.</li><li>\"convertedCall\" will trigger on any call that converts</li><li>\"callLength\" will convert based on the length of the call.</li></ul><p><b>NOTE:</b> if using the \"callLength\" option, the <code>payoutConversionArgs</code> parameter is also required. See the <a href=\"#payout-conversion-args\">Payout Conversion Args</a> below for more information.</td>\n</tr>\n</table>\n\n#### Fixed Amount Payout Conversion Args\nThis parameter is required only if you are using a `payoutConversionType` of \"callLength\".\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>payoutConversionArgs</code></td>\n<td>An object that contains the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>callLengthInSeconds</code></p>The number of seconds that a call needs to last in order to convert</p><hr><p><code>startTimerEvent</code></p><p>The event that will start the clock for the call length. This has three options:</p><ul><li>\"OnIncomingCall\" Starts the call as soon as it arrives at Ringba before any RTB or routing has been applied</li><li>\"OnDial\" Starts the timer once Ringba dials a target (and before the target answers)</li><li>\"OnCallConnected\" Starts the timer once a call is answered by the target</li></ul></td>\n</tr>\n</table>\n\n##### Revenue Share Publisher Override\n<hr>\n\n#### RevShare Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>isRevShare</code></td>\n<td>Set this value to true.</td>\n</tr>\n<tr>\n<td><code>priority</code></td>\n<td><p>The order in which payout overrides will be prioritized if a call meets the criteria of more than one.</p><p><b>NOTE:</b> if this is the first payout override you are setting up for the publisher, set the <code>priority</code> to \"0\", which is the highest priority. If you already have payout override(s) associated with this publisher, make sure you each one has a different priority.</p></td>\n</tr>\n<tr>\n<td><code>revSharePercentage</code></td>\n<td>The percent amount of the standard payout that you want to pay for calls to this publisher in this campaign</td>\n</tr>\n</table>\n\n#### RevShare Optional Parameters\nIf you are using the Revenue Share Payout option, you can also add a minimum and maximum payout amount using the following parameters.\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>revShareMinPayoutAmount</code></td>\n<td>The minimum payment for calls to this publisher though this campaign. If the <code>revSharePercentage</code> would otherwise make the payment lower than this amount, it will be adjusted to this amount.</td>\n</tr>\n<tr>\n<td><code>revShareMaxPayoutAmount</code></td>\n<td>The maximum payment for calls to this publisher through this campaign. If the <code>revSharePercentage</code> would otherwise make the payment higher than this amount, it will be adjusted to this amount.</td>\n</tr>\n</table>\n\n#### Optional Parameters (Fixed Amount OR RevShare)\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>deDupeSetting</code></td>\n<td>Determines how payouts will be handled for duplicate or repeat calls. This is an object containing one parameter</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>secondsFromLasCall</code></p><p>Has three options:<ul><li>-1 disables payouts for duplicate calls</li><li>0 enables payouts for all duplicate calls</li><li>any value greater than 0 allows payouts for duplicate calls that are separated by that number of seconds</li></ul></p></td>\n</tr>\n<tr>\n<td><code>allTimeCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the publisher. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>monthlyCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the publisher each month. Once a new month starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>dailyCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the publisher each day. Once a new day starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>hourlyCap</code></td>\n<td>Payouts will be credited until this number of calls is reached for the publisher each hour. Once a new hour starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>concurrencyCap</code></td>\n<td>Payouts will be credited until this number of concurrent calls is reached for this publisher. Once a call is completed, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>allTimeSumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount for this publisher. A value of \"-1\" will disable this limit. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>monthlySumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount for this publisher each month. Once a new month starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>dailySumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount for this publisher each day. Once a new day starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>hourlySumCap</code></td>\n<td>Payouts will continue to be credited until the payouts reach this dollar amount for this publisher each day. Once a new hour starts, payouts will continue to accrue. A value of \"-1\" will disable this limit.</td>\n</tr>\n<tr>\n<td><code>payoutHours</code></td>\n<td>sets the hours during which payouts will be credited for calls to this publisher. This parameter is an array of 7 objects, one for each day starting with Sunday. Each day object contains the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>openTime</code></p><p>Object with parameters <code>hour</code> and <code>minute</code> to decide what hours (in 24 hour format) payouts will start being credited</p><hr><p><code>closeTime</code></p><p>Object with parameters <code>hour</code> and <code>minute</code> to decide what hours (in 24 hour format) payouts will start being credited</p><hr><p><code>inverted</code></p><p>Set this value to \"false\"</p><hr><p><code>isClosed</code></p><p>If set to \"true\" this will disable payouts for the publisher for the entire day, regardless of the values for <code>openTime</code> or <code>closeTime</code>.</p><hr><p><b>NOTE:</b> See the \"Add New Publisher Payout Override With All Optional Parameters Specified\" example to the right to see how to set the hours of operation to Monday-Friday 9AM-5PM and closed Saturday and Sunday.</p></td>\n</tr>Ï\n<tr>\n<td><code>timeZoneId</code></td>\n<td>The time zone for the <code>payoutHours</code> limits for the campaign</td>\n</tr>\n<tr>\n<td><code>sendNotifications</code></td>\n<td>Boolean value. If set to true the publishers associated with the override will receive a notification about the new default payout settings being added.</td>\n</tr>\n</table>",
        "operationId": "CreateNewPublisherPayoutOverride",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewPublisherPayoutOverrideRequest"
              },
              "example": {
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                },
                "isRevShare": false,
                "priority": 0,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "concurrencyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "payoutConversionType": "connectedCall",
                "payoutAmount": 12,
                "notUsedPayout": false,
                "sendNotifications": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 12 Mar 2021 16:46:03 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "3312"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewPublisherPayoutOverride"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Publisher Payout Overrides"
        ],
        "summary": "Update ALL Publisher Payout Overrides",
        "description": "Request to modify __all__ publisher payout overrides. This request will modify all payout overrides for the specified publisher, so if an override is not included in the request body, it will be removed.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n### Request Body\n<hr>\n<br>\n\nThe best way to ensure the fidelity of all the payouts associated with the campaign, it is recommended that you follow these steps in order to use this request:\n\n1. Using the \"GET Get Publisher Payout Overrides\" request above, you can retrieve the most current settings for the publisher's payout overrides. See the example associated with that request and check out the `payoutSettings` array, starting on line 3. \n\n3. Once you run that request for the campaign you are interested in, take the objects (one for each default payout) in the `payoutSettings` array and paste them into an array called `allPayouts` in the body of this request.\n\n3. The `allPayouts` array needs to be put into a JSON object in the body of this request. See the example for implementation\n\n4. At this point, you can modify any of the settings for any or all of the default payouts for the campaign. Check out the \"POST Create New Publisher Payout Override\" request above for an explanation of each setting and which ones are required for a Fixed or a RevShare Payout.\n\n__NOTE:__ For this request, the `sendNotifications` parameter is specified one time outside of the `allPayouts` array to determine if publisher will be notified about the changes made using this request.\n\nFollowing these steps will be the best way to use this request and ensure that none of the payout overrides are lost by not being included in the request body.",
        "operationId": "UpdateALLPublisherPayoutOverrides",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateALLPublisherPayoutOverridesRequest"
              },
              "example": {
                "allPayouts": [
                  {
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "isRevShare": false,
                    "priority": 0,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "concurrencyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "payoutConversionType": "connectedCall",
                    "payoutAmount": 12,
                    "notUsedPayout": false
                  },
                  {
                    "deDupeSetting": {
                      "secondsFromLastCall": 21600
                    },
                    "isRevShare": true,
                    "priority": 1,
                    "revSharePercentage": 95,
                    "allTimeCap": 10,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "concurrencyCap": -1,
                    "allTimeSumCap": 2000,
                    "monthlySumCap": -1,
                    "dailySumCap": 200,
                    "hourlySumCap": -1,
                    "payoutConversionType": "convertedCall",
                    "payoutAmount": -1,
                    "payoutHours": [
                      {
                        "openTime": {
                          "hour": 9,
                          "minute": 0
                        },
                        "closeTime": {
                          "hour": 17,
                          "minute": 0
                        },
                        "inverted": false,
                        "isClosed": false
                      },
                      {
                        "openTime": {
                          "hour": 9,
                          "minute": 0
                        },
                        "closeTime": {
                          "hour": 17,
                          "minute": 0
                        },
                        "inverted": false,
                        "isClosed": false
                      },
                      {
                        "openTime": {
                          "hour": 9,
                          "minute": 0
                        },
                        "closeTime": {
                          "hour": 17,
                          "minute": 0
                        },
                        "inverted": false,
                        "isClosed": false
                      },
                      {
                        "openTime": {
                          "hour": 9,
                          "minute": 0
                        },
                        "closeTime": {
                          "hour": 17,
                          "minute": 0
                        },
                        "inverted": false,
                        "isClosed": false
                      },
                      {
                        "openTime": {
                          "hour": 9,
                          "minute": 0
                        },
                        "closeTime": {
                          "hour": 17,
                          "minute": 0
                        },
                        "inverted": false,
                        "isClosed": false
                      },
                      {
                        "openTime": {
                          "hour": 9,
                          "minute": 0
                        },
                        "closeTime": {
                          "hour": 17,
                          "minute": 0
                        },
                        "inverted": false,
                        "isClosed": false
                      },
                      {
                        "openTime": {
                          "hour": 9,
                          "minute": 0
                        },
                        "closeTime": {
                          "hour": 17,
                          "minute": 0
                        },
                        "inverted": false,
                        "isClosed": false
                      }
                    ],
                    "timeZoneId": "Mountain Standard Time",
                    "notUsedPayout": false
                  }
                ],
                "sendNotifications": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Mar 2021 23:31:38 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2445"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateALLPublisherPayoutOverrides"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/Affiliates/{publisherId}/payouts/{payoutId}": {
      "patch": {
        "tags": [
          "Publisher Payout Overrides"
        ],
        "summary": "Update Single Publisher Payout Override",
        "description": "Request to modify a __single__ payout override from the specified publisher.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n`payoutId` can be found using the \"GET Get Publisher Payout Overrides\" request above.\n\n### Request Body\n<hr>\n<br>\n\nThis request can be used to modify any of the settings for a publisher payout override. Check out the \"POST Add New Publisher Payout Override\" request above for an explanation of all the parameters for a publisher payout override. You can include as many of the parameters as you would like but make sure you at least have the following parameters:\n\n`isRevShare` must be included even if it is not being changed\n\nIf true, you must include `revSharePercentage` even if it is not being changed\n\nIf false, you must include `payoutAmount` and `payoutConversionType` even if they are not being changed",
        "operationId": "UpdateSinglePublisherPayoutOverride",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payoutId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSinglePublisherPayoutOverrideRequest"
              },
              "example": {
                "priority": 1,
                "isRevShare": false,
                "payoutAmount": 7,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": 100,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": 700,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                },
                "notUsedPayout": false,
                "sendNotifications": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Mar 2021 23:37:49 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2679"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSinglePublisherPayoutOverride"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Publisher Payout Overrides"
        ],
        "summary": "Remove a Publisher Payout Override",
        "description": "Request to remove a payout override from the specified publisher.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n\\####`publisherId` get IDs of [publishers](#?????) associated with your account\n\n`payoutId` can be found using the \"GET Get Publisher Payout Overrides\" request above.",
        "operationId": "RemoveaPublisherPayoutOverride",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payoutId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 12 Mar 2021 16:55:35 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "194"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveaPublisherPayoutOverride"
                },
                "example": {
                  "transactionId": "TR3364b9fd-b3bf-4c35-bcda-1090bcba25ca",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/rtb": {
      "get": {
        "tags": [
          "Campaign RTB Settings"
        ],
        "summary": "Get RTB for Campaign",
        "description": "Request to get details about the real time bidding settings for a campaign. If RTB is not enabled for the campaign, you will see an error message like the one in the \"Get RTB for Campaign without RTB enabled\" example.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>",
        "operationId": "GetRTBforCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 02 Mar 2021 17:18:43 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "555"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetRTBforCampaignwithRTBenabled"
                },
                "example": {
                  "transactionId": "TR1802dc94-5cd2-41a3-ba09-0ae19ff30cc0",
                  "isSuccessful": true,
                  "rtb": {
                    "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                    "enabled": true,
                    "sipOnly": false,
                    "icp": "Off",
                    "customIntegrations": {
                      "journayaTCPA": {
                        "state": "Off"
                      }
                    },
                    "callerIdRequired": false,
                    "bidExpirationPolicy": {
                      "bidExpirationInSeconds": 20,
                      "routeCallsForStaleBids": true,
                      "honorExpiredBid": false
                    },
                    "rateLimit": {
                      "maxRequests": 10,
                      "perSeconds": 60
                    },
                    "bidAdjustments": [],
                    "bidSettings": {
                      "baseBidAmount": 10,
                      "maxBidAmount": 25,
                      "deDupeSetting": {
                        "secondsFromLastCall": -1
                      },
                      "conversionType": "incomingCall",
                      "conversionArgs": {
                        "callLengthInSeconds": 30,
                        "startTimerEvent": "OnIncomingCall"
                      }
                    },
                    "tags": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 02 Mar 2021 17:22:25 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "197"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetRTBforCampaignwithoutRTBenabled1"
                },
                "example": {
                  "message": "CAf36c8dcd536349bd9114d27618eefb97 is not found",
                  "errors": [
                    "CAf36c8dcd536349bd9114d27618eefb97 is not found"
                  ],
                  "messageCode": 101,
                  "transactionId": "TR96011b4f-ae14-48c2-b815-8894476efb54"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign RTB Settings"
        ],
        "summary": "Enable RTB for a Campaign",
        "description": "Request to enable RTB for a campaign __for the first time__ and to establish the RTB settings for that campaign. If you want to modify the RTB settings for a campaign that has previously had RTB enabled, use the \"PATCH Edit RTB Settings for a Campaign\" request below.\n<br>\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>enabled</code></td>\n<td>Boolean value, set to \"true\" to enable RTB for the campaign</td>\n</tr>\n<tr>\n<td><code>sipOnly</code></td>\n<td>Boolean value. If set to true, this will make it so that RTB for this campaign will only provide SIP URI numbers to be called</td>\n</tr>\n<tr>\n<td><code>callerIdRequired</code></td>\n<td>Boolean value. If set to true, a caller ID is required for every ping and any ping without a caller ID will be ignored.</td>\n</tr>\n<tr>\n<td><code>icp</code></td>\n<td>Stands for Instant Caller Profiles and has the following options:<p>\"Off\"</p><p>Disables ICP for the campaign RTB</p><hr><p>\"On\"</p><p>Enables ICP for the campaign RTB. If enabled, ICP will be used to enrich the call for every ping that contains a caller ID.</p><hr><p>\"Required\"</p><p>If set to \"Required\", no bid will be returned if the call didn't trigger ICP.</p></td>\n</tr>\n<tr>\n<td><code>bidExpirationPolicy</code></td>\n<td>An object to specify when bids expire and how to handle expired bids. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>bidExpirationInSeconds</code></p><p>The number of seconds that a bid will remain valid after its creation.</p><hr><p><code>routeCallsForStaleBids</code></p><p>Determines the behavior of bids after the <code>bidExpirationInSeconds</code> is reached. If set to \"false\" then calls will be rejected after they expire. If set to \"true\" then calls will be routed normally regardless of whether or not they have expired.</p></td>\n</tr>\n<tr>\n<td><code>rateLimit</code></td>\n<td>An object to set a limit to the number of RTB bids for the campaign. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>maxRequests</code></p><p>The maximum number of requests in a specified time period. To specify the time period see the options for the next parameter <code>perSeconds</code></p><hr><p><code>perSeconds</code></p><p>Specifies the time period for the <code>maxRequests</code> parameter. There are three options for the time period:</p><ul><li>\"60\" to specify <code>maxRequests</code> per minute</li><li>\"3600\" to specify <code>maxRequests</code> per hour</li><li>\"86400\" to specify <code>maxRequests</code> per day</li></ul></td>\n</tr>\n<tr>\n<td><code>bidSettings</code></td>\n<td>An object to specify the settings for RTB bids for the campaign. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>baseBidAmount</code></p><p>The dollar value of a bid before any adjustments are made</p><hr><p><code>maxBidAmount</code></p><p>The maximum dollar value for a bid regardless of adjustments made</p><hr><p><code>conversionType</code></p><p>Determines what event will convert a call and has the following options:</p><ul><li>\"incomingCall\" converts any incoming call</li><li>\"connectedCall\" converts any connected call</li><li>\"callLength\" converts a call based on length. If using this option, you need to include the <code>conversionArgs</code> parameter within the <code>bidSettings</code> object. See the <a href=\"#conversionargs-table\">ConversionArgs Table</a> below for more details</li></ul><hr><p><code>deDupeSetting</code></p><p>This determines if/when duplicate or repeat calls will be paid multiple times. It has three options:</p><ul><li>\"-1\" will allow payouts for repeat calls regardless of how much time passes between calls</li><li>\"0\" disables payouts for repeat calls</li><li>\"3600\" enables payouts for repeat calls as long as they are more than one hour (3600 seconds) apart. Any multiple of 3600 can be entered for this value.</li></ul></td>\n</tr>\n</table>\n\n#### ConversionArgs Table\nIf you use the `callLength` option for `conversionType` you must include the following object in the `bidSettings` object:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>conversionArgs</code></td>\n<td>An objects that specifies how long a call needs to last in order to convert. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>callLengthInSeconds</code></p><p>The number of seconds that a call needs to last in order to convert</p><hr><p><code>startTimerEvent</code></p><p>The event that will start the timer for the call length. It has three options:</p><ul><li>\"OnIncomingCall\" Starts the call as soon as it arrives at Ringba before any RTB or routing has been applied</li><li>\"OnDial\" Starts the timer once Ringba dials a target (and before the target answers)</li><li>\"OnCallConnected\" Starts the timer once a call is answered by the target</li></ul></td>\n</table>\n\n#### Optional Parameters\n##### Bid Adjustments\nYou can add bid adjustments based on tags by adding a parameter called `bidAdjustments`, which is an array that contains an object for each adjustment. Each adjustment object contains the following parameters:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>criteria</code></td>\n<td>An object the specifies the criteria that bids should be compared to for filtering. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>tagId</code></p><p>The name of the tag you want to compare a bid to</p>\n<hr><p><code>comparisonType</code></p><p>Specifies the criteria that a tag must meet to trigger the bid modifier. This has the following value options:</p><ul><li>\"EQUALS\"</li><li>\"CONTAINS\"</li><li>\"GREATER_THAN\"</li><li>\"LESS_THAN\"</li><li>\"BULK\"</li><li>\"MATCH\"</li><li>\"REGEX\"</li><li>\"REQUIRED\"</li></ul><p>See the <a href=\"#comparisontype-table\">comparisonType Table</a> below for more information.</p><hr><p><code>value</code></p><p>The value you want to use for the comparison</p><hr><p><code>isNegativeMatch</code></p><p>Boolean value. If set to \"true\" then the comparison type is negated so \"EQUALS\" would become \"NOT EQUAL TO\" and \"GREATER_THAN\" would become \"LESS THAN OR EQUAL TO\"</p></td>\n</tr>\n<tr>\n<td><code>adjustmentType</code></td>\n<td>The type of adjustment to be made if the bid modifier is triggered. You can make the following adjustments to a bid:</td>\n</tr>\n<tr>\n<td></td>\n<td><p>\"Add\"</p><p>Adds a value to the bid, specified by the <code>adjustmentValue</code> parameter below. Adding a negative number will subtract that amount from the payout.</p><hr><p>\"Multiply\"</p><p>Multiplies the bid by the amount specified by the <code>adjustmentValue</code> parameter below.</p><hr><p>\"Override\"</p><p>Overrides the bid amount, changing it to the amount specified by the <code>adjustmentValue</code> parameter below.</p><hr><p>\"Reject\"</p><p>Causes the bid to be rejected if the modifier is triggered. If using \"Reject\" the <code>adjustmentValue</code> parameter needs to have a value of \"0\".</p></td>\n</tr>\n<tr>\n<td><code>adjustmentValue</code></td>\n<td>The amount by which you want to adjust the bid if the modifier is triggered.</td>\n</tr>\n</table>\n\n#### comparisonType Table\n<table>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>\"EQUALS\"</td>\n<td>Triggers if bids have a tag specified in the <code>tagId</code> equal to the <code>value</code> specified in the <code>criteria</code> object.</td>\n</tr>\n<tr>\n<td>\"CONTAINS\"</td>\n<td>Triggers if bids have a tag specified in the <code>tagId</code> containing the <code>value</code> specified in the <code>criteria</code> object.</td>\n</tr>\n<tr>\n<td>\"GREATER_THAN\"</td>\n<td>Triggers if bids have a tag specified in the <code>tagId</code> greater than the <code>value</code> specified in the <code>criteria</code> object.</td>\n</tr>\n<tr>\n<td>\"LESS_THAN\"</td>\n<td>Triggers if bids have a tag specified in the <code>tagId</code> less than the <code>value</code> specified in the <code>criteria</code> object.</td>\n</tr>\n<tr>\n<td>\"BULK\"</td>\n<td>Allows a user to set adjustments for multiple cases in one modifier. For example, if you want different adjustments based on age, you can do that with a bulk modifier. For more details, see the <a href=\"#bulk-modifiers\">Bulk Modifiers</a> section below or the \"Add Bulk Modifier to a Campaign\" example associated with the \"PATCH Edit RTB Settings for a Campaign\" request for implementation.</td>\n</tr>\n<tr>\n<td>\"MATCH\"</td>\n<td>Can be used for two cases:</td>\n</tr>\n<tr>\n<td></td>\n<td><p>To trigger in cases where the tag specified in <code>tagId</code> is NOT SET use a <code>comparisonType</code> of \"MATCH\", a <code>value</code> of \"?*\", and set <code>isNegativeMatch</code> to true.<p>See the tag with a <code>tagId</code> of \"tag four\" in the \"Enable RTB for a Campaign with adjustments\" example for implementation.<hr><p>To trigger based on a Wildcard Match. For example:<p>If you have a tag for the full name but only want calls with a surname of \"Smith\" you can use a <code>comparisonType</code> of \"MATCH\" and a <code>value</code> of \"*Smith*\"<p>See the tag with a <code>tagId</code> of \"full name\" in the \"Enable RTB for a Campaign with adjustments\" example for implementation.</p></p>\n</tr>\n<tr>\n<td>\"REGEX\"</td>\n<td><p>Triggers if bids have a tag specified in the <code>tagId</code> that contains a regular expression specified in the  <code>value</code> specified in the <code>criteria</code> object. \n<p>For example if you want to modify bids from any IP address starting with 201 you can specify a <code>tagId</code> for IP address and a <code>value</code> of <code>201\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}</code>\n<p>For more information about the RegEx used by Ringba click <a href=\"https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference\" target=\"_blank\">here</a>.</td>\n</tr>\n<tr>\n<td>\"REQUIRED\"</td>\n<td>Rejects any bid that does not have the tag specified in the <code>tagId</code> in the <code>criteria</code> object.<p><b>NOTE:</b> If using the \"REQUIRED\" <code>comparisonType</code> the <code>value</code> needs to be a blank string (\"\"). The <code>adjustmentType</code> and <code>adjustmentValue</code> fields can be omitted.</td>\n</tr>\n<tr>\n</table>\n\n#### Bulk Modifiers\nIf you want to add a bulk modifier to specify different adjustment based on different values for one criteria, the first step is to create a CSV file to specify the adjustment criteria. If you wanted to adjust bids based on age, you could make a table like the following and download it as a CSV file:\n\n<table>\n<tr>\n<td>16</td>\n<td>2.00</td>\n</tr>\n<tr>\n<td>17</td>\n<td>2.00</td>\n</tr>\n<tr>\n<td>18</td>\n<td>2.00</td>\n</tr>\n<tr>\n<td>19</td>\n<td>2.00</td>\n</tr>\n<tr>\n<td>20</td>\n<td>2.00</td>\n</tr>\n<tr>\n<td>21</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>22</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>23</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>24</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>25</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>26</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>27</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>28</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>29</td>\n<td>1.50</td>\n</tr>\n<tr>\n<td>30</td>\n<td>1.00</td>\n</tr>\n</table>\n\n__NOTE:__ The first column in this table represents the age and in this case the second column represents the factor by which the bid will be multiplied because it uses an `adjustmentType` of \"Multiply\" (see below). You can use any of the available `adjustmentTypes` and the values in the second column will be the `adjustmentValue` for that criteria.\n\nOnce you have downloaded the table as a CSV file, use the \"PUT Create RTB Bulk Modifier from CSV\" request in the \"RTB Bulk Modifiers\" folder to upload the CSV file. This request will return and object called `rtbBulkModifierList` that will have an `id` starting with \"RTBLIST...\" which you will need for the next step. Once you have the `id` create an object like the following:\n\n```\n{\n    \"criteria\": {\n        \"tagId\": \"Age Bulk Modifier\",\n        \"comparisonType\": \"BULK\",\n        \"value\": \"1\",\n        \"isNegativeMatch\": false\n    },\n    \"adjustmentType\": \"Multiply\",\n    \"adjustmentValue\": 1.0,\n    \"bulkListId\": \"RTBLISTc5de66696f8142448b0f0de930c35acb\"\n}\n```\nand add it to the `bidAdjustments` array. See the tag labelled \"Age Bulk Modifier\" in the \"Enable RTB for a Campaign with adjustments\" example for implementation.\n\n__NOTE:__ The `bulkListId` is required if you are adding a bulk modifier.",
        "operationId": "EnableRTBforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableRTBforaCampaignRequest"
              },
              "example": {
                "enabled": true,
                "sipOnly": false,
                "callerIdRequired": false,
                "icp": "Off",
                "customIntegrations": {
                  "journayaTCPA": {
                    "state": "Off"
                  }
                },
                "bidExpirationPolicy": {
                  "bidExpirationInSeconds": 20,
                  "routeCallsForStaleBids": false
                },
                "rateLimit": {
                  "maxRequests": 10,
                  "perSeconds": 60
                },
                "bidSettings": {
                  "baseBidAmount": 10,
                  "maxBidAmount": 25,
                  "conversionType": "incomingCall",
                  "conversionArgs": {
                    "callLengthInSeconds": 30,
                    "startTimerEvent": "OnIncomingCall"
                  },
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                "bidAdjustments": []
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 03 Mar 2021 16:26:12 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "541"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EnableRTBforaCampaign"
                },
                "example": {
                  "transactionId": "TRb8d4701c-ec01-4a50-ba35-11b69c16316b",
                  "isSuccessful": true,
                  "rtb": {
                    "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                    "enabled": true,
                    "sipOnly": false,
                    "icp": "Off",
                    "customIntegrations": null,
                    "callerIdRequired": false,
                    "bidExpirationPolicy": {
                      "bidExpirationInSeconds": 20,
                      "routeCallsForStaleBids": false,
                      "honorExpiredBid": false
                    },
                    "rateLimit": {
                      "maxRequests": 10,
                      "perSeconds": 60
                    },
                    "bidAdjustments": [],
                    "bidSettings": {
                      "baseBidAmount": 10,
                      "maxBidAmount": 25,
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      },
                      "conversionType": "incomingCall",
                      "conversionArgs": {
                        "callLengthInSeconds": 30,
                        "startTimerEvent": "OnIncomingCall"
                      }
                    },
                    "tags": []
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Campaign RTB Settings"
        ],
        "summary": "Edit RTB Settings for a Campaign",
        "description": "Request to modify RTB setting for a campaign that has RTB enabled. See the \"PUT Enable RTB for a Campaign for an explanation of what each parameter does. Any parameter can be modified using this request.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "EditRTBSettingsforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRTBSettingsforaCampaignRequest"
              },
              "example": {
                "bidAdjustments": [
                  {
                    "criteria": {
                      "tagId": "{Demographics:Age}",
                      "comparisonType": "BULK",
                      "value": "1",
                      "isNegativeMatch": false
                    },
                    "adjustmentType": "Multiply",
                    "adjustmentValue": 1.0,
                    "bulkListId": "RTBLISTc5de66696f8142448b0f0de930c35acb"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 16:30:17 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "715"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddBulkModifiertoaCampaign"
                },
                "example": {
                  "transactionId": "TR588d2288-ad33-4e77-99a5-309d0ea08f90",
                  "isSuccessful": true,
                  "rtb": {
                    "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                    "enabled": true,
                    "sipOnly": false,
                    "icp": "Off",
                    "customIntegrations": {
                      "journayaTCPA": {
                        "state": "Off"
                      }
                    },
                    "callerIdRequired": false,
                    "bidExpirationPolicy": {
                      "bidExpirationInSeconds": 20,
                      "routeCallsForStaleBids": true,
                      "honorExpiredBid": false
                    },
                    "rateLimit": {
                      "maxRequests": 10,
                      "perSeconds": 86400
                    },
                    "bidAdjustments": [
                      {
                        "criteria": {
                          "tagId": "{Demographics:Age}",
                          "comparisonType": "BULK",
                          "value": "1",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Multiply",
                        "adjustmentValue": 1,
                        "bulkListId": "RTBLISTc5de66696f8142448b0f0de930c35acb"
                      }
                    ],
                    "bidSettings": {
                      "baseBidAmount": 10,
                      "maxBidAmount": 25,
                      "deDupeSetting": {
                        "secondsFromLastCall": 3600
                      },
                      "conversionType": "callLength",
                      "conversionArgs": {
                        "callLengthInSeconds": 30,
                        "startTimerEvent": "OnCallConnected"
                      }
                    },
                    "tags": [
                      {
                        "tag": "Age Bulk Modifier",
                        "required": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign RTB Settings"
        ],
        "summary": "Disable RTB for a Campaign",
        "description": "Request to disable RTB for a campaign. This request will remove all RTB settings so after it is sent successfully, you will need to use the \"PUT Enable RTB for a Campaign\" request in order to reactivate RTB for the campaign. \n\n__NOTE:__ If you just want to pause RTB for the campaign without losing your previously established RTB settings, you can use the \"PATCH Edit RTB Settings for a Campaign\" request. See the \"Pause RTB for a Campaign\" example associated with that request.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n",
        "operationId": "DisableRTBforaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 04 Mar 2021 21:49:24 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "196"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DisableRTBforaCampaign"
                },
                "example": {
                  "transactionId": "TRd76c8435-6e8e-42e7-9bc2-14707d782974",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/rtb/publishers/{publisherId}": {
      "get": {
        "tags": [
          "Publisher RTB Overrides"
        ],
        "summary": "Get RTB Settings for a Publisher",
        "description": "Request to get RTB information for a publisher associated with a RTB-enabled campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account",
        "operationId": "GetRTBSettingsforaPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Publisher RTB Overrides"
        ],
        "summary": "Override RTB Settings for a Publisher",
        "description": "Request to override the campaign's RTB settings for a specific publisher\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\nYou can override the campaign's RTB settings using the following parameters:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>enabled</code></td>\n<td>Boolean value. If set to false, RTB will be disabled for this publisher</td>\n</tr>\n<tr>\n<td><code>callerIdRequiredOverride</code></td>\n<td>Boolean value. If set to true, a Caller ID is required for calls to this publisher.</td>\n</tr>\n<tr>\n<td><code>rateLimitOverride</code></td>\n<td>An object to override the campaign's limit to the number of RTB bids for the publisher. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>maxRequests</code></p><p>The maximum number of requests in a specified time period. To specify the time period see the options for the next parameter <code>perSeconds</code></p><hr><p><code>perSeconds</code></p><p>Specifies the time period for the <code>maxRequests</code> parameter. There are three options for the time period:</p><ul><li>\"60\" to specify <code>maxRequests</code> per minute</li><li>\"3600\" to specify <code>maxRequests</code> per hour</li><li>\"86400\" to specify <code>maxRequests</code> per day</li></ul></td>\n</tr>\n<tr>\n<td><code>bidSettingsOverride</code></td>\n<td>An object to override the campaign's settings for RTB bids for the publisher. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>baseBidAmount</code></p><p>The dollar value of a bid before any adjustments are made</p><hr><p><code>maxBidAmount</code></p><p>The maximum dollar value for a bid regardless of adjustments made</p><hr><p><code>conversionType</code></p><p>Determines what event will convert a call and has the following options:</p><ul><li>\"incomingCall\" converts any incoming call</li><li>\"connectedCall\" converts any connected call</li><li>\"callLength\" converts a call based on length. If using this option, you need to include the <code>conversionArgs</code> parameter within the <code>bidSettingsOverride</code> object. See the <a href=\"#conversionargs-override-table\">ConversionArgs Table</a> below for more details</li></ul><hr><p><code>deDupeSetting</code></p><p>This determines if/when duplicate or repeat calls will be paid multiple times. It has three options:</p><ul><li>\"-1\" will allow payouts for repeat calls regardless of how much time passes between calls</li><li>\"0\" disables payouts for repeat calls</li><li>\"3600\" enables payouts for repeat calls as long as they are more than one hour (3600 seconds) apart. Any multiple of 3600 can be entered for this value.</li></ul></td>\n</tr>\n<tr>\n<td><code>bidAdjustmentsOverride</code></td>\n<td>Used to override the campaign's bid adjustment settings. For more information about bid adjustments check out the <a href=\"#bid-adjustments\">Bid Adjustments</a> section of the \"PUT Enable RTB for a Campaign\" request.\n</tr>\n</table>\n\n#### ConversionArgs Override Table\nIf you use the `callLength` option for `conversionType` you must include the following object in the `bidSettings` object:\n\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>conversionArgs</code></td>\n<td>An objects that specifies how long a call needs to last in order to convert. It has the following parameters:</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>callLengthInSeconds</code></p><p>The number of seconds that a call needs to last in order to convert</p><hr><p><code>startTimerEvent</code></p><p>The event that will start the timer for the call length. It has three options:</p><ul><li>\"OnIncomingCall\" Starts the call as soon as it arrives at Ringba before any RTB or routing has been applied</li><li>\"OnDial\" Starts the timer once Ringba dials a target (and before the target answers)</li><li>\"OnCallConnected\" Starts the timer once a call is answered by the target</li></ul></td>\n</table>",
        "operationId": "OverrideRTBSettingsforaPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideRTBSettingsforaPublisherRequest"
              },
              "example": {
                "enabled": true,
                "callerIdRequiredOverride": false,
                "rateLimitOverride": {
                  "maxRequests": 12,
                  "perSeconds": 86400
                },
                "bidSettingsOverride": {
                  "baseBidAmount": 9,
                  "maxBidAmount": 21,
                  "conversionType": "callLength",
                  "conversionArgs": {
                    "callLengthInSeconds": 30,
                    "startTimerEvent": "OnCallConnected"
                  },
                  "deDupeSetting": {
                    "secondsFromLastCall": 3600
                  }
                },
                "bidAdjustmentsOverride": [
                  {
                    "criteria": {
                      "tagId": "some tag",
                      "comparisonType": "EQUALS",
                      "value": "1",
                      "isNegativeMatch": false
                    },
                    "adjustmentType": "Add",
                    "adjustmentValue": 2,
                    "bulkListId": null
                  },
                  {
                    "criteria": {
                      "tagId": "tag one",
                      "comparisonType": "BULK",
                      "value": "",
                      "isNegativeMatch": false
                    },
                    "adjustmentType": "Add",
                    "adjustmentValue": 2
                  },
                  {
                    "criteria": {
                      "tagId": "tag two",
                      "comparisonType": "CONTAINS",
                      "value": "value",
                      "isNegativeMatch": false
                    },
                    "adjustmentType": "Add",
                    "adjustmentValue": -2,
                    "bulkListId": null
                  },
                  {
                    "criteria": {
                      "tagId": "tag three",
                      "comparisonType": "GREATER_THAN",
                      "value": "3",
                      "isNegativeMatch": false
                    },
                    "adjustmentType": "Multiply",
                    "adjustmentValue": 2,
                    "bulkListId": null
                  },
                  {
                    "criteria": {
                      "tagId": "tag four",
                      "comparisonType": "MATCH",
                      "value": "?*",
                      "isNegativeMatch": true
                    },
                    "adjustmentType": "Override",
                    "adjustmentValue": 5,
                    "bulkListId": null
                  },
                  {
                    "criteria": {
                      "tagId": "tag five",
                      "comparisonType": "REQUIRED",
                      "value": "",
                      "isNegativeMatch": false
                    }
                  },
                  {
                    "criteria": {
                      "tagId": "ip address",
                      "comparisonType": "REGEX",
                      "value": "201\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                      "isNegativeMatch": false
                    },
                    "adjustmentType": "Add",
                    "adjustmentValue": 10,
                    "bulkListId": null
                  },
                  {
                    "criteria": {
                      "tagId": "full name",
                      "comparisonType": "MATCH",
                      "value": "*Smith*",
                      "isNegativeMatch": false
                    },
                    "adjustmentType": "Add",
                    "adjustmentValue": 12,
                    "bulkListId": null
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 18:08:11 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "944"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OverrideRTBSettingsforaPublisher"
                },
                "example": {
                  "transactionId": "TRde65ebd3-d6b2-47c4-afb3-88f134cd7ede",
                  "isSuccessful": true,
                  "publisher-rtb": {
                    "id": "b106b4d2a6f843bc94dd2c0f030570e5",
                    "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                    "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
                    "enabled": true,
                    "bidAdjustmentsOverride": [
                      {
                        "criteria": {
                          "tagId": "some tag",
                          "comparisonType": "EQUALS",
                          "value": "1",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Add",
                        "adjustmentValue": 2
                      },
                      {
                        "criteria": {
                          "tagId": "tag one",
                          "comparisonType": "BULK",
                          "value": "",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Add",
                        "adjustmentValue": 2
                      },
                      {
                        "criteria": {
                          "tagId": "tag two",
                          "comparisonType": "CONTAINS",
                          "value": "value",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Add",
                        "adjustmentValue": -2
                      },
                      {
                        "criteria": {
                          "tagId": "tag three",
                          "comparisonType": "GREATER_THAN",
                          "value": "3",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Multiply",
                        "adjustmentValue": 2
                      },
                      {
                        "criteria": {
                          "tagId": "tag four",
                          "comparisonType": "MATCH",
                          "value": "?*",
                          "isNegativeMatch": true
                        },
                        "adjustmentType": "Override",
                        "adjustmentValue": 5
                      },
                      {
                        "criteria": {
                          "tagId": "tag five",
                          "comparisonType": "REQUIRED",
                          "value": "",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Multiply",
                        "adjustmentValue": 0
                      },
                      {
                        "criteria": {
                          "tagId": "ip address",
                          "comparisonType": "REGEX",
                          "value": "201\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Add",
                        "adjustmentValue": 10
                      },
                      {
                        "criteria": {
                          "tagId": "full name",
                          "comparisonType": "MATCH",
                          "value": "*Smith*",
                          "isNegativeMatch": false
                        },
                        "adjustmentType": "Add",
                        "adjustmentValue": 12
                      }
                    ],
                    "bidExpirationPolicyOverride": null,
                    "bidSettingsOverride": {
                      "baseBidAmount": 9,
                      "maxBidAmount": 21,
                      "deDupeSetting": {
                        "secondsFromLastCall": 3600
                      },
                      "conversionType": "callLength",
                      "conversionArgs": {
                        "callLengthInSeconds": 30,
                        "startTimerEvent": "OnCallConnected"
                      }
                    },
                    "rateLimitOverride": {
                      "maxRequests": 12,
                      "perSeconds": 86400
                    },
                    "callerIdRequiredOverride": false,
                    "tags": [
                      {
                        "tag": "tag five",
                        "required": true
                      },
                      {
                        "tag": "some tag",
                        "required": false
                      },
                      {
                        "tag": "tag one",
                        "required": false
                      },
                      {
                        "tag": "tag two",
                        "required": false
                      },
                      {
                        "tag": "tag three",
                        "required": false
                      },
                      {
                        "tag": "tag four",
                        "required": false
                      },
                      {
                        "tag": "ip address",
                        "required": false
                      },
                      {
                        "tag": "full name",
                        "required": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/rtb/publishers/{publisherId}/url": {
      "get": {
        "tags": [
          "Publisher RTB Overrides"
        ],
        "summary": "Get RTB URLs for a Publisher",
        "description": "Request to get the publisher's URLs for the requests in the \"Real Time Bidding (RTB) folder.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>\n\n`publisherId` get IDs of [publishers](#get-information-about-publishers) associated with your account\n\n### Response Overview\n<hr>\n<br>\n\nThis request will return two URLs, one for JSON and one for XML. You will need to use the appropriate URL when making the requests found in the \"Real Time Bidding (RTB) folder.",
        "operationId": "GetRTBURLsforaPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 19:58:58 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "292"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetRTBURLsforaPublisher"
                },
                "example": {
                  "transactionId": "TR265361bf-b398-42fa-bb4e-2ff2cc3212fd",
                  "isSuccessful": true,
                  "rtb": {
                    "urls": {
                      "json": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.json",
                      "xml": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.xml"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/ivrtree": {
      "get": {
        "tags": [
          "IVR Trees"
        ],
        "summary": "Get IVR Trees Associated with Account",
        "description": "Request to get the IVR Tree(s) associated with the specified account.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n",
        "operationId": "GetIVRTreesAssociatedwithAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/campaigns/{campaignId}/IVRTree": {
      "post": {
        "tags": [
          "IVR Trees"
        ],
        "summary": "Add IVR Tree to a Campaign",
        "description": "Request to add an IVR Tree associated with your account to the specified campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>",
        "operationId": "AddIVRTreetoaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddIVRTreetoaCampaignRequest"
              },
              "example": {
                "ivrTreeId": "{{IVRTreeId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 17:11:44 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2543"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddIVRTreetoaCampaign"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "IVR Trees"
        ],
        "summary": "Remove IVR Tree from a Campaign",
        "description": "Request to remove an IVR tree from a campaign.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n`campaignId` get IDs of your [campaigns](#get-campaign-information)\n<br>",
        "operationId": "RemoveIVRTreefromaCampaign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Mar 2021 17:10:47 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2038"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveIVRTreefromaCampaign"
                },
                "example": {
                  "transactionId": "TRc8957c5a-76bc-4bf6-bc55-bbc21a4471ba",
                  "campaign": {
                    "defaultPayout": {
                      "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                      "name": "Campaign Default",
                      "priority": 0,
                      "isRevShare": false,
                      "payoutAmount": 0,
                      "revSharePercentage": -1,
                      "revShareMaxPayoutAmount": -1,
                      "revShareMinPayoutAmount": -1,
                      "payoutConversionType": "incomingCall",
                      "isGlobal": false,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1,
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "concurrencyCap": -1,
                      "timeZoneId": "UTC",
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      }
                    },
                    "defaultPayouts": [
                      {
                        "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                        "name": "Campaign Default",
                        "priority": 0,
                        "isRevShare": false,
                        "payoutAmount": 0,
                        "revSharePercentage": -1,
                        "revShareMaxPayoutAmount": -1,
                        "revShareMinPayoutAmount": -1,
                        "payoutConversionType": "incomingCall",
                        "isGlobal": false,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1,
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "concurrencyCap": -1,
                        "timeZoneId": "UTC",
                        "deDupeSetting": {
                          "secondsFromLastCall": 0
                        }
                      }
                    ],
                    "ivrEnabled": true,
                    "userCampaignId": "",
                    "countryCode": "US",
                    "completed": true,
                    "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
                    "offerId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
                    "evalAnonymDuplication": true,
                    "payoutDupesGlobal": false,
                    "affiliateNumbers": [
                      {
                        "phoneNumber": "+18885852294",
                        "displayNumber": "+18885852294",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+18885852294",
                        "campaignId": "",
                        "allocationDT": "2021-02-08T23:56:26.0457102Z",
                        "lastBillDT": "2021-03-08T00:00:00Z",
                        "nextChargeDT": "2021-04-06T00:00:00Z",
                        "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 8,
                        "isTollFree": true,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "areaCode": "888",
                          "isTollFree": true
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "PNZFWQO0",
                        "id": "PNZFWQO0",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "deDupeSettings": {
                      "routeToOriginal": false,
                      "routeToDifferent": false,
                      "strict": true
                    },
                    "routes": [
                      {
                        "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                        "priority": {
                          "priority": 1,
                          "weight": 1
                        },
                        "callTarget": {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+18885852294"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "userIds": [
                              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                            ],
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": true,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "name": "Example Buyer Co.",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Pacific Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionSettings": [
                          {
                            "conversionValue": 0,
                            "payoutValue": 0,
                            "deDupeSetting": {
                              "secondsFromLastCall": 0
                            },
                            "conversionType": "dialed"
                          }
                        ],
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "duplicateSettings": {
                      "duplicateSetting": "ON_CONNECT",
                      "callLengthInSeconds": 0
                    },
                    "dialSettings": {
                      "dialAttempts": 3
                    },
                    "recordSetting": {
                      "record": true,
                      "recordFromAnswer": true,
                      "trimSilence": false,
                      "dualChannelRecording": true
                    },
                    "affiliates": [
                      {
                        "payoutConversionSettings": [],
                        "createNumbers": false,
                        "isSelf": false,
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "name": "You",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "payoutConversionSettings": [],
                        "subId": "",
                        "createNumbers": true,
                        "isSelf": false,
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "name": "Example Publisher",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "id": "CA7c2b799310f0453982d366cc09488a6a",
                    "name": "Example Campaign",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  },
                  "jsTags": {},
                  "pubNumberEnrichmentUrls": {
                    "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
                  },
                  "rtb": {
                    "setup": true,
                    "enabled": true
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Publishers": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get Publishers",
        "description": "Request to retrieve a list of publishers associated with your account. The response to this request will return an array called `publishers` which is the list of publishers. Each object in the array contains a parameter called `id` which is the `publisherID` that is used in other requests in this documentation.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>",
        "operationId": "GetPublishers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 14:53:11 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "518"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublishers"
                },
                "example": {
                  "transactionId": "TR407cb7bd-d591-4f84-9e9a-6732ed10cf8d",
                  "publishers": [
                    {
                      "id": "AF8df87f01adff4a35a1835394493dbcfe",
                      "subId": "pubSubId",
                      "createNumbers": true,
                      "isSelf": false,
                      "name": "New Publisher",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                      "createNumbers": false,
                      "isSelf": true,
                      "name": "You",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                      "subId": "",
                      "createNumbers": true,
                      "accessToRecordings": true,
                      "userIds": [
                        "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                      ],
                      "isSelf": false,
                      "name": "Example Publisher",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Publishers"
        ],
        "summary": "Create New Publisher",
        "description": "Request to create a new publisher. In order to give users access to the publisher, you will need to use the \"POST Invite a User to Join a Publisher\" request in the \"Publisher Invitations\" folder below.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>The name of the publisher</td>\n</tr>\n<tr>\n<td><code>createNumbers</code></td>\n<td>Boolean value. If set to true, the publisher will be able to create new numbers. If false, the publisher will only be able to get numbers already associated with your account.</td>\n</tr>\n<tr>\n<td><code>doNotCreateUser</code></td>\n<td>Set this value to true</td>\n</tr>\n</table>\n\n#### Optional Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>subId</code></td>\n<td>A subId to be used to tracking the publisher</td>\n</tr>\n<tr>\n<td><code>blockCallsIfCapped</code></td>\n<td>Boolean value. If set to true, calls will be blocked to this publisher once the publisher's payout cap has been reached. If this parameter is null or not included in the request, then your account settings will be applied for this setting.</td>\n</tr>\n<tr>\n<td><code>accessToRecordings</code></td>\n<td>Boolean value. If set to true, the publisher will have access to call recordings in the report. If this parameter is null or not included in the request, then your account settings will be applied for this setting.</td>\n</tr>\n</table>",
        "operationId": "CreateNewPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewPublisherRequest"
              },
              "example": {
                "name": "New Publisher",
                "subId": "pubSubId",
                "createNumbers": true,
                "doNotCreateUser": true,
                "blockCallsIfCapped": false,
                "accessToRecordings": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 15:57:42 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "378"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewPublisher"
                },
                "example": {
                  "transactionId": "TR4537e9a7-8868-4981-a03e-b6f3d63ba072",
                  "publishers": {
                    "id": "AFad1ada6acc6e43a68f18c31ec54bef19",
                    "subId": "pubSubId",
                    "createNumbers": true,
                    "accessToRecordings": true,
                    "isSelf": false,
                    "blockCallsIfCapped": false,
                    "name": "New Publisher",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Publishers/stats": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get Call Statistics for Publishers",
        "description": "Request to get call statistics for all publishers associated with your account.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>",
        "operationId": "GetCallStatisticsforPublishers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 14:55:31 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "315"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallStatisticsforPublishers"
                },
                "example": {
                  "transactionId": "TR16733af1-7fd0-4182-b905-cf5b43d88704",
                  "stats": {
                    "aFbd21c4a3274c4382aa98919d5149baf3": {
                      "total": 18,
                      "currentMonth": 5,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "aFb7d373dc873c4792b3b3e27dd9317a73": {
                      "total": 1,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Publishers/{publisherId}": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get Details About Single Publisher",
        "description": "Request to get details for a specific publisher.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.",
        "operationId": "GetDetailsAboutSinglePublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 14:54:32 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "409"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutSinglePublisher"
                },
                "example": {
                  "transactionId": "TR5b5e58b6-1d95-46d0-a43f-498eb7719acf",
                  "publisher": {
                    "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                    "subId": "",
                    "createNumbers": true,
                    "accessToRecordings": true,
                    "userIds": [
                      "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                    ],
                    "isSelf": false,
                    "name": "Example Publisher",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Publishers"
        ],
        "summary": "Edit a Publisher",
        "description": "Request to modify details for a publisher.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.\n\n### Request Body\n<hr>\n<Br>\n\nThis request can be used to modify any of the settings described in the Request Body section of the \"POST Create New Publisher\" request above.",
        "operationId": "EditaPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditaPublisherRequest"
              },
              "example": {
                "name": "New Name",
                "subId": "newPubSubId",
                "enabled": true,
                "createNumbers": false,
                "blockCallsIfCapped": null,
                "accessToRecordings": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 16:11:53 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "359"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EditaPublisher"
                },
                "example": {
                  "transactionId": "TRd91f3944-3302-4bed-a4c3-efc4e4eb4f6e",
                  "publisher": {
                    "id": "AFad1ada6acc6e43a68f18c31ec54bef19",
                    "subId": "newPubSubId",
                    "createNumbers": false,
                    "accessToRecordings": false,
                    "isSelf": false,
                    "name": "New Name",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Publishers"
        ],
        "summary": "Delete a Publisher",
        "description": "Request to remove a publisher from your account.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.",
        "operationId": "DeleteaPublisher",
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "description": "If set to true, pulisher will be deleted even if it has active inbound references",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "keepNumbers",
            "in": "query",
            "description": "If set to true, numbers associated with the publisher will stay in your account. If set to false, hte numbers will be deallocated.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 15:02:45 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaPublisher"
                },
                "example": {
                  "transactionId": "TR7449b29a-46d2-4747-845b-a175a61bea82",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Publishers/{publisherId}/Numbers": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get Phone Numbers for a Single Publisher",
        "description": "Request to get details about the phone numbers associated with a specific publisher.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.",
        "operationId": "GetPhoneNumbersforaSinglePublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 14:56:39 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "1121"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumbersforaSinglePublisher"
                },
                "example": {
                  "transactionId": "TR35f32c98-ca7f-4293-baba-7ee9b508921b",
                  "numbers": [
                    {
                      "phoneNumber": "+12133572711",
                      "displayNumber": "+12133572711",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+12133572711",
                      "allocationDT": "2021-03-31T14:37:32.9854543Z",
                      "lastBillDT": "2021-03-31T00:00:00Z",
                      "nextChargeDT": "2021-04-28T00:00:00Z",
                      "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 31,
                      "isTollFree": false,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "areaCode": "213",
                        "isTollFree": false
                      },
                      "tags": [
                        {
                          "tagType": "DialedNumber",
                          "tagValue": "TagValue",
                          "tagName": "TagName",
                          "tagSource": "Call"
                        }
                      ],
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "UCLTDOMQ",
                      "id": "UCLTDOMQ",
                      "name": "New Name",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+12132622999",
                      "displayNumber": "+12132622999",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+12132622999",
                      "allocationDT": "2021-03-31T14:29:56.1782423Z",
                      "lastBillDT": "2021-03-31T00:00:00Z",
                      "nextChargeDT": "2021-04-28T00:00:00Z",
                      "lastChargeDT": "2021-03-31T14:29:56.1782423Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 31,
                      "isTollFree": false,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": false
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "MVECPLSM",
                      "id": "MVECPLSM",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+18336371466",
                      "localNumber": "(833) 637-1466",
                      "displayNumber": "18336371466",
                      "provider": "telnyx",
                      "providerAccountId": "1299489388324979809",
                      "providerId": "1362385882509739900",
                      "campaignId": "",
                      "allocationDT": "2020-05-01T17:37:35.3481506Z",
                      "lastBillDT": "2021-04-01T00:00:00Z",
                      "nextChargeDT": "2021-04-29T00:00:00Z",
                      "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 1,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "tags": [],
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": false,
                      "carrierNumberId": "",
                      "id": "1362385882509739900",
                      "name": "Skype3",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+18885852294",
                      "displayNumber": "+18885852294",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18885852294",
                      "campaignId": "",
                      "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
                      "allocationDT": "2021-02-08T23:56:26.0457102Z",
                      "lastBillDT": "2021-04-08T00:00:00Z",
                      "nextChargeDT": "2021-05-06T00:00:00Z",
                      "lastChargeDT": "2021-04-06T23:00:12.4694324Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 8,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "areaCode": "888",
                        "isTollFree": true
                      },
                      "tags": [
                        {
                          "tagType": "DialedNumber",
                          "tagValue": "NewTagValue",
                          "tagName": "NewTagName",
                          "tagSource": "Call"
                        }
                      ],
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "PNZFWQO0",
                      "id": "PNZFWQO0",
                      "name": "New Name",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Publishers/{publisherId}/Users": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get User Details for a Publisher",
        "description": "Request to get details about the users associated with a specific publisher.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.",
        "operationId": "GetUserDetailsforaPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 14:57:34 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "1439"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDetailsforaPublisher"
                },
                "example": {
                  "transactionId": "TRfc8f0772-7aa6-4555-be34-46c9797972d1",
                  "users": [
                    {
                      "email": "publisher.name@email.com",
                      "accounts": [
                        {
                          "ringbaAccountId": "RA25107ee2411049989cd8672852278bdb",
                          "roles": [
                            "affiliate"
                          ],
                          "itemAccess": [
                            {
                              "type": "Number",
                              "ids": [
                                "PNZFWQO0",
                                "1362385882509739900",
                                "UCLTDOMQ",
                                "MVECPLSM"
                              ],
                              "permissions": "READ, CREATE, UPDATE, LIST",
                              "fullAccess": false
                            },
                            {
                              "type": "Campaign",
                              "ids": [
                                "CA74c0b7f1f3824246b73e72a9238b4bfc",
                                "CA7c2b799310f0453982d366cc09488a6a"
                              ],
                              "permissions": "READ, LIST",
                              "fullAccess": false
                            },
                            {
                              "type": "Integration",
                              "ids": [],
                              "permissions": "READ, CREATE, UPDATE, LIST, DELETE",
                              "fullAccess": false
                            }
                          ]
                        }
                      ],
                      "uiJsonValues": "{\"settings\":{\"defaultAccount\":{\"accountCreationEpoch\":1528057838387,\"timeZoneId\":\"Pacific Standard Time\",\"accountAddress\":{\"streetAddress\":\"123 Main St\",\"city\":\"San Diego\",\"region\":\"California\",\"postalCode\":\"92101\",\"countryName\":\"United States\",\"countryCode\":\"US\"},\"id\":\"RA25107ee2411049989cd8672852278bdb\",\"name\":\"Ringba\",\"accountId\":\"RA25107ee2411049989cd8672852278bdb\",\"enabled\":true,\"version\":1},\"quickInsightsSettings\":{\"publisher\":{\"selectTabGrouping\":\"campaignName\",\"columnState\":[{\"colId\":\"campaignName\",\"width\":140,\"hide\":false,\"pinned\":\"left\",\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":null}]}},\"callLogsDefaultGridSettings\":{\"publisher\":{\"filterModel\":{},\"columnState\":[{\"colId\":\"callDt\",\"width\":150,\"hide\":false,\"pinned\":\"left\",\"sort\":\"desc\",\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"campaignName\",\"width\":175,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":3},{\"colId\":\"inboundPhoneNumber\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"number\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"numberPoolName\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"isDuplicate\",\"width\":58,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"timeToCallInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"timeToConnectInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"connectedCallLengthInSeconds\",\"width\":57,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"payoutAmount\",\"width\":65,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"callLengthInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1}],\"id\":8095752.5749998167}},\"showCallLogsTour\":\"no\",\"campaigns\":{\"tableState\":{\"sort\":{\"predicate\":\"name\",\"reverse\":false}}},\"apiTokens\":{\"tableState\":{\"sort\":{\"predicate\":\"name\",\"reverse\":false}}}}}",
                      "firstName": "Publisher",
                      "lastName": "Name",
                      "affiliateCombinedIDs": [
                        "RA25107ee2411049989cd8672852278bdb-AFb7d373dc873c4792b3b3e27dd9317a73"
                      ],
                      "invalidatePreviousTokensUtc": "0001-01-01T00:00:00",
                      "id": "8dc1930d-2dd8-4556-ae40-1620f8091e17",
                      "name": "Publisher Name",
                      "accountId": "empty",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Publishers/{publisherId}/InboundReferences": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get Inbound References for a Publisher",
        "description": "Request to get all references to a specific publisher. This will show you all campaigns, phone numbers, and users associated with the publisher.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.",
        "operationId": "GetInboundReferencesforaPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 15:00:22 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "582"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboundReferencesforaPublisher"
                },
                "example": {
                  "transactionId": "TR6f142813-4737-4da3-ac0e-8a8b5bd09a2f",
                  "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                  "hasReferences": true,
                  "refByAccount": true,
                  "campaigns": [
                    {
                      "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                      "campaignName": "API Test"
                    },
                    {
                      "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                      "campaignName": "New Name"
                    }
                  ],
                  "numbers": [
                    {
                      "numberId": "PNZFWQO0",
                      "numberName": "+18885852294",
                      "numberPhoneNumber": "+18885852294"
                    },
                    {
                      "numberId": "1362385882509739900",
                      "numberName": "18336371466",
                      "numberPhoneNumber": "+18336371466"
                    },
                    {
                      "numberId": "UCLTDOMQ",
                      "numberName": "+12133572711",
                      "numberPhoneNumber": "+12133572711"
                    },
                    {
                      "numberId": "MVECPLSM",
                      "numberName": "+12132622999",
                      "numberPhoneNumber": "+12132622999"
                    }
                  ],
                  "ringbausers": [
                    {
                      "ringbauserId": "8dc1930d-2dd8-4556-ae40-1620f8091e17",
                      "ringbauserName": "Publisher Name"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Affiliates/{publisherId}/Invitations": {
      "get": {
        "tags": [
          "Publisher Invitations"
        ],
        "summary": "Get Invitations for a Publisher",
        "description": "Request to view a list of invitations currently associated with a publisher.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.",
        "operationId": "GetInvitationsforaPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 16:20:41 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "484"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvitationsforaPublisher"
                },
                "example": {
                  "transactionId": "TR3e3095ee-6b5f-4472-9d0c-947dbce25866",
                  "userInvitations": [
                    {
                      "id": "INVfa0530130620440bb490a29a824c2859",
                      "email": "new.publisher@email.com",
                      "firstName": "New",
                      "lastName": "Pub",
                      "createdDate": "2021-04-09T16:15:00.0854868Z",
                      "expirationDate": "2021-05-09T16:15:00.0854868Z",
                      "role": "affiliate",
                      "associatedRoleIds": [
                        "AFad1ada6acc6e43a68f18c31ec54bef19"
                      ],
                      "isActive": true,
                      "enabled": true,
                      "url": "https://offers.ringba.com/domaintest/#/invite/INVfa0530130620440bb490a29a824c2859?fname=New&lname=Pub"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Publisher Invitations"
        ],
        "summary": "Invite User to Join Publisher",
        "description": "Request to invite a Ringba user to join a publisher associated with your account.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>email</code></td>\n<td>The email address of the Ringba user you want to send the invitation to.</td>\n</tr>\n<tr>\n<td><code>confirmEmail</code></td>\n<td>This must match the value of <code>email</code></td>\n</tr>\n<tr>\n<td><code>firstName</code></td>\n<td>The first name of the Ringba user you are inviting to join the publisher.</td>\n</tr>\n<tr>\n<td><code>lastName</code></td>\n<td>The last name of the Ringba user you are inviting to join the publisher.</td>\n</tr>\n</table>",
        "operationId": "InviteUsertoJoinPublisher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUsertoJoinPublisherRequest"
              },
              "example": {
                "email": "new.publisher@email.com",
                "confirmEmail": "new.publisher@email.com",
                "firstName": "New",
                "lastName": "Pub"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 16:14:59 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "484"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InviteUser"
                },
                "example": {
                  "transactionId": "TRe4fe2d3e-b65f-4160-b7ad-865b66a11473",
                  "userInvitation": {
                    "id": "INVfa0530130620440bb490a29a824c2859",
                    "email": "new.publisher@email.com",
                    "firstName": "New",
                    "lastName": "Pub",
                    "createdDate": "2021-04-09T16:15:00.0854868Z",
                    "expirationDate": "2021-05-09T16:15:00.0854868Z",
                    "role": "affiliate",
                    "associatedRoleIds": [
                      "AFad1ada6acc6e43a68f18c31ec54bef19"
                    ],
                    "isActive": true,
                    "enabled": true,
                    "url": "https://offers.ringba.com/domaintest/#/invite/INVfa0530130620440bb490a29a824c2859?fname=New&lname=Pub"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/Affiliates/{publisherId}/Invitations/{invitationId}": {
      "get": {
        "tags": [
          "Publisher Invitations"
        ],
        "summary": "Get Details About an Invitation",
        "description": "Request to view details about a single invitation to join a publisher.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.\n<br>\n\n`invitationId` Find IDs of invitations to join a publisher using the \"GET Get Invitations for a Publisher\" request above",
        "operationId": "GetDetailsAboutanInvitation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 16:22:17 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "483"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutanInvitation"
                },
                "example": {
                  "transactionId": "TRec557c13-3c01-4b4e-bb6e-037959f2bf46",
                  "userInvitation": {
                    "id": "INVfa0530130620440bb490a29a824c2859",
                    "email": "new.publisher@email.com",
                    "firstName": "New",
                    "lastName": "Pub",
                    "createdDate": "2021-04-09T16:15:00.0854868Z",
                    "expirationDate": "2021-05-09T16:15:00.0854868Z",
                    "role": "affiliate",
                    "associatedRoleIds": [
                      "AFad1ada6acc6e43a68f18c31ec54bef19"
                    ],
                    "isActive": true,
                    "enabled": true,
                    "url": "https://offers.ringba.com/domaintest/#/invite/INVfa0530130620440bb490a29a824c2859?fname=New&lname=Pub"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Publisher Invitations"
        ],
        "summary": "Delete an Invitation",
        "description": "Request to remove an invitation that has not yet been accepted.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>\n\n`publisherId` Find a list of [publishers](#get-information-about-publishers) associated with your account.\n<br>\n\n`invitationId` Find IDs of invitations to join a publisher using the \"GET Get Invitations for a Publisher\" request above",
        "operationId": "DeleteanInvitation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 09 Apr 2021 16:23:42 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "194"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanInvitation"
                },
                "example": {
                  "transactionId": "TR0d732bd0-0dcf-40fd-9d94-b05b1a3a5020",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numbers": {
      "get": {
        "tags": [
          "Numbers"
        ],
        "summary": "Get Numbers Associated with Account",
        "description": "Get all numbers associated with your account.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n<br>",
        "operationId": "GetNumbersAssociatedwithAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 15:13:30 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "2181"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetNumbersAssociatedwithAccount"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Numbers"
        ],
        "summary": "Create New Number",
        "description": "Request to allocate a new number for use with your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Paramter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>countryCode</code></td>\n<td>The code for the country in which you want to purchase a phone number</td>\n</tr>\n<tr>\n<tr>\n<td><code>chargeAccountIfNeeded</code></td>\n<td>Boolean value. If set to true, your default credit card will be billed if your account balance is not sufficient to complete the transaction. If set to false the request will fail if your account balance is not sufficient to complete the transaction.</td>\n</tr>\n<td><code>isTollFree</code><p><b>US numbers only</b></td>\n<td>Boolean value. Determines whether this number will be a toll-free number.</td>\n</tr>\n</table>\n\n#### Optional Parameters\n<table>\n<tr>\n<th>Paramter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>areaCode</code><p><b>US numbers only</b></td>\n<td>The three digit prefix that you want for this number. Must be a valid US area code. If you are creating a toll-free number, you can only use valid toll-free prefixes for this value (800, 888, 877, 866, 855, 844, 833). <p><b>NOTE:</b> To add an 800 number, you need to contact your sales account manager. <p><b>NOTE:</b> If you are getting an error message of \"could not allocate new number from telco provider\" (See the \"Create New Number failed due to lack of inventory\" example) you can try allocating a number without specifying the prefix. If you want the prefix that you are trying to specify, you must contact you sales account manager.</td>\n</tr>\n</table>",
        "operationId": "CreateNewNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewNumberRequest"
              },
              "example": {
                "countryCode": "US",
                "chargeAccountIfNeeded": true,
                "isTollFree": true,
                "areaCode": "877"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 14:55:11 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "561"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewNumberNotToll-Free"
                },
                "example": {
                  "transactionId": "TR614af2ec-6900-4aa3-9518-28c48fcce131",
                  "numberId": "EBYVCMIC",
                  "number": {
                    "phoneNumber": "+12133573490",
                    "displayNumber": "+12133573490",
                    "provider": "callrSipForward",
                    "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                    "providerId": "+12133573490",
                    "allocationDT": "2021-03-31T14:55:11.6286887Z",
                    "lastBillDT": "2021-03-31T00:00:00Z",
                    "nextChargeDT": "2021-04-28T00:00:00Z",
                    "lastChargeDT": "2021-03-31T14:55:11.6286887Z",
                    "deAllocationDT": "0001-01-01T00:00:00",
                    "autoRenew": true,
                    "renewDOM": 31,
                    "isTollFree": false,
                    "isActivated": false,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "213",
                      "isTollFree": false
                    },
                    "deallocFlag": false,
                    "failedRechargeAttempts": 0,
                    "isCarrierNumber": true,
                    "carrierNumberId": "EBYVCMIC",
                    "id": "EBYVCMIC",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 15:48:14 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "199"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewNumberfailedduetolackofinventory1"
                },
                "example": {
                  "transactionId": "TR55e81b08-abf4-4e7e-9907-0d0812362c13",
                  "message": "could not allocate new number from telco provider",
                  "messageCode": 0,
                  "errors": [
                    "could not allocate new number from telco provider"
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numbers/{numberId}": {
      "get": {
        "tags": [
          "Numbers"
        ],
        "summary": "Get Details About a Specific Number",
        "description": "Get information about a single phone number associated with your account.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n\n`numberId` Find your [numberIds](#get-numbers-associated-with-your-account). The response returned from the \"GET Get Numbers Associated With Your Account\" request will contain an object for each number. Each number object will have a id which is the ID needed for this request.\n<br>\n<br>",
        "operationId": "GetDetailsAboutaSpecificNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 15:15:22 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "786"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutaSpecificNumber"
                },
                "example": {
                  "transactionId": "TR4af26d58-5172-4f98-806a-b7493f15ef96",
                  "number": {
                    "phoneNumber": "+18885852294",
                    "displayNumber": "+18885852294",
                    "provider": "callrSipForward",
                    "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                    "providerId": "+18885852294",
                    "campaignId": "",
                    "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
                    "allocationDT": "2021-02-08T23:56:26.0457102Z",
                    "lastBillDT": "2021-03-08T00:00:00Z",
                    "nextChargeDT": "2021-04-06T00:00:00Z",
                    "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                    "deAllocationDT": "0001-01-01T00:00:00",
                    "autoRenew": true,
                    "renewDOM": 8,
                    "isTollFree": true,
                    "isActivated": false,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "888",
                      "isTollFree": true
                    },
                    "tags": [],
                    "deallocFlag": false,
                    "failedRechargeAttempts": 0,
                    "isCarrierNumber": true,
                    "carrierNumberId": "PNZFWQO0",
                    "affiliate": {
                      "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "subId": "",
                      "createNumbers": true,
                      "accessToRecordings": true,
                      "userIds": [
                        "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                      ],
                      "isSelf": false,
                      "name": "Example Publisher",
                      "enabled": true,
                      "version": 1
                    },
                    "id": "PNZFWQO0",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Numbers"
        ],
        "summary": "Delete a Number From Your Account",
        "description": "Request to delete a specific number from your account.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n\n`numberId` Find your [numberIds](#get-numbers-associated-with-your-account). The response returned from the \"GET Get Numbers Associated With Your Account\" request will contain an object for each number. Each number object will have a id which is the ID needed for this request.\n<br>\n<br>\n\n__NOTE:__ If the number you are attempting to delete is linked to other objects (publishers, campaigns, etc.) this request will fail (see the \"Delete a Number From Your Account (failed because number is linked to other objects)\" example). One way to solve this is to manually unlink the number from anything it is linked to. Another option is to use the following optional query parameter:\n\n`?unlink=true` See the \"Delete a Number From Your Account with unlink query parameter\" example.",
        "operationId": "DeleteaNumberFromYourAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 16:00:28 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "145"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaNumberFromYourAccountfailedrequest-tryingtodeleteanumberthatwasalreadydeleted1"
                },
                "example": {
                  "message": "DZLUDOMY is not found",
                  "errors": [
                    "DZLUDOMY is not found"
                  ],
                  "messageCode": 101,
                  "transactionId": "TR751b2a95-2992-40e3-b307-587425bd2403"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 16:10:17 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "193"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaNumberFromYourAccountwithunlinkqueryparameter"
                },
                "example": {
                  "transactionId": "TR7f25f75b-7dee-4a25-ba5b-4d4c5be06bec",
                  "isSuccessful": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 16:08:03 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "57"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaNumberFromYourAccountfailedbecausenumberislinkedtootherobjects1"
                },
                "example": {
                  "message": "Please remove all references to this number"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numbers/{numberId}/InboundReferences": {
      "get": {
        "tags": [
          "Numbers"
        ],
        "summary": "Get Inbound References for a Specific Number",
        "description": "Request to view the references to a specific number.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n\n`numberId` Find your [numberIds](#get-numbers-associated-with-your-account). The response returned from the \"GET Get Numbers Associated With Your Account\" request will contain an object for each number. Each number object will have a id which is the ID needed for this request.\n<br>\n<br>",
        "operationId": "GetInboundReferencesforaSpecificNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 15:25:39 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "328"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboundReferencesforaSpecificNumberwithaJsTag"
                },
                "example": {
                  "transactionId": "TRf3f64536-a9f7-4494-a635-d9d449dbeb93",
                  "id": "PNZFWQO0",
                  "hasReferences": true,
                  "affiliateId": "AFb7d373dc873c4792b3b3e27dd9317a73",
                  "affiliateName": "Example Publisher",
                  "jstagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
                  "jstagName": "Example Js Tag"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numbers/{numberId}/affiliate": {
      "put": {
        "tags": [
          "Numbers"
        ],
        "summary": "Add a Publisher to a Number",
        "description": "Request to add a publisher to a number associated with your account.\n\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n\n`numberId` Find your [numberIds](#get-numbers-associated-with-your-account). The response returned from the \"GET Get Numbers Associated With Your Account\" request will contain an object for each number. Each number object will have a id which is the ID needed for this request.\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>affiliateId<code></td>\n<td>The ID of the <a href=#get-information-about-publishers>publisher</a> that you want to assign to the number specified in the request URL</td>\n</table>",
        "operationId": "AddaPublishertoaNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddaPublishertoaNumberRequest"
              },
              "example": {
                "affiliateId": "{{publisherId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 17:44:22 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "710"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddaPublishertoaNumber"
                },
                "example": {
                  "transactionId": "TRe26a4cf4-3049-4677-894e-efb74c7aa4fe",
                  "number": {
                    "phoneNumber": "+13125790806",
                    "localNumber": "(312) 579-0806",
                    "displayNumber": "13125790806",
                    "provider": "telnyx",
                    "providerAccountId": "1299489388324979809",
                    "providerId": "1362389678229029900",
                    "allocationDT": "2020-05-01T17:45:07.4999645Z",
                    "lastBillDT": "2021-04-01T00:00:00Z",
                    "nextChargeDT": "2021-04-29T00:00:00Z",
                    "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
                    "deAllocationDT": "0001-01-01T00:00:00",
                    "autoRenew": true,
                    "renewDOM": 1,
                    "isTollFree": false,
                    "isActivated": false,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "312",
                      "isTollFree": false
                    },
                    "tags": [],
                    "deallocFlag": false,
                    "failedRechargeAttempts": 0,
                    "isCarrierNumber": false,
                    "carrierNumberId": "",
                    "affiliate": {
                      "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "createNumbers": false,
                      "isSelf": true,
                      "name": "You",
                      "enabled": true,
                      "version": 1
                    },
                    "id": "1362389678229029900",
                    "name": "Skype1",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numbers/UCLTDOMQ": {
      "patch": {
        "tags": [
          "Numbers"
        ],
        "summary": "Edit Information About a Number",
        "description": "Request to edit information about a specific number.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n\n`numberId` Find your [numberIds](#get-numbers-associated-with-your-account). The response returned from the \"GET Get Numbers Associated With Your Account\" request will contain an object for each number. Each number object will have a id which is the ID needed for this request.\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Optional Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>enabled</code></td>\n<td>Boolean value. If se to false, calls to the number will be paused but the number will remain associated with your account.</td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>The name of the number to make it easier to find in reports</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>An object containing two parameters.</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>tagName</code></p><p>The name of the tag you want associated with this number</p><hr><p><code>tagValue</code></p><p>The value for the tag that you want associated with this number</p></td>\n</tr>\n</table>",
        "operationId": "EditInformationAboutaNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInformationAboutaNumberRequest"
              },
              "example": {
                "enabled": true,
                "name": "New Name",
                "tags": [
                  {
                    "tagName": "TagName",
                    "tagValue": "TagValue"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 16:26:05 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "781"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EditInformationAboutaNumber"
                },
                "example": {
                  "transactionId": "TR9151e9e9-122e-4cd9-93a0-c7edf9a6411c",
                  "number": {
                    "phoneNumber": "+12133572711",
                    "displayNumber": "+12133572711",
                    "provider": "callrSipForward",
                    "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                    "providerId": "+12133572711",
                    "allocationDT": "2021-03-31T14:37:32.9854543Z",
                    "lastBillDT": "2021-03-31T00:00:00Z",
                    "nextChargeDT": "2021-04-28T00:00:00Z",
                    "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
                    "deAllocationDT": "0001-01-01T00:00:00",
                    "autoRenew": true,
                    "renewDOM": 31,
                    "isTollFree": false,
                    "isActivated": false,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "213",
                      "isTollFree": false
                    },
                    "tags": [
                      {
                        "tagType": "DialedNumber",
                        "tagValue": "TagValue",
                        "tagName": "TagName",
                        "tagSource": "Call"
                      }
                    ],
                    "deallocFlag": false,
                    "failedRechargeAttempts": 0,
                    "isCarrierNumber": true,
                    "carrierNumberId": "UCLTDOMQ",
                    "affiliate": {
                      "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                      "subId": "",
                      "createNumbers": true,
                      "accessToRecordings": true,
                      "userIds": [
                        "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                      ],
                      "isSelf": false,
                      "name": "Example Publisher",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    "id": "UCLTDOMQ",
                    "name": "New Name",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numbers/ReleaseNonUsedNumbers": {
      "delete": {
        "tags": [
          "Numbers"
        ],
        "summary": "Delete Unused Numbers From Your Account",
        "description": "Request to deallocate any numbers associated with your account that are not currently assigned to a publisher, campaign, or JsTag.\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)",
        "operationId": "DeleteUnusedNumbersFromYourAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 16:04:22 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "1992"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUnusedNumbersFromYourAccount"
                },
                "example": {
                  "transactionId": "TRe8b36928-3a93-40ca-b49d-0aee4b37fc8f",
                  "numbers": [
                    {
                      "phoneNumber": "+18885852294",
                      "displayNumber": "+18885852294",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18885852294",
                      "campaignId": "",
                      "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
                      "allocationDT": "2021-02-08T23:56:26.0457102Z",
                      "lastBillDT": "2021-03-08T00:00:00Z",
                      "nextChargeDT": "2021-04-06T00:00:00Z",
                      "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 8,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "areaCode": "888",
                        "isTollFree": true
                      },
                      "tags": [],
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "PNZFWQO0",
                      "affiliate": {
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "subId": "",
                        "createNumbers": true,
                        "accessToRecordings": true,
                        "userIds": [
                          "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                        ],
                        "isSelf": false,
                        "name": "Example Publisher",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "PNZFWQO0",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+18336371466",
                      "localNumber": "(833) 637-1466",
                      "displayNumber": "18336371466",
                      "provider": "telnyx",
                      "providerAccountId": "1299489388324979809",
                      "providerId": "1362385882509739900",
                      "campaignId": "",
                      "allocationDT": "2020-05-01T17:37:35.3481506Z",
                      "lastBillDT": "2021-04-01T00:00:00Z",
                      "nextChargeDT": "2021-04-29T00:00:00Z",
                      "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 1,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "tags": [],
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": false,
                      "carrierNumberId": "",
                      "affiliate": {
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "subId": "",
                        "createNumbers": true,
                        "accessToRecordings": true,
                        "userIds": [
                          "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                        ],
                        "isSelf": false,
                        "name": "Example Publisher",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "1362385882509739900",
                      "name": "Skype3",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+13125790806",
                      "localNumber": "(312) 579-0806",
                      "displayNumber": "13125790806",
                      "provider": "telnyx",
                      "providerAccountId": "1299489388324979809",
                      "providerId": "1362389678229029900",
                      "campaignId": "CAce122d08eb104156a74b59788fc2b86c",
                      "allocationDT": "2020-05-01T17:45:07.4999645Z",
                      "lastBillDT": "2021-04-01T00:00:00Z",
                      "nextChargeDT": "2021-04-29T00:00:00Z",
                      "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 1,
                      "isTollFree": false,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "areaCode": "312",
                        "isTollFree": false
                      },
                      "tags": [],
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": false,
                      "carrierNumberId": "",
                      "affiliate": {
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "createNumbers": false,
                        "isSelf": true,
                        "name": "You",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "1362389678229029900",
                      "name": "Skype1",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+12133573490",
                      "displayNumber": "+12133573490",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+12133573490",
                      "allocationDT": "2021-03-31T14:55:11.6286887Z",
                      "lastBillDT": "2021-03-31T00:00:00Z",
                      "nextChargeDT": "2021-04-28T00:00:00Z",
                      "lastChargeDT": "2021-03-31T14:55:11.6286887Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 31,
                      "isTollFree": false,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "areaCode": "213",
                        "isTollFree": false
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "EBYVCMIC",
                      "affiliate": {
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "subId": "",
                        "createNumbers": true,
                        "accessToRecordings": true,
                        "userIds": [
                          "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                        ],
                        "isSelf": false,
                        "name": "Example Publisher",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "EBYVCMIC",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+18442757927",
                      "displayNumber": "+18442757927",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18442757927",
                      "campaignId": "CAf36c8dcd536349bd9114d27618eefb97",
                      "allocationDT": "2021-02-08T16:28:48.5721619Z",
                      "lastBillDT": "2021-03-08T00:00:00Z",
                      "nextChargeDT": "2021-04-06T00:00:00Z",
                      "lastChargeDT": "2021-03-06T23:00:11.711988Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 8,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "SRHBTMYV",
                      "affiliate": {
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "createNumbers": false,
                        "isSelf": true,
                        "name": "You",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "SRHBTMYV",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+18334013665",
                      "displayNumber": "+18334013665",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18334013665",
                      "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                      "allocationDT": "2021-02-01T17:20:22.1504921Z",
                      "lastBillDT": "2021-04-01T00:00:00Z",
                      "nextChargeDT": "2021-04-29T00:00:00Z",
                      "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 1,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "CLAOGNEH",
                      "affiliate": {
                        "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "createNumbers": false,
                        "isSelf": true,
                        "name": "You",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "CLAOGNEH",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+12133572711",
                      "displayNumber": "+12133572711",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+12133572711",
                      "allocationDT": "2021-03-31T14:37:32.9854543Z",
                      "lastBillDT": "2021-03-31T00:00:00Z",
                      "nextChargeDT": "2021-04-28T00:00:00Z",
                      "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 31,
                      "isTollFree": false,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "areaCode": "213",
                        "isTollFree": false
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "UCLTDOMQ",
                      "affiliate": {
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "subId": "",
                        "createNumbers": true,
                        "accessToRecordings": true,
                        "userIds": [
                          "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                        ],
                        "isSelf": false,
                        "name": "Example Publisher",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "UCLTDOMQ",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+12132622999",
                      "displayNumber": "+12132622999",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+12132622999",
                      "allocationDT": "2021-03-31T14:29:56.1782423Z",
                      "lastBillDT": "2021-03-31T00:00:00Z",
                      "nextChargeDT": "2021-04-28T00:00:00Z",
                      "lastChargeDT": "2021-03-31T14:29:56.1782423Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 31,
                      "isTollFree": false,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": false
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "MVECPLSM",
                      "affiliate": {
                        "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "subId": "",
                        "createNumbers": true,
                        "accessToRecordings": true,
                        "userIds": [
                          "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                        ],
                        "isSelf": false,
                        "name": "Example Publisher",
                        "enabled": true,
                        "version": 1
                      },
                      "id": "MVECPLSM",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+18332203609",
                      "displayNumber": "+18332203609",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18332203609",
                      "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
                      "allocationDT": "2021-03-11T18:20:28.4097995Z",
                      "lastBillDT": "2021-03-11T00:00:00Z",
                      "nextChargeDT": "2021-04-09T00:00:00Z",
                      "lastChargeDT": "2021-03-11T18:20:28.4097995Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 11,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "FDVCXRFW",
                      "id": "FDVCXRFW",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    },
                    {
                      "phoneNumber": "+18332203925",
                      "displayNumber": "+18332203925",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18332203925",
                      "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
                      "allocationDT": "2021-03-11T18:20:28.4097995Z",
                      "lastBillDT": "2021-03-11T00:00:00Z",
                      "nextChargeDT": "2021-04-09T00:00:00Z",
                      "lastChargeDT": "2021-03-11T18:20:28.4097995Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 11,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "KIDBYXKG",
                      "id": "KIDBYXKG",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numbers/{numberId}/Affiliate/{publisherId}": {
      "delete": {
        "tags": [
          "Numbers"
        ],
        "summary": "Remove a Publisher from a Number",
        "description": "Request to remove a publisher from a number associated with your account.\n\n\n### Path Variables\n<hr>\n<br>\n\n`accountId` Find your [accountId](#get-your-account-information)\n\n`numberId` Find your [numberIds](#get-numbers-associated-with-your-account). The response returned from the \"GET Get Numbers Associated With Your Account\" request will contain an object for each number. Each number object will have a id which is the ID needed for this request.\n\n`publisherID` The ID of the publisher that is currently assigned to the specified number. You can see what publisher is assigned to the number using the \"GET Get Details About a Specific Number\" request above. The response from that request will have an object called `affiliate` which will contain an `id` which is the ID of the publisher associated with the number.\n<br>\n<br>",
        "operationId": "RemoveaPublisherfromaNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 31 Mar 2021 17:41:17 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "638"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveaPublisherfromaNumber"
                },
                "example": {
                  "transactionId": "TR44587e5f-9249-45ab-bd8c-e41ac3a11668",
                  "number": {
                    "phoneNumber": "+13125790806",
                    "localNumber": "(312) 579-0806",
                    "displayNumber": "13125790806",
                    "provider": "telnyx",
                    "providerAccountId": "1299489388324979809",
                    "providerId": "1362389678229029900",
                    "allocationDT": "2020-05-01T17:45:07.4999645Z",
                    "lastBillDT": "2021-04-01T00:00:00Z",
                    "nextChargeDT": "2021-04-29T00:00:00Z",
                    "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
                    "deAllocationDT": "0001-01-01T00:00:00",
                    "autoRenew": true,
                    "renewDOM": 1,
                    "isTollFree": false,
                    "isActivated": false,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "312",
                      "isTollFree": false
                    },
                    "tags": [],
                    "deallocFlag": false,
                    "failedRechargeAttempts": 0,
                    "isCarrierNumber": false,
                    "carrierNumberId": "",
                    "id": "1362389678229029900",
                    "name": "Skype1",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Number Pools Associated With Your Account",
        "description": "Request to get information about all of the number pools associated with your account\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>",
        "operationId": "GetNumberPoolsAssociatedWithYourAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 15:49:58 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "448"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetNumberPoolsAssociatedWithYourAccount"
                },
                "example": {
                  "transactionId": "TR7de76f71-ff87-4746-a1d8-b11432901b71",
                  "numberPools": [
                    {
                      "id": "NU66b2f8963c91470e837c6a72693834ac",
                      "holdNumberOutOfPoolInSeconds": 60,
                      "poolSize": 2,
                      "sortByGeo": false,
                      "totalTimeForNumberOutOfPoolInSeconds": 500,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "autoRotateNumbers": false,
                      "name": "Example Number Pool",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Create New Number Pool",
        "description": "Request to create a new number pool. This request only creates the number pool. In order to add numbers to the pool, once it is created you will need to use the \"PUT Allocate More Numbers to a Number Pool\" request below.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>The name you want to assign to the number pool</td>\n</tr>\n<tr>\n<td><code>assignmentSettings</code></td>\n<td><p>An object containing required and optional parameters.</p><p><b>NOTE:</b> <code>isTollFree</code> and <code>areaCode</code> only apply if the <code>countryCode</code> is set to \"US\".</td>\n</tr>\n<tr>\n<td></td>\n<td><p><code>countryCode</code> (required)</p><p>The code for the country you want to purchase numbers in.</p><hr><p><code>isTollFree</code> (required- US only)</p><p>Boolean value. If set to true, all numbers in the pool will be toll-free, which come with a higher per-minute charges. If set to false, local numbers will be used.</p><hr><p><code>areaCode</code> (optional- US only)</p><p>If desired, you can set a specific area code for the numbers in your new number pool.</p><hr><p><code>chargeAccountIfNeeded</code></p><p>Boolean value. If set to true, your credit card will be charged to allocate new numbers to the pool if your account balance is insufficient. If set to false, allocation will fail if your account balance is not sufficient. Recommended to set the value to true.</p></td>\n</tr>\n</table>\n\n#### Optional Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>holdNumberOutOfPoolInSeconds</code></td>\n<td>The length of time (in seconds) that Ringba locks a number to a user after they close their browser window.</td>\n</tr>\n<tr>\n<td><code>totalTimeForNumberOutOfPoolInSeconds</code></td>\n<td>The length of time (in seconds) that Ringba locks a number to a user if they leave their browser window open and idle.</td>\n</tr>\n</table>",
        "operationId": "CreateNewNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewNumberPoolRequest"
              },
              "example": {
                "name": "New new Number Pool",
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": false,
                  "areaCode": "213",
                  "chargeAccountIfNeeded": true
                },
                "holdNumberOutOfPoolInSeconds": 30,
                "totalTimeForNumberOutOfPoolInSeconds": 300
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 17:31:46 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "445"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewNumberPool"
                },
                "example": {
                  "transactionId": "TR13a95071-e07c-49a0-9ccd-4bceff2e6ecd",
                  "numberPool": {
                    "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                    "holdNumberOutOfPoolInSeconds": 30,
                    "poolSize": 0,
                    "sortByGeo": false,
                    "totalTimeForNumberOutOfPoolInSeconds": 300,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "213",
                      "isTollFree": false
                    },
                    "autoRotateNumbers": false,
                    "name": "New Number Pool",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Details About a Single Number Pool",
        "description": "Request to get further information about a single number pool.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "GetDetailsAboutaSingleNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 15:54:01 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "453"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutaSingleNumberPool"
                },
                "example": {
                  "transactionId": "TRff95277b-1950-431c-95b4-4adf761dd2a9",
                  "numberPool": {
                    "id": "NU66b2f8963c91470e837c6a72693834ac",
                    "holdNumberOutOfPoolInSeconds": 60,
                    "poolSize": 2,
                    "sortByGeo": false,
                    "totalTimeForNumberOutOfPoolInSeconds": 500,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "isTollFree": true
                    },
                    "autoRotateNumbers": false,
                    "name": "Example Number Pool",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "freeNumbers": 2
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Edit Information for a Number Pool",
        "description": "Request to edit information about a number pool associated with your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\nThis request can modify any of the setting explained in the description of the \"POST Create a New Number Pool\" request above.",
        "operationId": "EditInformationforaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInformationforaNumberPoolRequest"
              },
              "example": {
                "name": "New Name",
                "holdNumberOutOfPoolInSeconds": 45,
                "totalTimeForNumberOutOfPoolInSeconds": 200,
                "poolSize": 1,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": false,
                  "areaCode": "213",
                  "chargeAccountIfNeeded": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 17:34:54 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "447"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EditInformationforaNumberPool"
                },
                "example": {
                  "transactionId": "TR4f4d44ee-e22a-415a-bff1-d89a1c8c5d58",
                  "numberPool": {
                    "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                    "holdNumberOutOfPoolInSeconds": 45,
                    "poolSize": 2,
                    "sortByGeo": false,
                    "totalTimeForNumberOutOfPoolInSeconds": 200,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "213",
                      "isTollFree": false
                    },
                    "autoRotateNumbers": false,
                    "name": "New Name",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Delete a Number Pool",
        "description": "Request to delete a number pool from your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "DeleteaNumberPool",
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "description": "Forces request even if the number pool is being used elsewhere in your account.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "keepNumbers",
            "in": "query",
            "description": "Keep numbers in your account after the number pool has been removed",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 17:27:07 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaNumberPool"
                },
                "example": {
                  "transactionId": "TR64ec3a32-7a0b-4850-92b2-534fcc2e9dc4",
                  "isSuccessful": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 17:28:06 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "62"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaNumberPool2"
                },
                "example": {
                  "message": "Please remove all references to this number pool"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Numbers": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Numbers for a Number Pool",
        "description": "Request to view numbers associated with a number pool in your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "GetNumbersforaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 21:42:55 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "765"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetNumbersforaNumberPool"
                },
                "example": {
                  "transactionId": "TR2dd46208-49a4-42f7-9631-66160a904e8b",
                  "result": {
                    "numbers": [
                      {
                        "phoneNumber": "+12133575976",
                        "displayNumber": "+12133575976",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+12133575976",
                        "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                        "allocationDT": "2021-04-01T21:34:16.6594196Z",
                        "lastBillDT": "2021-04-01T00:00:00Z",
                        "nextChargeDT": "2021-04-29T00:00:00Z",
                        "lastChargeDT": "2021-04-01T21:34:16.6594196Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": false,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "areaCode": "213",
                          "isTollFree": false
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "QMMQKOEN",
                        "id": "QMMQKOEN",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      },
                      {
                        "phoneNumber": "+12133710027",
                        "displayNumber": "+12133710027",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+12133710027",
                        "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                        "allocationDT": "2021-04-01T21:37:55.0891443Z",
                        "lastBillDT": "2021-04-01T00:00:00Z",
                        "nextChargeDT": "2021-04-29T00:00:00Z",
                        "lastChargeDT": "2021-04-01T21:37:55.0891443Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": false,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "areaCode": "213",
                          "isTollFree": false
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "OKVNWILO",
                        "id": "OKVNWILO",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      },
                      {
                        "phoneNumber": "+12133572871",
                        "displayNumber": "+12133572871",
                        "provider": "callrSipForward",
                        "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                        "providerId": "+12133572871",
                        "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                        "allocationDT": "2021-04-01T21:40:58.3212871Z",
                        "lastBillDT": "2021-04-01T00:00:00Z",
                        "nextChargeDT": "2021-04-29T00:00:00Z",
                        "lastChargeDT": "2021-04-01T21:40:58.3212871Z",
                        "deAllocationDT": "0001-01-01T00:00:00",
                        "autoRenew": true,
                        "renewDOM": 1,
                        "isTollFree": false,
                        "isActivated": false,
                        "assignmentSettings": {
                          "countryCode": "US",
                          "areaCode": "213",
                          "isTollFree": false
                        },
                        "deallocFlag": false,
                        "failedRechargeAttempts": 0,
                        "isCarrierNumber": true,
                        "carrierNumberId": "WFUQFWCD",
                        "id": "WFUQFWCD",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 3
                      }
                    ],
                    "count": 3
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "put": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Add a Specific Number to a Number Pool",
        "description": "Request to add a specific phone number that is already associated with your account to a number pool.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>numberId</code></td>\n<td>The ID of the number you want to add to the pool. Find <a href=#get-numbers-associated-with-your-account>numbers</a> associated with your account</td>\n</tr>\n</table>",
        "operationId": "AddaSpecificNumbertoaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddaSpecificNumbertoaNumberPoolRequest"
              },
              "example": {
                "numberId": "{{numberId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 21:46:57 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "193"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddaSpecificNumbertoaNumberPool"
                },
                "example": {
                  "transactionId": "TR3f36f1bc-b90a-4df1-9cdc-d2fcf1bf820b",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/InboundReferences": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Inbound References for a Number Pool",
        "description": "Request to get information about inbound references to a number pool. For example, this request will tell you numbers in the pool and Js Tags associated with the pool.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "GetInboundReferencesforaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 17:50:52 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "450"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboundReferencesforaNumberPool"
                },
                "example": {
                  "transactionId": "TR8ef1fcaf-e87e-4ffd-a001-41c175612d19",
                  "id": "NU66b2f8963c91470e837c6a72693834ac",
                  "hasReferences": true,
                  "refByAccount": true,
                  "jstags": [
                    {
                      "jstagId": "JS2ab9c67491964761b7ef53494f178113",
                      "jstagName": "NumPoolTag"
                    },
                    {
                      "jstagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
                      "jstagName": "Example Js Tag"
                    }
                  ],
                  "numbers": [
                    {
                      "numberId": "FDVCXRFW",
                      "numberName": "+18332203609",
                      "numberPhoneNumber": "+18332203609"
                    },
                    {
                      "numberId": "KIDBYXKG",
                      "numberName": "+18332203925",
                      "numberPhoneNumber": "+18332203925"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/AllocationJobs": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Allocation Jobs",
        "description": "Request to view information about number allocation jobs currently in progress for number pools in your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "GetAllocationJobs",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 02 Apr 2021 18:20:02 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "423"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllocationJobs"
                },
                "example": {
                  "transactionId": "TR87fe0621-9690-455a-b3de-583819cebc2b",
                  "allocationJobs": [
                    {
                      "numberPoolId": "NUe1f3ea7e385844b78b695029d20e850a",
                      "numberPoolName": "New Number Pool",
                      "requestAmount": 3,
                      "completedAmount": 0,
                      "startTime": 0,
                      "completeTime": 0,
                      "completed": false,
                      "chargeAccountToFill": false,
                      "id": "PA530c25aceb284f2d8890023ff3801e0a",
                      "name": "",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/AllocationJobs/{allocationJobId}": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Details About an Allocation Job",
        "description": "Request to view details about a specific number allocation job currently in progress for a number pool in your account\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n\n`allocationJobId` You can find a list of number allocation jobs currently in progress using the \"GET Get Allocation Jobs\" request above\n<br>\n<br>",
        "operationId": "GetDetailsAboutanAllocationJob",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allocationJobId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 02 Apr 2021 18:20:47 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "419"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutanAllocationJob"
                },
                "example": {
                  "transactionId": "TRdccd7a40-ac77-48d7-b498-915d4afeade1",
                  "allocationJob": {
                    "numberPoolId": "NUe1f3ea7e385844b78b695029d20e850a",
                    "numberPoolName": "New Number Pool",
                    "requestAmount": 3,
                    "completedAmount": 0,
                    "startTime": 0,
                    "completeTime": 0,
                    "completed": false,
                    "chargeAccountToFill": false,
                    "id": "PA530c25aceb284f2d8890023ff3801e0a",
                    "name": "",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Delete an Allocation Job",
        "description": "Request to remove a number allocation job that is currently in progress.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n\n`allocationJobId` You can find a list of number allocation jobs currently in progress using the \"GET Get Allocation Jobs\" request above\n<br>\n<br>",
        "operationId": "DeleteanAllocationJob",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allocationJobId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 02 Apr 2021 18:23:22 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "194"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanAllocationJob"
                },
                "example": {
                  "transactionId": "TR0bef41b6-1987-40aa-b82f-2b784ce4be10",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/FreeNumberCount": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Count of Available Numbers in a Number Pool",
        "description": "Request to see how many numbers in a number pool are currently available for calls.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "GetCountofAvailableNumbersinaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 17:06:07 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "187"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountofAvailableNumbersinaNumberPool"
                },
                "example": {
                  "transactionId": "TR2bc8a4c2-359c-44cc-8f0d-a4c295b13b0f",
                  "poolSize": 3
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Numbers/InUse": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get Numbers Currently In Use",
        "description": "Request to get information about numbers in a number pool that are currently being used for a call\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "GetNumbersCurrentlyInUse",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 17:03:51 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "613"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetNumbersCurrentlyInUse"
                },
                "example": {
                  "transactionId": "TR864b5798-cf35-4425-b265-79a3882e4c32",
                  "numbers": [
                    {
                      "phoneNumber": "+18332203609",
                      "displayNumber": "+18332203609",
                      "provider": "callrSipForward",
                      "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                      "providerId": "+18332203609",
                      "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
                      "allocationDT": "2021-03-11T18:20:28.4097995Z",
                      "lastBillDT": "2021-03-11T00:00:00Z",
                      "nextChargeDT": "2021-04-09T00:00:00Z",
                      "lastChargeDT": "2021-03-11T18:20:28.4097995Z",
                      "deAllocationDT": "0001-01-01T00:00:00",
                      "autoRenew": true,
                      "renewDOM": 11,
                      "isTollFree": true,
                      "isActivated": false,
                      "assignmentSettings": {
                        "countryCode": "US",
                        "isTollFree": true
                      },
                      "deallocFlag": false,
                      "failedRechargeAttempts": 0,
                      "isCarrierNumber": true,
                      "carrierNumberId": "FDVCXRFW",
                      "id": "FDVCXRFW",
                      "name": "58387",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 3
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Numbers/Verify": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Verify Numbers in Number Pool",
        "description": "Request to verify numbers in a number pool and identify those that are no longer working and need to be removed or replaced.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>",
        "operationId": "VerifyNumbersinNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 17:04:22 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "194"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyNumbersinNumberPool"
                },
                "example": {
                  "transactionId": "TR1bba5b66-a689-44d2-b652-bc589306463c",
                  "bad-numbers": []
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountid}/stats/numberPools": {
      "get": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Get number pool stats",
        "description": "Request to get the stats for all the number pools in the account\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>",
        "operationId": "Getnumberpoolstats",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Optional  - If the <b>type</b> parameter is not added it will default to <b>day</b>.\n<h6>Options</h6>\n<b>day</b><br>\nShows the stats  for the current day<br><br>\n<b>month</b><br>\nShows the stats  for the current month",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{{type}}"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountid",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getnumberpoolwithmisses"
                },
                "example": {
                  "transactionId": "TR5f809ba8-5424-48d7-8ee0-c6da00f3cdeb",
                  "values": [
                    {
                      "numberPoolId": "NUa1b2c3d4e5f6a1b2c3d4e5f6a1b2c3d4",
                      "values": [
                        {
                          "messageName": "Impressions",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            2454,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 2454
                        },
                        {
                          "messageName": "Number Pool Misses",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "Incoming",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            186,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 186
                        },
                        {
                          "messageName": "Connected",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            169,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 169
                        },
                        {
                          "messageName": "No Connect",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            17,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 17
                        },
                        {
                          "messageName": "Completed",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            183,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 183
                        },
                        {
                          "messageName": "Converted",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            123,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 123
                        },
                        {
                          "messageName": "Avg Call Length",
                          "messageType": "TIME_IN_SECONDS",
                          "isWarning": false,
                          "values": [
                            0,
                            702,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 702
                        },
                        {
                          "messageName": "No Targets",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            5,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 5
                        },
                        {
                          "messageName": "Busy",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "Error",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "Error",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "Blocked",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "No Answer",
                          "messageType": "INT",
                          "isWarning": true,
                          "values": [
                            0,
                            12,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 12
                        },
                        {
                          "messageName": "Revenue",
                          "messageType": "CURRENCY",
                          "isWarning": false,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "Payout",
                          "messageType": "CURRENCY",
                          "isWarning": false,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "RTB Bids",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "RTB Winning Bids",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "RTB Rejected Requests",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        },
                        {
                          "messageName": "RTB Rate-Limited Requests",
                          "messageType": "INT",
                          "isWarning": false,
                          "values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ],
                          "sum": 0
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Replace": {
      "post": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Replace Numbers In a Number Pool",
        "description": "Request to replace numbers in a pool. With this request, you cannot specify the numbers being replaced, just how many will be replaced with new numbers.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>count</code></td>\n<td>The number of phone numbers you want to release and replace in the number pool</td>\n</tr>\n</table>",
        "operationId": "ReplaceNumbersInaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceNumbersInaNumberPoolRequest"
              },
              "example": {
                "count": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 02 Apr 2021 18:14:56 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "145"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceNumbersInaNumberPool"
                },
                "example": {
                  "countAdded": 2,
                  "countReleased": 2
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Shrink": {
      "post": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Decrease Size of a Number Pool",
        "description": "Request to shrink the size of the number pool by releasing numbers from it.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>count</code></td>\n<td>The number of phone numbers you want to release from the number pool</td>\n</tr>\n<tr>\n<td><code>keepNumbers</code></td>\n<td>Boolean value. If set to true, numbers released from the number pool will still be kept in your account. If set to false the numbers will be removed from the number pool and from your account.</td>\n</tr>\n</table>",
        "operationId": "DecreaseSizeofaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DecreaseSizeofaNumberPoolRequest"
              },
              "example": {
                "count": 1,
                "keepNumbers": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 21:38:33 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DecreaseSizeofaNumberPool"
                },
                "example": {
                  "transactionId": "TR9e934c85-8210-4eec-9d82-72a772f0d366",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/AllocateMoreNumbers": {
      "put": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Allocate More Numbers to a Number Pool",
        "description": "Request to allocate numbers to a number pool.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>allocation</code></td>\n<td>The number of phone numbers you want to add to the number pool</td>\n</tr>\n<tr>\n<td><code>chargeAccountIfNeeded</code></td>\n<td>Boolean value. If set to true, your credit card will be charged for number allocation if your account balance is not sufficient. If set to false, allocation will fail if account balance is not sufficient. Recommended to be set to true.</td>\n</table>",
        "operationId": "AllocateMoreNumberstoaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocateMoreNumberstoaNumberPoolRequest"
              },
              "example": {
                "allocation": 3,
                "chargeAccountIfNeeded": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 16:36:15 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "426"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AllocateMoreNumbersFailed"
                },
                "example": {
                  "transactionId": "TR3ff17a95-d9ac-49f5-a86e-fd7aa2031a1b",
                  "allocationJob": {
                    "numberPoolId": "NU72ecc45806d44c3884f3accc3490bb80",
                    "numberPoolName": "New Number Pool",
                    "requestAmount": 3,
                    "completedAmount": 0,
                    "startTime": 0,
                    "completeTime": 0,
                    "completed": false,
                    "chargeAccountToFill": true,
                    "id": "PA112473c51b894be19dde8894745b87c5",
                    "name": "",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Expand": {
      "put": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Increase Size of a Number Pool",
        "description": "Request to increase the size of a number pool. This is the same request as the \"PUT Allocate More Numbers to a Number Pool\" request above.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>allocation</code></td>\n<td>The number of phone numbers you want to add to the number pool</td>\n</tr>\n<tr>\n<td><code>chargeAccountIfNeeded</code></td>\n<td>Boolean value. If set to true, your credit card will be charged for number allocation if your account balance is not sufficient. If set to false, allocation will fail if account balance is not sufficient. Recommended to be set to true.</td>\n</table>",
        "operationId": "IncreaseSizeofaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncreaseSizeofaNumberPoolRequest"
              },
              "example": {
                "allocation": 1,
                "chargeAccountIfNeeded": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 21:37:51 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "418"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IncreaseSizeofaNumberPool"
                },
                "example": {
                  "transactionId": "TR4d1fed2c-1115-4672-b8ea-3c2ae26b52c8",
                  "allocationJob": {
                    "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                    "numberPoolName": "New Number Pool",
                    "requestAmount": 1,
                    "completedAmount": 0,
                    "startTime": 0,
                    "completeTime": 0,
                    "completed": false,
                    "chargeAccountToFill": false,
                    "id": "PA2e51e5bdb2874b8dab47bec6e1510640",
                    "name": "",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Affiliate": {
      "put": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Assign a Publisher to a  Number Pool",
        "description": "Request to assign a publisher associated with your account to a number pool.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>affiliateId</code></td>\n<td>The ID of the publisher you want to add to the pool. Find <a href=#get-information-about-publishers>publishers</a> associated with your account</td>\n</tr>\n</table>",
        "operationId": "AssignaPublishertoaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignaPublishertoaNumberPoolRequest"
              },
              "example": {
                "affiliateId": "{{publisherId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 02 Apr 2021 18:10:30 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "588"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AssignaPublishertoaNumberPool"
                },
                "example": {
                  "transactionId": "TRcd977186-c0a0-45d0-90a0-0dab8bb68259",
                  "numberPool": {
                    "holdNumberOutOfPoolInSeconds": 30,
                    "poolSize": 3,
                    "sortByGeo": false,
                    "totalTimeForNumberOutOfPoolInSeconds": 300,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "213",
                      "isTollFree": false
                    },
                    "autoRotateNumbers": false,
                    "affiliate": {
                      "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                      "subId": "",
                      "createNumbers": true,
                      "accessToRecordings": true,
                      "userIds": [
                        "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                      ],
                      "isSelf": false,
                      "name": "Example Publisher",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                    "name": "New Number Pool",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Numbers/{numberId}": {
      "delete": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Delete a Specific Number from a Number Pool",
        "description": "Request to remove a specified number from a number pool\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n\n`numberId` The ID of the number you want to remove from the pool. You can find a list of numbers in the pool and their IDs using the \"GET Get Numbers for a Number Pool\" request above.\n<br>\n<br>",
        "operationId": "DeleteaSpecificNumberfromaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 01 Apr 2021 21:49:10 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaSpecificNumberfromaNumberPool"
                },
                "example": {
                  "transactionId": "TR102b93a2-2c45-4010-8c49-aa6f61f6dda2",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/numberpools/{numberPoolId}/Affiliate/{publisherId}": {
      "delete": {
        "tags": [
          "Number Pools"
        ],
        "summary": "Remove a Publisher from a Number Pool",
        "description": "Request to remove a publisher from a number pool\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`numberPoolId` Find IDs of your [number pools](#get-information-about-number-pools)\n\n`publisherId` The ID of the publisher you want to remove from the pool. Find [publishers](#get-information-about-publishers) associated with your account\n<br>\n<br>",
        "operationId": "RemoveaPublisherfromaNumberPool",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberPoolId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 02 Apr 2021 18:12:14 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "445"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveaPublisherfromaNumberPool"
                },
                "example": {
                  "transactionId": "TR73df40c2-fd40-42f8-b2e4-328a18fa4b12",
                  "numberPool": {
                    "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                    "holdNumberOutOfPoolInSeconds": 30,
                    "poolSize": 3,
                    "sortByGeo": false,
                    "totalTimeForNumberOutOfPoolInSeconds": 300,
                    "assignmentSettings": {
                      "countryCode": "US",
                      "areaCode": "213",
                      "isTollFree": false
                    },
                    "autoRotateNumbers": false,
                    "name": "New Number Pool",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/blockedNumbers": {
      "get": {
        "tags": [
          "Blocked Numbers"
        ],
        "summary": "Get Blocked Phone Numbers",
        "description": "Request to view all the numbers you currently have blocked, as well as some details about how long and for what campaigns (if specified) they are blocked.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>",
        "operationId": "GetBlockedPhoneNumbers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 21:42:07 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "603"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetBlockedPhoneNumbers"
                },
                "example": {
                  "transactionId": "TRa34fd7e6-93c6-40c6-a1b0-72582fe2f53a",
                  "blockedNumbers": [
                    {
                      "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
                      "phoneNumber": "+anonymous",
                      "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                      "timeLimited": true,
                      "createdDate": "2021-04-05T21:36:25.1041628Z",
                      "expiration": "2021-04-06T05:36:25.104Z",
                      "id": "BL93f3ad92960e404d91766fbdbe5f8bda",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
                      "phoneNumber": "+307*",
                      "campaignId": "",
                      "timeLimited": false,
                      "createdDate": "2021-04-05T21:38:13.0974695Z",
                      "expiration": "9999-01-01T01:01:01Z",
                      "id": "BLc2486f8854be46d8bb54657abf3e2d82",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
                      "phoneNumber": "+12135551233",
                      "campaignId": "",
                      "timeLimited": false,
                      "createdDate": "2021-04-05T21:39:07.2426791Z",
                      "expiration": "9999-01-01T01:01:01Z",
                      "id": "BL2f00606c68d7402e95104a2409c8cb75",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Blocked Numbers"
        ],
        "summary": "Block a Phone Number",
        "description": "Request to block a phone number, phone numbers with a certain prefix, or calls from anonymous callers.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>phoneNumber</code></td>\n<td>The number you want to block. To block anonymous calls, give this a value of \"+anonymous\". To block an area code, for example area code +1(555) give this a value of \"+1555*\". To block a specific phone number, for example +1(555)666-1234, give this a value of \"+15556661234\".</td>\n</tr>\n<tr>\n<td><code>campaignId</code></td>\n<td>Specifies the campaign for which you want to block the number. If you want to block it across all campaigns, leave empty quotes for the value, otherwise give this a value of the desired campaign's ID.</td>\n</tr>\n</table>\n\n#### Optional Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>expInHour</code></td>\n<td>The number of hours you want to block call from this number. If this parameter is not included in the request, the number will be blocked indefinitely.</td>\n</tr>\n</table>",
        "operationId": "BlockaPhoneNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockaPhoneNumberRequest"
              },
              "example": {
                "phoneNumber": "+anonymous",
                "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                "expInHour": 8
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 21:55:49 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "446"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Blockanonymousnumbersfor8hoursinspecificcampaign"
                },
                "example": {
                  "transactionId": "TRc4a14f29-ff01-4e6b-9b6d-ac47780024eb",
                  "blockedNumberId": "BL3c6bdb6a00644d9b86c3115375382a68",
                  "blockedNumber": {
                    "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
                    "phoneNumber": "+anonymous",
                    "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                    "timeLimited": true,
                    "createdDate": "2021-04-05T21:55:50.090263Z",
                    "expiration": "2021-04-06T05:55:50.090263Z",
                    "id": "BL3c6bdb6a00644d9b86c3115375382a68",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/blockedNumbers/{blockedNumberId}": {
      "get": {
        "tags": [
          "Blocked Numbers"
        ],
        "summary": "Get Details About a Single Blocked Number",
        "description": "Request to view details about a single blocked number.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`blockedNumberId` The ID of the blocked number you want details for. You can find the IDs of all blocked numbers associated with your account using the \"GET Get Blocked Phone Numbers\" request above.\n<br>\n<br>",
        "operationId": "GetDetailsAboutaSingleBlockedNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockedNumberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 21:43:54 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "436"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutaSingleBlockedNumber"
                },
                "example": {
                  "transactionId": "TRdcbd607e-af43-469c-a415-b4e21e239047",
                  "blockedNumber": {
                    "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
                    "phoneNumber": "+anonymous",
                    "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                    "timeLimited": true,
                    "createdDate": "2021-04-05T21:36:25.1041628Z",
                    "expiration": "2021-04-06T05:36:25.104Z",
                    "id": "BL93f3ad92960e404d91766fbdbe5f8bda",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Blocked Numbers"
        ],
        "summary": "Update a Blocked Phone Number",
        "description": "Request to edit the settings for a blocked number.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`blockedNumberId` The ID of the blocked number you want details for. You can find the IDs of all blocked numbers associated with your account using the \"GET Get Blocked Phone Numbers\" request above.\n<br>\n<br>\n\n### Request Body\n<hr>\n<br>\n\nThis request can be used to modify the `phoneNumber` or `campaignId` which are explained in the description of the \"POST Block a Phone Number\" request above.\n\nAdditionally, you can include the following parameters in the request body:\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>timeLimited</code></td>\n<td>Boolean value. If set to false the number will be blocked indefinitely</td>\n</tr>\n<tr>\n<td><code>expiration</code></td>\n<td>Use this to adjust when the blocked number will no longer be blocked</td>\n</tr>\n</table>\n\n__NOTE:__ If you are adding an expiration to a blocked number that was previously blocked indefinitely, you must include both of these parameters.",
        "operationId": "UpdateaBlockedPhoneNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockedNumberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaBlockedPhoneNumberRequest"
              },
              "example": {
                "phoneNumber": "+anonymous",
                "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                "expiration": "2021-04-06T05:36:25.104Z",
                "timeLimited": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 21:52:23 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "436"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateaBlockedPhoneNumber"
                },
                "example": {
                  "transactionId": "TRd3f27ff6-1f1d-4b85-ab08-d954110815ce",
                  "blockedNumber": {
                    "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
                    "phoneNumber": "+anonymous",
                    "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                    "timeLimited": true,
                    "createdDate": "2021-04-05T21:36:25.1041628Z",
                    "expiration": "2021-04-06T05:36:25.104Z",
                    "id": "BL93f3ad92960e404d91766fbdbe5f8bda",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Blocked Numbers"
        ],
        "summary": "Unblock a Phone Number",
        "description": "Request to unblock a phone number.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n\n`blockedNumberId` The ID of the blocked number you want to unblock. You can find the IDs of all blocked numbers associated with your account using the \"GET Get Blocked Phone Numbers\" request above.\n<br>\n<br>",
        "operationId": "UnblockaPhoneNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockedNumberId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 05 Apr 2021 21:54:23 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "196"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockaPhoneNumber"
                },
                "example": {
                  "transactionId": "TR6ce66bc7-3208-42f1-95a5-07490eb1c6c0",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{rtbId}.json": {
      "get": {
        "tags": [
          "Real Time Bidding (RTB)"
        ],
        "summary": "GET JSON",
        "description": "### Path Variables <hr>\n\n`environment` For more information about environments see the [Selecting Your Environment](#selecting-your-environment) section above\n\n`rtbId` For more information about rtb ID see the [Configuring your RTB ID](#configuring-your-rtb-id) section above\n\n### Request Details <hr>\n\nThis example request uses only the **CID** and **sipOk** tags, but bid requests can contain an unlimited combination of optional or required tags. If required tags are missing no bid will be returned. \n\n`CID` - The Caller ID associated with the inbound call. \n\n`sipOk` - If the request contains \"sipOk=yes\", a SIP address will be returned instead of a DID.\n\nTo see what tags are required on your campaign please see the request examples provided inside of your Ringba account. \n\n1. **For Admins:** Go to the campaign page and click on the documentation icon for the publisher you want to view.\n\n2. **For Publishers:** Go to the campaign page, click the RTB tab, and then click the RTB documentation button.",
        "operationId": "GETJSON",
        "parameters": [
          {
            "name": "CID",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 140615719531
            }
          },
          {
            "name": "sipOk",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "yes"
            }
          },
          {
            "name": "rtbId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 01 Mar 2021 21:46:27 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "764"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GETJSONwithCIDandSipOk"
                },
                "example": {
                  "bidId": "RTBdb9cc996470c40dbb0d145c5adaa2d54",
                  "bidAmount": 10,
                  "expireInSeconds": 20,
                  "bidExpireDT": "3/1/2021 9:46:47 PM +00:00",
                  "bidExpireEpoch": 1614635207055,
                  "sipAddress": "RTBdb9cc996470c40dbb0d145c5adaa2d54@test.rtb.ringba.sip.telnyx.com",
                  "warnings": [
                    {
                      "code": 200,
                      "description": "The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless the actual call is made."
                    },
                    {
                      "code": 222,
                      "description": "Request executed in Sandbox mode. The bid amount is NOT guaranteed to be equal to production mode bid, and the phone number and/or SIP address cannot be used to forward your call. This is the best way to send test requests."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://rtb.ringba.com/v1/{environment}",
            "variables": {
              "environment": {
                "default": "DefaultParameterValue"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Real Time Bidding (RTB)"
        ],
        "summary": "POST JSON",
        "description": "### Path Variables <hr>\n\n`environment` For more information about environments see the [Selecting Your Environment](#selecting-your-environment) section above\n\n`rtbId` For more information about rtb ID see the [Configuring your RTB ID](#configuring-your-rtb-id) section above\n\n### Request Details <hr>\n\nThis example request uses only the **CID** and **sipOk** tags, but bid requests can contain an unlimited combination of optional or required tags. If required tags are missing no bid will be returned. \n\n`CID` - The Caller ID associated with the inbound call. \n\n`sipOk` - If the request contains \"sipOk=yes\", a SIP address will be returned instead of a DID.\n\nTo see what tags are required on your campaign please see the request examples provided inside of your Ringba account. \n\n1. **For Admins:** Go to the campaign page and click on the documentation icon for the publisher you want to view.\n\n2. **For Publishers:** Go to the campaign page, click the RTB tab, and then click the RTB documentation button.\n\n----\n\nAs the example \"POST JSON using a XML body\" shows, it is possible to send a XML body to this JSON endpoint using the header \"Content-Type\" = \"application/xml\". This can be useful if you need to send a XML body in the request, but wants to receive a JSON response.\n",
        "operationId": "POSTJSON",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/xml"
              ],
              "type": "string",
              "example": "application/xml"
            }
          },
          {
            "name": "rtbId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/bid_request"
              },
              "example": "<bid_request>\r\n  <Tag1>tag1value</Tag1>\r\n  <Tag2>tag2value</Tag2>\r\n</bid_request>"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 01 Mar 2021 21:48:48 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "764"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSTJSONwithCIDandsipOk"
                },
                "example": {
                  "bidId": "RTBd3760024714340b0af9141caa9c7ec9f",
                  "bidAmount": 10,
                  "expireInSeconds": 20,
                  "bidExpireDT": "3/1/2021 9:49:08 PM +00:00",
                  "bidExpireEpoch": 1614635348454,
                  "sipAddress": "RTBd3760024714340b0af9141caa9c7ec9f@test.rtb.ringba.sip.telnyx.com",
                  "warnings": [
                    {
                      "code": 200,
                      "description": "The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless the actual call is made."
                    },
                    {
                      "code": 222,
                      "description": "Request executed in Sandbox mode. The bid amount is NOT guaranteed to be equal to production mode bid, and the phone number and/or SIP address cannot be used to forward your call. This is the best way to send test requests."
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://rtb.ringba.com/v1/{environment}",
            "variables": {
              "environment": {
                "default": "DefaultParameterValue"
              }
            }
          }
        ]
      }
    },
    "/{rtbId}.xml": {
      "get": {
        "tags": [
          "Real Time Bidding (RTB)"
        ],
        "summary": "GET XML",
        "description": "### Path Variables <hr>\n\n`environment` For more information about environments see the [Selecting Your Environment](#selecting-your-environment) section above\n\n`rtbId` For more information about rtb ID see the [Configuring your RTB ID](#configuring-your-rtb-id) section above\n\n### Request Details <hr>\n\nThis example request uses only the **CID** and **sipOk** tags, but bid requests can contain an unlimited combination of optional or required tags. If required tags are missing no bid will be returned. \n\n`CID` - The Caller ID associated with the inbound call. \n\n`sipOk` - If the request contains \"sipOk=yes\", a SIP address will be returned instead of a DID.\n\nTo see what tags are required on your campaign please see the request examples provided inside of your Ringba account. \n\n1. **For Admins:** Go to the campaign page and click on the documentation icon for the publisher you want to view.\n\n2. **For Publishers:** Go to the campaign page, click the RTB tab, and then click the RTB documentation button.",
        "operationId": "GETXML",
        "parameters": [
          {
            "name": "CID",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 140615719531
            }
          },
          {
            "name": "sipOk",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "yes"
            }
          },
          {
            "name": "rtbId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 01 Mar 2021 21:48:01 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bid"
                },
                "example": "<Bid>\r\n  <BidID>RTB82aee43144464df8a17847754a169524</BidID>\r\n  <BidAmount>10</BidAmount>\r\n  <ExpireInSeconds>20</ExpireInSeconds>\r\n  <BidExpireDT>3/1/2021 9:48:21 PM +00:00</BidExpireDT>\r\n  <BidExpireEpoch>1614635301457</BidExpireEpoch>\r\n  <SIPAddress>RTB82aee43144464df8a17847754a169524@test.rtb.ringba.sip.telnyx.com</SIPAddress>\r\n  <Warnings>\r\n    <Warning code=\"200\" />\r\n    <Warning code=\"222\" />\r\n  </Warnings>\r\n</Bid>"
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://rtb.ringba.com/v1/{environment}",
            "variables": {
              "environment": {
                "default": "DefaultParameterValue"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Real Time Bidding (RTB)"
        ],
        "summary": "POST XML",
        "description": "### Path Variables <hr>\n\n`environment` For more information about environments see the [Selecting Your Environment](#selecting-your-environment) section above\n\n`rtbId` For more information about rtb ID see the [Configuring your RTB ID](#configuring-your-rtb-id) section above\n\n### Request Details <hr>\n\nThis example request uses only the **CID** and **sipOk** tags, but bid requests can contain an unlimited combination of optional or required tags. If required tags are missing no bid will be returned. \n\n`CID` - The Caller ID associated with the inbound call. \n\n`sipOk` - If the request contains \"sipOk=yes\", a SIP address will be returned instead of a DID.\n\nTo see what tags are required on your campaign please see the request examples provided inside of your Ringba account. \n\n1. **For Admins:** Go to the campaign page and click on the documentation icon for the publisher you want to view.\n\n2. **For Publishers:** Go to the campaign page, click the RTB tab, and then click the RTB documentation button.\n----\n\nAs the example \"POST XML using a JSON body\" shows, it is possible to send a JSON body to this XML endpoint using the header \"Content-Type\" = \"application/json\". This can be useful if you need to send a JSON body in the request, but wants to receive a XML response.",
        "operationId": "POSTXML",
        "parameters": [
          {
            "name": "rtbId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POSTXMLREQUEST"
              },
              "example": {
                "Tag1": "tag1value",
                "Tag2": "tag2value"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 01 Mar 2021 21:50:58 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "885"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bid"
                },
                "example": "<Bid>\r\n  <BidID>RTB8bbbb13f6694458281d23621a0daba3c</BidID>\r\n  <BidAmount>10</BidAmount>\r\n  <ExpireInSeconds>20</ExpireInSeconds>\r\n  <BidExpireDT>3/1/2021 9:51:18 PM +00:00</BidExpireDT>\r\n  <BidExpireEpoch>1614635478076</BidExpireEpoch>\r\n  <SIPAddress>RTB8bbbb13f6694458281d23621a0daba3c@test.rtb.ringba.sip.telnyx.com</SIPAddress>\r\n  <Warnings>\r\n    <Warning code=\"200\" />\r\n    <Warning code=\"222\" />\r\n  </Warnings>\r\n</Bid>"
              }
            }
          }
        },
        "deprecated": false,
        "servers": [
          {
            "url": "https://rtb.ringba.com/v1/{environment}",
            "variables": {
              "environment": {
                "default": "DefaultParameterValue"
              }
            }
          }
        ]
      }
    },
    "/{accountId}/rtb/bulk-modifiers/fromCSV": {
      "put": {
        "tags": [
          "RTB Bulk Modifiers"
        ],
        "summary": "Create RTB Bulk Adjustment from CSV",
        "description": "Request to upload a CSV file that specifies the adjustments for different values. This request is related to the <a href=\"#bulk-modifiers\">Bulk Modifiers</a> section of the \"PUT Enable RTB for a Campaign\" request above. Check out the description of that request for more information.\n\n### Path Variables \n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n\nThis request only has one required parameter, which is the CSV file you created with the adjustments for different criteria. In Postman it can be uploaded using the \"binary\" option for the Body.",
        "operationId": "CreateRTBBulkAdjustmentfromCSV",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Age-Bulk-Modifier"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {},
              "schema": {
                "required": [
                  "File"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Mar 2021 15:59:00 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "309"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRTBBulkAdjustmentfromCSV"
                },
                "example": {
                  "transactionId": "TRaac524b1-cf14-4eea-8ae2-337ea03cdb17",
                  "rtbBulkModifierList": {
                    "id": "RTBLISTc5de66696f8142448b0f0de930c35acb",
                    "name": "Age-Bulk-Modifier",
                    "adjustmentsCount": 30,
                    "hasTypeOverrides": false,
                    "hasValueOverrides": true
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets": {
      "get": {
        "tags": [
          "Targets"
        ],
        "summary": "Get Targets",
        "description": "Request to retrieve details about all targets associated with the account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Optional Query Parameters\n<hr>\n<br>\n\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>includeStats=true</code></td>\n        <td>Can be added as a query parameter at the end of the url following a ? (question mark) in order to add stats for the targets</td>\n    </tr>\n</table>\n<br>\n\n__NOTE:__ If the stats are included, an object containing stats for all the targets will be displayed _after_ the array containing details about all targets. See the \"Get Targets With Stats\" example to the right.\n<!-- `includeStats=true` can be added as a query parameter at the end of the url following a ? (question mark).<br>\n<br> -->",
        "operationId": "GetTargets",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Feb 2021 23:09:38 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "transfer-encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTargets"
                },
                "example": {
                  "transactionId": "TR30b48faf-70ad-448d-87ee-d50885fcbb64",
                  "targets": [
                    {
                      "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                      "instructions": {
                        "connectionTimeOut": 0,
                        "callType": "number",
                        "number": "+16317918378"
                      },
                      "isHighRateTarget": false,
                      "highRateCost": 0,
                      "ringbaNumberId": "",
                      "targetCallIncrement": "onConvert",
                      "_SearchNumer": "number:+16317918378",
                      "capsMigrated": true,
                      "conversionTimerOffset": 0,
                      "schedule": {
                        "concurrencyCap": -1,
                        "timeZoneId": "Romance Standard Time",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "blockRecordings": false,
                      "name": "Ringba Test Target",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "post": {
        "tags": [
          "Targets"
        ],
        "summary": "Create New Target",
        "description": "Request to create a new target.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n<br>\n\n### Request Body\n<hr>\n\n#### Required Parameters\n\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td>The name of your new target to make it easy to identify later</td>\n    </tr>\n    <tr>\n        <td><code>schedule</code></td>\n        <td>An object containing the following parameters:</td>\n    </tr>\n    <tr>\n        <td></td>\n        <td><p><code>timeZoneId</code></p><p>The only required parameter for the <code>schedule</code> object and contains the time zone for the target</p><p>* See the <a href=\"#target-schedule-table\">Schedule Table</a> below for more information about other parameters that can be included in the <code>schedule</code> object.</p></td>\n    </tr>\n    <tr>\n        <td><code>instructions</code></td>\n        <td><p>An object containing additional parameters. There are two options for the instructions depending if the target is going to be a <b>phone number</b> or <b>SIP URI</b>.</p><p>* See the two tables below for more information about the <code>instructions</code> object</p></td>\n    </tr>\n</table>\n\n<table>\n    <tr>\n        <td>If using a <b>phone number</b> the <code>instructions</code> object has the following parameters:</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td><code>callType</code></td>\n        <td>Has a value of \"number\"</td>\n    </tr>\n    <tr>\n        <td><code>number</code></td>\n        <td>The phone number of the target you are creating</td>\n    </tr>\n    <tr>\n        <td><code>connectionTimeout</code></td>\n        <td>The number of seconds to wait before re-routing to another target if this target does not answer</td>\n    </tr>\n</table>\n\n<table>\n    <tr>\n        <td>If using a <b>SIP URI</b> the <code>instructions</code> object has the following parameters:</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td><code>callType</code></td>\n        <td>Has a value of \"sip\"</td>\n    </tr>\n    <tr>\n        <td><code>connectionTimeout</code></td>\n        <td>The number of seconds to wait before re-routing to another target if this target does not answer</td>\n    </tr>\n    <tr>\n        <td><code>sip</code></td>\n        <td>Is an object containing the following parameters:</td>\n    </tr>\n    <tr>\n        <td></td>\n        <td><p><code>number</code></p><p>The address for the SIP URI</p><hr><p><code>userName</code></p><p>The user name used to access your SIP URI</p><hr><p><code>password</code></p><p>The password used to access your SIP URI</p></td>\n    </tr>\n</table>\n\n__NOTE:__ See the examples to the right called \"Create Target With Phone Number\" and \"Create Target With SIP URI\" to the right to compare the differences in the ``instructions`` field.\n\n\n#### Optional Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>subId</code></td>\n        <td>ID for tracking this target</td>\n    </tr>\n    <tr>\n        <td><code>owner</code></td>\n        <td>object containing the <code>id</code> of the Buyer you want this target assigned to. Find a list of <a href=\"#get-and-edit-information-about-buyers-associated-with-your-account\">buyerIds</a></td>\n    </tr>\n    <tr>\n        <td><code>blockRecordings</code></td>\n        <td>Boolean value for whether or not the target is blocked from recording calls</td>\n    </tr>\n    <tr>\n        <td><code>targetCallIncrement</code></td>\n        <td>Determines at what point a call to this target will count toward the target's capacity limits. The parameter has three options:<ul><li>\"onConnect\" will count any call that connected</li><li>\"onConvert\" will count any call that is converted based on the buyer's specifications</li><li>\"onRevenue\" will count any call that leads to revenue for the buyer</li></ul></td>\n    </tr>\n</table>\n\n##### Target Schedule Table\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>hoursOfOperation</code></td>\n        <td>sets the hours of operation for the target. This parameter is an array of 7 objects, one for each day starting with Sunday. Each day object contains the following parameters:</td>\n    </tr>\n    <tr>\n        <td></td>\n        <td><p><code>openTime</code></p><p>Object with parameters <code>hour</code> and <code>minute</code> to decide what hours (in 24 hour format) the target opens for business</p><hr><p><code>closeTime</code></p><p>Object with parameters <code>hour</code> and <code>minute</code> to decide what hours (in 24 hour format) the target closes for business</p><hr><p><code>inverted</code></p><p>Set this value to \"false\"</p><hr><p><code>isClosed</code></p><p>If set to \"true\" this will set the target to \"closed\" for the entire day, regardless of the values for <code>openTime</code> or <code>closeTime</code>.</p><hr><p><b>NOTE:</b> See the \"Create New Target With Hours of Operation\" example to the right to see how to set the hours of operation to Monday-Friday 9AM-5PM and closed Saturday and Sunday.</p></td>\n    </tr>\n    <tr>\n        <td><code>allTimeCap</code></td>\n        <td>Limits the total number of calls that will be routed to this target</td>\n    </tr>\n    <tr>\n        <td><code>monthlyCap</code></td>\n        <td>Limits the number of calls routed to this target per month</td>\n    </tr>\n    <tr>\n        <td><code>dailyCap</code></td>\n        <td>Limits the number of calls routed to this target per day</td>\n    </tr>\n    <tr>\n        <td><code>hourlyCap</code></td>\n        <td>Limits the number of call routed to this target per hour</td>\n    </tr>\n    <tr>\n        <td><code>concurrencyCap</code></td>\n        <td>Limits the number of simultaneous live calls for this target</td>\n    </tr>\n    <tr>\n        <td><code>callConcurrencyMatrix</code></td>\n        <td>An array containing 7 sub-arrays, one for each day of the week starting with Sunday. Each sub-array contains 24 values, one for each hour starting with 12am. Each value determines the concurrencyCap for that day and hour. See the \"Create New Target With Concurrency Matrix\" example to the right to see how to limit the capacity to 2 calls Monday-Friday 9AM-5PM while leaving all other times unlimited.</td>\n    </tr>\n</table>\n\n__NOTE:__ To make an unlimited cap for any of these parameters, use a value of \"-1\".<br>\n__NOTE:__ See the example to the right called \"Create Target With All Available Parameters\" to see how to write a request using all required and optional parameters.\n\n\n<!-- ``subId`` id for tracking this target<br>\n``owner`` object containing the ``id`` of the Buyer you want this target assigned to. Find a list of [buyerIds](#get-and-edit-information-about-buyers-associated-with-your-account)<br>\n``blockRecordings`` boolean value for whether or not the target is blocked from recording calls<br>\n``targetCallIncrement`` determines at what point a call to this target will count toward the target's capacity limits. The parameter has three options:<br>\n* \"onConnect\" will count any call that connected<br>\n* \"onConvert\" will count any call that is converted based on the buyer's specifications<br>\n* \"onRevenue\" will count any call that leads to revenue for the buyer<br>\n\nOptional parameters within the ``schedule`` parameter:<br>\n> ``hoursOfOperation`` sets the hours of operation for the target. This parameter is an array of 7 objects, one for each day starting wiit Sunday. Each day object contains the following parameters:<br>\n> > ``openTime`` object with parameters ``hour`` and ``minute`` to decide what hours (in 24 hour format) the target opens for business<br>\n> > ``closeTime`` object with parameters ``hour`` and ``minute`` to decide what hours (in 24 hour format) the target closes for business<br>\n> > ``inverted`` set this value to \"false\"<br>\n> > ``isClosed`` will set the target to \"closed\" for the entire day, regardless of ``openTime`` or ``closedTime`` values<br>\n> > __NOTE:__ See the \"Create New Target With Hours of Operation\" example to the right to see how to set the hours of operation to Monday-Friday 9AM-5PM and closed Saturday and Sunday.<br>\n\n> ``allTimeCap`` limits the total number of calls that will be routed to this target<br>\n> ``monthlyCap`` limits the number of calls routed to this target per month<br>\n> ``dailyCap`` limits the number of calls routed to this target per day<br>\n> ``hourlyCap`` limits the number of call routed to this target per hour<br>\n> ``concurrencyCap`` limits the number of simultaneous live calls for this target<br>\n> ``callConcurrencyMatrix`` array containing 7 sub-arrays, one for each day of the week starting with Sunday. Each sub-array contains 24 values, one for each hour starting with 12am. Each value determines the concurrencyCap for that day and hour. See the \"Create New Target With Concurrency Matrix\" example to the right to see how to limit the capacity to 2 calls Monday-Friday 9AM-5PM while leaving all other times unlimited. <br>\n> __NOTE:__ To make an unlimited cap for any of these parameters, use a value of \"-1\".<br>\n\n\n<!-- ``name`` the name of your new target to make it easy to identify later.<br>\n``schedule`` an object containing additional parameters:\n> ``timeZoneId`` is the only required parameter for the ``schedule``object and contains the time zone for the target.\n> see \"Optional Parameters\" below for more information about other parameters that can be included in the ``schedule`` object.<br>\n\n``instructions`` an object containing additional parameters. There are two options for the instructions depending if the target is going to be a phone number or SIP URI.<br>\n> If using a __phone number__ the ``instructions`` field has the following parameters:<br>\n> ``callType`` has a value of \"number\"<br>\n> ``number`` is the phone number of the target you are creating<br>\n> ``connectionTimeOut`` the number of seconds to wait before re-routing to another target if this target does not answer<br>\n\n\n> If using a __SIP URI__ the ``instructions`` field has the following parameters:<br>\n> ``callType`` has a value of \"sip\"<br>\n> ``connectionTimeOut`` the number of seconds to wait before re-routing to another target if this target does not answer<br>\n> ``sip`` is an object containing the following parameters:<br>\n> > ``number`` is the address for the SIP URI<br>\n> > ``userName`` is the user name used to access your SIP URI<br>\n> > ``password`` is the password used to access your SIP URI<br>\n\n> __NOTE:__ See the examples to the right called \"Create Target With Phone Number\" and \"Create Target With SIP URI\" to the right to compare the differences in the ``instructions`` field. -->\n<!-- __NOTE:__ See the example to the right called \"Create Target With All Available Parameters\" to see how to write a request using all required and optional parameters -->",
        "operationId": "CreateNewTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewTargetRequest"
              },
              "example": {
                "name": "New Target",
                "subId": "New",
                "instructions": {
                  "callType": "number",
                  "number": "+13075551234",
                  "connectionTimeOut": 0
                },
                "schedule": {
                  "timeZoneId": "Hawaiian Standard Time"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Feb 2021 23:58:05 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "542"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewTargetWithPhoneNumber"
                },
                "example": {
                  "transactionId": "TR47046601-905a-4999-ba42-37f0759586bd",
                  "targetId": "TAdef30c972ca149468e618900de78906f",
                  "target": {
                    "highRateCPM": 0,
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+17205551235"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Mountain Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "id": "TAdef30c972ca149468e618900de78906f",
                    "name": "Phone Number Target",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets/{targetId}": {
      "get": {
        "tags": [
          "Targets"
        ],
        "summary": "Get Details About a Specific Target",
        "description": "Request to retrieve more information about an individual target. This request will automatically include the stats for that target.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)",
        "operationId": "GetDetailsAboutaSpecificTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Feb 2021 18:50:41 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "721"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsAboutaSpecificTarget"
                },
                "example": {
                  "transactionId": "TR54a64328-3375-4b0a-a802-7b2f32189d5a",
                  "target": {
                    "highRateCPM": 0,
                    "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+16317918378"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Romance Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "name": "Ringba Test Target",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "stats": {
                    "tA234457e6f96945cfa312938d4e358015": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "tA2f6961e921ef4b92b7304dd76db8336f": {
                      "totalSum": 0,
                      "currentMonthSum": 0,
                      "currentHourSum": 0,
                      "currentDaySum": 0,
                      "total": 11,
                      "currentMonth": 5,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  },
                  "caps": {
                    "hourSum": -1,
                    "daySum": -1,
                    "monthSum": -1,
                    "totalSum": -1,
                    "live": -1,
                    "isGroup": false,
                    "hour": -1,
                    "day": -1,
                    "month": -1,
                    "total": -1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Targets"
        ],
        "summary": "Update Target",
        "description": "Request to update information about a specific target.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)\n\n### Request Body\n<hr>\n<br>\n\nPlease see the \"POST Create New Target\" request above for an explanation of the parameter available. Any of the required or optional parameters can be modified using this request.",
        "operationId": "UpdateTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": "// {\n//     \"transactionId\": \"TRf2ca4bb9-a6aa-4b44-b665-569b54c25887\",\n//     \"targetId\": \"TA1183b884e2df4541ad9651c168e3bab9\",\n//     \"target\": {\n//         \"highRateCPM\": 0.0,\n//         \"instructions\": {\n//             \"connectionTimeOut\": 0,\n//             \"callType\": \"number\",\n//             \"number\": \"+18442757927\"\n//         },\n//         \"isHighRateTarget\": false,\n//         \"targetCallIncrement\": \"onConvert\",\n//         \"conversionTimerOffset\": 0,\n//         \"schedule\": {\n//             \"concurrencyCap\": -1,\n//             \"timeZoneId\": \"Mountain Standard Time\",\n//             \"allTimeSumCap\": -1.0,\n//             \"monthlySumCap\": -1.0,\n//             \"dailySumCap\": -1.0,\n//             \"hourlySumCap\": -1.0,\n//             \"allTimeCap\": -1,\n//             \"monthlyCap\": -1,\n//             \"dailyCap\": -1,\n//             \"hourlyCap\": -1\n//         },\n//         \"blockRecordings\": false,\n//         \"id\": \"TA1183b884e2df4541ad9651c168e3bab9\",\n//         \"name\": \"Test Target Three\",\n//         \"accountId\": \"RA25107ee2411049989cd8672852278bdb\",\n//         \"enabled\": true,\n//         \"version\": 1\n//     }\n// }\n{\n    \"name\": \"Test Target Three\"\n}"
              },
              "example": "// {\n//     \"transactionId\": \"TRf2ca4bb9-a6aa-4b44-b665-569b54c25887\",\n//     \"targetId\": \"TA1183b884e2df4541ad9651c168e3bab9\",\n//     \"target\": {\n//         \"highRateCPM\": 0.0,\n//         \"instructions\": {\n//             \"connectionTimeOut\": 0,\n//             \"callType\": \"number\",\n//             \"number\": \"+18442757927\"\n//         },\n//         \"isHighRateTarget\": false,\n//         \"targetCallIncrement\": \"onConvert\",\n//         \"conversionTimerOffset\": 0,\n//         \"schedule\": {\n//             \"concurrencyCap\": -1,\n//             \"timeZoneId\": \"Mountain Standard Time\",\n//             \"allTimeSumCap\": -1.0,\n//             \"monthlySumCap\": -1.0,\n//             \"dailySumCap\": -1.0,\n//             \"hourlySumCap\": -1.0,\n//             \"allTimeCap\": -1,\n//             \"monthlyCap\": -1,\n//             \"dailyCap\": -1,\n//             \"hourlyCap\": -1\n//         },\n//         \"blockRecordings\": false,\n//         \"id\": \"TA1183b884e2df4541ad9651c168e3bab9\",\n//         \"name\": \"Test Target Three\",\n//         \"accountId\": \"RA25107ee2411049989cd8672852278bdb\",\n//         \"enabled\": true,\n//         \"version\": 1\n//     }\n// }\n{\n    \"name\": \"Test Target Three\"\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 08 Feb 2021 23:03:04 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "598"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTarget"
                },
                "example": {
                  "transactionId": "TR2387d7be-ef38-422b-a363-ab8d9448a5af",
                  "target": {
                    "id": "TA4286d3a65fb446e59030d105a34d2ac7",
                    "targetGroupId": "",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+18442757927"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Mountain Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Test Target Three",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "stats": {
                    "tA4286d3a65fb446e59030d105a34d2ac7": {
                      "totalSum": 0,
                      "currentMonthSum": 0,
                      "currentHourSum": 0,
                      "currentDaySum": 0,
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Targets"
        ],
        "summary": "Delete Target",
        "description": "Request to delete a target from your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)",
        "operationId": "DeleteTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 08 Feb 2021 21:37:32 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTarget"
                },
                "example": {
                  "transactionId": "TRb3d1a3e7-625d-4101-8f64-2d0ca2d79598",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets/{targetId}/Counts": {
      "get": {
        "tags": [
          "Targets"
        ],
        "summary": "Get Stats for a Specific Target",
        "description": "Request to display only the stats for a specific target.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)",
        "operationId": "GetStatsforaSpecificTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 08 Feb 2021 20:35:19 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "292"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatsforaSpecificTarget"
                },
                "example": {
                  "transactionId": "TR31450cf5-309e-41a0-9d92-d994bf0bf1d6",
                  "stats": {
                    "tA2f6961e921ef4b92b7304dd76db8336f": {
                      "totalSum": 0,
                      "currentMonthSum": 0,
                      "currentHourSum": 0,
                      "currentDaySum": 0,
                      "total": 10,
                      "currentMonth": 4,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets/{targetId}/InboundReferences": {
      "get": {
        "tags": [
          "Targets"
        ],
        "summary": "Get Inbound References for a Specific Target",
        "description": "See which campaigns on your account reference a target. Multiple campaigns can reference the same target.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)",
        "operationId": "GetInboundReferencesforaSpecificTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 08 Feb 2021 20:28:36 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "415"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboundReferencesforaSpecificTarget"
                },
                "example": {
                  "transactionId": "TR73807c87-2bfb-4c9c-9801-254848b65fd7",
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "hasReferences": true,
                  "refByAccount": true,
                  "campaigns": [
                    {
                      "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                      "campaignName": "RINGBA TEST CAMPAIGN",
                      "campaignDefaultTarget": "false"
                    },
                    {
                      "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                      "campaignName": "API Test",
                      "campaignDefaultTarget": "false",
                      "campaignNoRoutes": "1"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets/isDuplicate": {
      "post": {
        "tags": [
          "Targets"
        ],
        "summary": "Check Duplicate Targets",
        "description": "Request to check if a target is a duplicate of another target. This will check if the name, phone number, or SIP URI matches those of any other target in your account.\n\n### Path Variables\n<hr>\n\n``accountId`` Find your [accountId](#get-your-account-information)\n<br>\n\n### Request Body\n<hr>\n\nThe body of this request needs to have the entire object for the target you are interested in. Use the [GET Get Targets](#get-and-edit-information-about-your-targets) request above to view a list of all the targets associated with your account. Find the target you are interested in within the \"targets\" array in the response and copy it into the body of this request. See the examples to see how the request body should be formatted.\n<br>",
        "operationId": "CheckDuplicateTargets",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckDuplicateTargetsRequest"
              },
              "example": {
                "id": "TAa58f7dbd65be4b9f938fd4172d63ce57",
                "targetGroupId": "",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "highRateCost": 0.0,
                "ringbaNumberId": "PNZFWQO0",
                "targetCallIncrement": "onConvert",
                "_SearchNumer": "number:+18885852294",
                "capsMigrated": true,
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1.0,
                    "monthlySumCap": -1.0,
                    "dailySumCap": -1.0,
                    "hourlySumCap": -1.0,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1.0,
                  "monthlySumCap": -1.0,
                  "dailySumCap": -1.0,
                  "hourlySumCap": -1.0,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target - Copy",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 02 Mar 2021 18:17:51 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "241"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CheckDuplicateTargetswithnon-duplicatetarget"
                },
                "example": {
                  "transactionId": "TRfd9d0380-9f80-44cd-94d7-d0d6d856c9f0",
                  "message": "Target already exists",
                  "isDuplicate": false,
                  "isDuplicateName": false,
                  "isDuplicatePhoneNumber": false,
                  "isDuplicateSIP": false
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets/{targetId}/Buyer": {
      "put": {
        "tags": [
          "Targets"
        ],
        "summary": "Assign Target to Buyer",
        "description": "Request to assign a target to a specific buyer. To complete this request, the body must contain a valid ``buyerId``. Find a list of [buyerIds](#get-and-edit-information-about-buyers-associated-with-your-account)\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)",
        "operationId": "AssignTargettoBuyer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignTargettoBuyerRequest"
              },
              "example": {
                "buyerId": "{{buyerId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 08 Feb 2021 23:22:14 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "691"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddBuyertoTarget"
                },
                "example": {
                  "transactionId": "TR81eac9cc-98df-4c8d-9295-b60da3f339ff",
                  "target": {
                    "id": "TA4286d3a65fb446e59030d105a34d2ac7",
                    "targetGroupId": "",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+18442757927"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "owner": {
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "id": "BUec50e9c7fa294283ba10a35893b13198",
                      "canPauseTargets": true,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": false,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "name": "Example Buyer Co.",
                      "enabled": true,
                      "version": 1
                    },
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Mountain Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Test Target Three",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets/{targetId}/ResetCount": {
      "delete": {
        "tags": [
          "Targets"
        ],
        "summary": "Reset Count for a Specific Target",
        "description": "Request to reset the counts for a target. This will reset all counts to zero for that target.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)",
        "operationId": "ResetCountforaSpecificTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 22:39:47 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "331"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResetCountforaSpecificTarget"
                },
                "example": {
                  "transactionId": "TR02327d36-21d7-49bb-afbd-0228bf34c339",
                  "stats": {
                    "tAc915194e11ab428f91178e897e1d67cb": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "tAfa4c37e44a274af8b8927ed67d536d89": {
                      "totalSum": 0,
                      "currentMonthSum": 0,
                      "currentHourSum": 0,
                      "currentDaySum": 0,
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targets/{targetId}/Buyer/{buyerId}": {
      "delete": {
        "tags": [
          "Targets"
        ],
        "summary": "Delete Buyer From Target",
        "description": "Request to unassign a specific target from the buyer to which it was assigned. This request will not delete the target from your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets) <br>\n``buyerId`` Find a list of [buyerIds](#get-and-edit-information-about-buyers-associated-with-your-account)",
        "operationId": "DeleteBuyerFromTarget",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Mon, 08 Feb 2021 23:25:10 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "536"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBuyerFromTarget"
                },
                "example": {
                  "transactionId": "TR1714cd3b-5801-407c-b3a8-009f52ea56e9",
                  "target": {
                    "id": "TA4286d3a65fb446e59030d105a34d2ac7",
                    "targetGroupId": "",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+18442757927"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Mountain Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Test Target Three",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups": {
      "get": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Get Target Groups",
        "description": "Request to get a list of all target groups associated with your account as well as the targets assigned to each group.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>",
        "operationId": "GetTargetGroups",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Feb 2021 18:43:52 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "931"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetTargetGroups"
                },
                "example": {
                  "transactionId": "TRf2b4dddd-50c8-49a3-835a-fb27b57a855a",
                  "targetGroups": [
                    {
                      "id": "TA234457e6f96945cfa312938d4e358015",
                      "isSimalDial": false,
                      "oRouteSettings": {
                        "campaignOverride": false,
                        "globalOverride": false,
                        "waterFallOverride": false
                      },
                      "oCapacity": {
                        "campaignOverride": false,
                        "globalOverride": false,
                        "waterFallOverride": false
                      },
                      "oConcurrency": {
                        "campaignOverride": false,
                        "globalOverride": false,
                        "waterFallOverride": false
                      },
                      "oSchedule": {
                        "campaignOverride": false,
                        "globalOverride": false,
                        "waterFallOverride": false
                      },
                      "targets": [
                        {
                          "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+17605550149"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "owner": {
                            "canPauseTargets": true,
                            "canSetConcurrencyCaps": false,
                            "canDisputeConversions": false,
                            "capacity": {
                              "timeZoneId": "UTC",
                              "allTimeSumCap": -1,
                              "monthlySumCap": -1,
                              "dailySumCap": -1,
                              "hourlySumCap": -1,
                              "allTimeCap": -1,
                              "monthlyCap": -1,
                              "dailyCap": -1,
                              "hourlyCap": -1
                            },
                            "id": "BUec50e9c7fa294283ba10a35893b13198",
                            "name": "Example Buyer Co.",
                            "accountId": "RA25107ee2411049989cd8672852278bdb",
                            "enabled": true,
                            "version": 1
                          },
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Mountain Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "New Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        {
                          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                          "instructions": {
                            "connectionTimeOut": 0,
                            "callType": "number",
                            "number": "+16317918378"
                          },
                          "isHighRateTarget": false,
                          "targetCallIncrement": "onConvert",
                          "conversionTimerOffset": 0,
                          "schedule": {
                            "concurrencyCap": -1,
                            "timeZoneId": "Romance Standard Time",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "blockRecordings": false,
                          "name": "Ringba Test Target",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        }
                      ],
                      "disableTargets": false,
                      "conversionTimerOffset": 0,
                      "schedule": {
                        "concurrencyCap": -1,
                        "timeZoneId": "Pacific Standard Time",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "blockRecordings": false,
                      "name": "Test Buyer Group",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 2
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}": {
      "get": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Get Details about Specific Target Group",
        "description": "Request to retrieve information about a specific target group. This request will automatically include stats for the target group.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups)",
        "operationId": "GetDetailsaboutSpecificTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Feb 2021 18:53:31 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "611"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsaboutSpecificTargetGroup"
                },
                "example": {
                  "transactionId": "TR51baf16f-4113-4baa-aac1-6f70f221389a",
                  "targetGroup": {
                    "id": "TA6bd8e3e01cc0492b9427e04f0312fa98",
                    "isSimalDial": false,
                    "oRouteSettings": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oCapacity": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oConcurrency": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oSchedule": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "targets": [],
                    "disableTargets": false,
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Pacific Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Example Target Group",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 2
                  },
                  "stats": {
                    "tA6bd8e3e01cc0492b9427e04f0312fa98": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  },
                  "caps": {
                    "live": -1,
                    "isGroup": false,
                    "hour": -1,
                    "day": -1,
                    "month": -1,
                    "total": -1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Edit Target Group",
        "description": "Request to edit the information about a target group. In the example to the right the only thing that was changed was the ``name`` using the request body.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups) <br>\n\n### Request Body\n<hr>\n<br>\nSee the \"POST Create Target Group\" request above for an explanation of available parameters. Any of the required or optional parameters can be modified using this request.\n\n### Response Overview\n<hr>\n<br>\nThe response to this request will include an complete overview of the target group including the targets within the group and stats for the group.",
        "operationId": "EditTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTargetGroupRequest"
              },
              "example": {
                "name": "New Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Feb 2021 19:49:16 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "999"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EditTargetGroup"
                },
                "example": {
                  "transactionId": "TRa1ef9e89-f551-4fc0-ab8f-4f649e7d25cf",
                  "targetGroup": {
                    "id": "TA234457e6f96945cfa312938d4e358015",
                    "isSimalDial": false,
                    "oRouteSettings": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oCapacity": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oConcurrency": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oSchedule": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "targets": [
                      {
                        "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                        "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                        "instructions": {
                          "connectionTimeOut": 0,
                          "callType": "number",
                          "number": "+17605550149"
                        },
                        "isHighRateTarget": false,
                        "targetCallIncrement": "onConvert",
                        "owner": {
                          "canPauseTargets": true,
                          "canSetConcurrencyCaps": false,
                          "canDisputeConversions": false,
                          "capacity": {
                            "timeZoneId": "UTC",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "id": "BUec50e9c7fa294283ba10a35893b13198",
                          "name": "Example Buyer Co.",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionTimerOffset": 0,
                        "schedule": {
                          "concurrencyCap": -1,
                          "timeZoneId": "Mountain Standard Time",
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1
                        },
                        "blockRecordings": false,
                        "name": "New Test Target",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      {
                        "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                        "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                        "instructions": {
                          "connectionTimeOut": 0,
                          "callType": "number",
                          "number": "+16317918378"
                        },
                        "isHighRateTarget": false,
                        "targetCallIncrement": "onConvert",
                        "conversionTimerOffset": 0,
                        "schedule": {
                          "concurrencyCap": -1,
                          "timeZoneId": "Romance Standard Time",
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1
                        },
                        "blockRecordings": false,
                        "name": "Ringba Test Target",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "disableTargets": false,
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Pacific Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "New Name",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 2
                  },
                  "stats": {
                    "tAfa4c37e44a274af8b8927ed67d536d89": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "tA2f6961e921ef4b92b7304dd76db8336f": {
                      "total": 11,
                      "currentMonth": 5,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "tA234457e6f96945cfa312938d4e358015": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Delete Target Group",
        "description": "Request to delete a target group from your account. This request will only work if the target group has no targets assigned to it. If you need to remove targets from the target group, see the \"DELETE Delete Single Target from Target Group\" or the \"PATCH Add/Remove Multiple Targets to/from Target Group\" requests above.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups) <br>",
        "operationId": "DeleteTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 22:50:47 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "64"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTargetGroupError1"
                },
                "example": {
                  "message": "Please remove all references to this Target Group."
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 22:53:44 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "195"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTargetGroup"
                },
                "example": {
                  "transactionId": "TR4e7a48b9-b680-4541-afcb-9ec2357f6fb8",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}/Counts": {
      "get": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Get Stats for Specific Target Group",
        "description": "Request to retrieve only the stats for a specific target group.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups)",
        "operationId": "GetStatsforSpecificTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 11 Feb 2021 18:53:49 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "262"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatsforSpecificTargetGroup"
                },
                "example": {
                  "transactionId": "TR59e2b6b5-e25f-4947-9c6d-628f92185411",
                  "stats": {
                    "tA6bd8e3e01cc0492b9427e04f0312fa98": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}/Targets": {
      "get": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Get Targets for Target Group",
        "description": "Request to retrieve information about a specific target group _without_ the stats for the target group.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups)",
        "operationId": "GetTargetsforTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 18:50:07 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "844"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetTargetsforTargetGroup"
                },
                "example": {
                  "transactionId": "TR181eabe9-ab85-465b-a21b-ecd3bd8ba78a",
                  "targets": [
                    {
                      "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                      "targetGroupId": "TAc915194e11ab428f91178e897e1d67cb",
                      "instructions": {
                        "connectionTimeOut": 0,
                        "callType": "number",
                        "number": "+17605550149"
                      },
                      "isHighRateTarget": false,
                      "targetCallIncrement": "onConvert",
                      "owner": {
                        "canPauseTargets": true,
                        "canSetConcurrencyCaps": false,
                        "canDisputeConversions": false,
                        "capacity": {
                          "timeZoneId": "UTC",
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1
                        },
                        "id": "BUec50e9c7fa294283ba10a35893b13198",
                        "name": "Example Buyer Co.",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      "conversionTimerOffset": 0,
                      "schedule": {
                        "concurrencyCap": -1,
                        "timeZoneId": "Mountain Standard Time",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "blockRecordings": false,
                      "name": "New Test Target",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "id": "TA1183b884e2df4541ad9651c168e3bab9",
                      "targetGroupId": "TAc915194e11ab428f91178e897e1d67cb",
                      "instructions": {
                        "connectionTimeOut": 0,
                        "callType": "number",
                        "number": "+17205550167"
                      },
                      "isHighRateTarget": false,
                      "targetCallIncrement": "onConvert",
                      "owner": {
                        "canPauseTargets": false,
                        "canSetConcurrencyCaps": false,
                        "canDisputeConversions": false,
                        "capacity": {
                          "timeZoneId": "UTC",
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1
                        },
                        "id": "BUaf8fb40966cc40cd83e3ac27d9fa5c9a",
                        "name": "Call Buying Inc.",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      "conversionTimerOffset": 0,
                      "schedule": {
                        "concurrencyCap": -1,
                        "timeZoneId": "Mountain Standard Time",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "blockRecordings": false,
                      "name": "Test Target Two",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "patch": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Add Single Target to Target Group",
        "description": "Request to add a single target to a target group. To complete this request, the body must contain a valid ``targetId``. Find a list of your [targetIds](#get-and-edit-information-about-your-targets).\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups)",
        "operationId": "AddSingleTargettoTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSingleTargettoTargetGroupRequest"
              },
              "example": {
                "targetId": "{{targetId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 23:04:28 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "578"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddSingleTargettoTargetGroup"
                },
                "example": {
                  "transactionId": "TRe3afbbc9-1bf4-4436-9c52-58f9c9aa1e73",
                  "targets": [
                    {
                      "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                      "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                      "instructions": {
                        "connectionTimeOut": 0,
                        "callType": "number",
                        "number": "+16317918378"
                      },
                      "isHighRateTarget": false,
                      "targetCallIncrement": "onConvert",
                      "conversionTimerOffset": 0,
                      "schedule": {
                        "concurrencyCap": -1,
                        "timeZoneId": "Romance Standard Time",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "blockRecordings": false,
                      "name": "Ringba Test Target",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}/InboundReferences": {
      "get": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Get Inbound References for Specific Target Group",
        "description": "Request to view all the campaigns that the target group is assigned to and the targets assigned to the target group.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups)",
        "operationId": "GetInboundReferencesforSpecificTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Feb 2021 18:47:46 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "452"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetInboundReferencesforSpecificTargetGroup"
                },
                "example": {
                  "transactionId": "TR2d6120f7-88e5-4521-b312-816481f7b8eb",
                  "id": "TA234457e6f96945cfa312938d4e358015",
                  "hasReferences": true,
                  "refByAccount": true,
                  "campaigns": [
                    {
                      "campaignId": "CAa2714586592f464f817efc493f3a4b50",
                      "campaignName": "RINGBA TEST CAMPAIGN",
                      "campaignNoRoutes": "1"
                    }
                  ],
                  "targets": [
                    {
                      "targetId": "TAfa4c37e44a274af8b8927ed67d536d89",
                      "targetName": "New Test Target"
                    },
                    {
                      "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                      "targetName": "Ringba Test Target"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targetgroups": {
      "post": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Create Target Group",
        "description": "Request to create a new target group. This request will only create the target group, in order to assign targets to the group see the \"PATCH Add Single Target to Target Group\" or \"PATCH Add/Remove Multiple Targets to/from Target Group\" requests below.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n\n\n### Request Body\n<hr>\n\n#### Required Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>name</code></td>\n        <td>The name of the target group to display on reports</td>\n    </tr>\n    <tr>\n        <td><code>schedule</code></td>\n        <td> An object containing the following parameters:</td>\n    </tr>\n    <tr>\n        <td></td>\n        <td><p><code>timeZoneId</code></p><p>The only required parameter for the <code>schedule</code> object and contains the time zone for the target group.</p></td>\n    </tr>\n</table>\n\n\n#### Optional Parameters\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>isSimalDial</code></td>\n        <td>Boolean value, if set to \"true\" then a call to this target group will simultaneously dial all targets in the group and the first to answer will get the call</td>\n    </tr>\n    <tr>\n        <td><code>disableTargets</code></td>\n        <td>Boolean value that if set to \"true\" will disable the targets within the target group from receiving calls</td>\n    </tr>\n    <tr>\n        <td><code>enabled</code></td>\n        <td>Boolean value that if set to false will disable the entire target group from receiving calls</td>\n    </tr>\n</table>\n\nIn addition to these optional parameters, a target group can override certain settings for the targets in the group using the following parameters:\n\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>oCapacity</code></td>\n        <td>Overrides the call capacity settings for the target</td>\n    </tr>\n    <tr>\n        <td><code>oConcurrency</code></td>\n        <td>Overrides the concurrency settings for the target</td>\n    </tr>\n    <tr>\n        <td><code>oSchedule</code></td>\n        <td>Overrides the hours of operation for the target</td>\n    </tr>\n</table>\n\nEach of the above is an object with the following three parameters, which are all boolean values and only one should be set to true.\n\n<table>\n    <tr>\n        <th>Parameter</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td><code>campaignOverride</code></td>\n        <td>Overrides the settings for the targets in the group <em>only</em> within the context of the campaign using the target group</td>\n    </tr>\n    <tr>\n        <td><code>globalOverride</code></td>\n        <td>Overrides the settings for the targets in the group <em>everywhere</em> not just within the campaing using the target group</td>\n    </tr>\n    <tr>\n        <td><code>waterfallOverride</code></td>\n        <td>This feature is being deprecated and should be set to \"false\"</td>\n    </tr>\n</table>\n\n__NOTE:__ If any of the override parameters is set to true, they must be specified in the ``schedule`` parameter. For details on how to write the additional schedule parameters, see the \"POST Create New Target\" request in the \"Targets\" section above.",
        "operationId": "CreateTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTargetGroupRequest"
              },
              "example": {
                "name": "Example Target Grouprtert",
                "isSimalDial": false,
                "schedule": {
                  "timeZoneId": "Pacific Standard Time"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 23:01:09 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "544"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTargetGroup"
                },
                "example": {
                  "transactionId": "TR9b1ac08a-cad8-4167-aaa3-e98cde02999c",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "targetGroup": {
                    "id": "TA234457e6f96945cfa312938d4e358015",
                    "isSimalDial": false,
                    "oRouteSettings": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oCapacity": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oConcurrency": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oSchedule": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "targets": [],
                    "disableTargets": false,
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Pacific Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Test Buyer Group",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}/Buyer": {
      "put": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Assign Target Group to a Buyer",
        "description": "Request to assign a target group to specific buyer. To complete this request, the body must contain a valid ``buyerId``. Find a list of [buyerIds](#get-and-edit-information-about-buyers-associated-with-your-account)\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups)",
        "operationId": "AssignTargetGrouptoaBuyer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignTargetGrouptoaBuyerRequest"
              },
              "example": {
                "buyerId": "{{buyerId}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 23:18:34 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "902"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddBuyertoTargetGroup"
                },
                "example": {
                  "transactionId": "TR5836fa52-dcf9-4d19-899c-c713d528b213",
                  "targetGroup": {
                    "id": "TA234457e6f96945cfa312938d4e358015",
                    "isSimalDial": false,
                    "oRouteSettings": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oCapacity": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oConcurrency": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oSchedule": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "targets": [
                      {
                        "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                        "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                        "instructions": {
                          "connectionTimeOut": 0,
                          "callType": "number",
                          "number": "+17605550149"
                        },
                        "isHighRateTarget": false,
                        "targetCallIncrement": "onConvert",
                        "owner": {
                          "canPauseTargets": true,
                          "canSetConcurrencyCaps": false,
                          "canDisputeConversions": false,
                          "capacity": {
                            "timeZoneId": "UTC",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "id": "BUec50e9c7fa294283ba10a35893b13198",
                          "name": "Example Buyer Co.",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionTimerOffset": 0,
                        "schedule": {
                          "concurrencyCap": -1,
                          "timeZoneId": "Mountain Standard Time",
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1
                        },
                        "blockRecordings": false,
                        "name": "New Test Target",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "disableTargets": false,
                    "owner": {
                      "canPauseTargets": false,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": false,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "id": "BU0db0aea8954049468ed3d2893d0b00e9",
                      "name": "Acme Call Buyers",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Pacific Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Test Buyer Group",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 2
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/targetgroups/{targetGroupId}/targets/bulkUpdate": {
      "patch": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Add/Remove Multiple Targets to/from Target Group",
        "description": "Request to add or remove multiple targets to or from a target group. To complete this request, the body must contain at least one valid ``targetId`` in either the ``targetAddIds`` array or the ``targetRemoveIds``. Find a list of your [targetIds](#get-and-edit-information-about-your-targets).\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups)",
        "operationId": "Add/RemoveMultipleTargetsto/fromTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRemoveMultipleTargetstofromTargetGroupRequest"
              },
              "example": {
                "targetAddIds": [
                  "TAfa4c37e44a274af8b8927ed67d536d89",
                  "TA1183b884e2df4541ad9651c168e3bab9"
                ],
                "targetRemoveIds": []
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 22:53:16 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "190"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveMultipleTargetsfromTargetGroup"
                },
                "example": {
                  "transactionId": "TRae12b694-a01f-4ba8-9f02-6353d90d9475",
                  "targets": []
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}/ResetCount": {
      "delete": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Reset Counts for Target Group",
        "description": "Request to reset counts for a specific target groups. This will reset all counts to zero.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups) <br>\n\n\n### Response Overview\n<hr>\n<br>\n\nThe response to this request will return the stats for the target group and for each target within the target group. They will be separated as an object for each based on the ``targetId`` or ``targetGroupId``",
        "operationId": "ResetCountsforTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 10 Feb 2021 19:40:40 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "351"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ResetCountsforTargetGroup"
                },
                "example": {
                  "transactionId": "TR662de660-2c32-494f-9085-2fa3daef784b",
                  "stats": {
                    "tAfa4c37e44a274af8b8927ed67d536d89": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "tA2f6961e921ef4b92b7304dd76db8336f": {
                      "total": 11,
                      "currentMonth": 5,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    },
                    "tA234457e6f96945cfa312938d4e358015": {
                      "total": 0,
                      "currentMonth": 0,
                      "currentDay": 0,
                      "currentHour": 0,
                      "currentLive": 0
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}/Targets/{targetId}": {
      "delete": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Delete Single Target from Target Group",
        "description": "Request to delete a single target from a target group.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups) <br>\n``targetId`` Find a list of [targetIds](#get-and-edit-information-about-your-targets)\n\n\n### Response Overview\n<hr>\n<br>\nThe response to this request has a field `targets` which will display all remaining targets in the target group.",
        "operationId": "DeleteSingleTargetfromTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 23:08:50 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "725"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSingleTargetfromTargetGroup"
                },
                "example": {
                  "transactionId": "TRe038b810-0363-453e-a569-b05910ed1e91",
                  "targets": [
                    {
                      "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                      "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                      "instructions": {
                        "connectionTimeOut": 0,
                        "callType": "number",
                        "number": "+17605550149"
                      },
                      "isHighRateTarget": false,
                      "targetCallIncrement": "onConvert",
                      "owner": {
                        "canPauseTargets": true,
                        "canSetConcurrencyCaps": false,
                        "canDisputeConversions": false,
                        "capacity": {
                          "timeZoneId": "UTC",
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1
                        },
                        "id": "BUec50e9c7fa294283ba10a35893b13198",
                        "name": "Example Buyer Co.",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      },
                      "conversionTimerOffset": 0,
                      "schedule": {
                        "concurrencyCap": -1,
                        "timeZoneId": "Mountain Standard Time",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "blockRecordings": false,
                      "name": "New Test Target",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/TargetGroups/{targetGroupId}/Buyer/{buyerId}": {
      "delete": {
        "tags": [
          "Target Groups"
        ],
        "summary": "Remove Buyer from Target Group",
        "description": "Request to unassign a target group from the buyer to which it was assigned. This request will not delete the target group or the buyer from your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n``targetGroupId`` Find a list of [targetGroupIds](#get-and-edit-information-about-your-target-groups) <br>\n``buyerId`` Find a list of [buyerIds](#get-and-edit-information-about-buyers-associated-with-your-account)",
        "operationId": "RemoveBuyerfromTargetGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyerId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 09 Feb 2021 23:22:44 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "842"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveBuyerfromTargetGroup"
                },
                "example": {
                  "transactionId": "TR24809c7e-02af-4fa7-9176-cca2bfef9124",
                  "targetGroup": {
                    "id": "TA234457e6f96945cfa312938d4e358015",
                    "isSimalDial": false,
                    "oRouteSettings": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oCapacity": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oConcurrency": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "oSchedule": {
                      "campaignOverride": false,
                      "globalOverride": false,
                      "waterFallOverride": false
                    },
                    "targets": [
                      {
                        "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                        "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                        "instructions": {
                          "connectionTimeOut": 0,
                          "callType": "number",
                          "number": "+17605550149"
                        },
                        "isHighRateTarget": false,
                        "targetCallIncrement": "onConvert",
                        "owner": {
                          "canPauseTargets": true,
                          "canSetConcurrencyCaps": false,
                          "canDisputeConversions": false,
                          "capacity": {
                            "timeZoneId": "UTC",
                            "allTimeSumCap": -1,
                            "monthlySumCap": -1,
                            "dailySumCap": -1,
                            "hourlySumCap": -1,
                            "allTimeCap": -1,
                            "monthlyCap": -1,
                            "dailyCap": -1,
                            "hourlyCap": -1
                          },
                          "id": "BUec50e9c7fa294283ba10a35893b13198",
                          "name": "Example Buyer Co.",
                          "accountId": "RA25107ee2411049989cd8672852278bdb",
                          "enabled": true,
                          "version": 1
                        },
                        "conversionTimerOffset": 0,
                        "schedule": {
                          "concurrencyCap": -1,
                          "timeZoneId": "Mountain Standard Time",
                          "allTimeSumCap": -1,
                          "monthlySumCap": -1,
                          "dailySumCap": -1,
                          "hourlySumCap": -1,
                          "allTimeCap": -1,
                          "monthlyCap": -1,
                          "dailyCap": -1,
                          "hourlyCap": -1
                        },
                        "blockRecordings": false,
                        "name": "New Test Target",
                        "accountId": "RA25107ee2411049989cd8672852278bdb",
                        "enabled": true,
                        "version": 1
                      }
                    ],
                    "disableTargets": false,
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Pacific Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Test Buyer Group",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 2
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/api/v1/{accountId}/lookup": {
      "get": {
        "tags": [
          "TCPA Shield"
        ],
        "summary": "Lookup Number",
        "operationId": "LookupNumber",
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "Phone number with country code that you want to look up",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 16195643321
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 30 Jun 2020 23:10:02 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "125"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=2592000"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LookupNumber-Numbernotblocked"
                },
                "example": {
                  "sid": "0ebacb14-0046-4f64-876a-e5e1c217f8e2",
                  "status": "success",
                  "message": "",
                  "code": null,
                  "offset": 1593558602221,
                  "results": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 30 Jun 2020 23:09:04 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=2592000"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              }
            },
            "content": {
              "text/plain; charset=utf-8": {
                "schema": {
                  "type": "string",
                  "example": "the given phone number (161962675433) is not formated correctly. Please use 1NNNNNNNNNN"
                },
                "example": "the given phone number (161962675433) is not formated correctly. Please use 1NNNNNNNNNN"
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/api/v1/{accountId}/lookupbulk": {
      "post": {
        "tags": [
          "TCPA Shield"
        ],
        "summary": "Lookup Numbers Bulk",
        "description": "The api endpoint allows you to test multiple numbers. The enpoint will return the numbers that are safe to call. Any number removed from the response list is a blocked number.",
        "operationId": "LookupNumbersBulk",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LookupNumbersBulkRequest"
              },
              "example": {
                "phones": [
                  "16196308544",
                  "15555558353",
                  "15555555555",
                  "15555552740",
                  "15555552741",
                  "15555552738",
                  "16196308541"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 30 Jun 2020 23:06:18 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=2592000"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "",
                  "example": [
                    "15555558353",
                    "15555555555",
                    "15555552740",
                    "15555552741",
                    "15555552738"
                  ]
                },
                "example": [
                  "15555558353",
                  "15555555555",
                  "15555552740",
                  "15555552741",
                  "15555552738"
                ]
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/WebHooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhooks",
        "description": "Get all webhooks associated with your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>",
        "operationId": "GetWebhooks",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 07 Apr 2021 15:15:24 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "633"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhooks"
                },
                "example": {
                  "transactionId": "TR4621d4ae-1e95-456f-b399-92382a4bc1c2",
                  "webHooks": [
                    {
                      "id": "WHa4dacc8b9c5640df808a5605402bfda2",
                      "webHookType": "conversion",
                      "qPathMaps": [
                        {
                          "incomingQueryStringName": "call_id",
                          "mapToTagType": "Conversion",
                          "mapToTagName": "callUUID"
                        },
                        {
                          "incomingQueryStringName": "call_revenue",
                          "mapToTagType": "Conversion",
                          "mapToTagName": "conversionAmount"
                        }
                      ],
                      "defaultValues": [],
                      "parameterTest": "sale_successful=yes",
                      "endPointUrl": "https://webhook.ringba.com/hook/WHa4dacc8b9c5640df808a5605402bfda2?call_id=[callUUID]&call_revenue=[conversionAmount]&sale_successful=yes",
                      "name": "New Webhook",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    },
                    {
                      "id": "WH52c673bd5c21402388fd347d1442ef3f",
                      "webHookType": "conversion",
                      "qPathMaps": [
                        {
                          "incomingQueryStringName": "example_id",
                          "mapToTagType": "Conversion",
                          "mapToTagName": "callUUID"
                        },
                        {
                          "incomingQueryStringName": "example_revenue",
                          "mapToTagType": "Conversion",
                          "mapToTagName": "conversionAmount"
                        }
                      ],
                      "defaultValues": [],
                      "parameterTest": "successful_sale=yes",
                      "endPointUrl": "https://webhook.ringba.com/hook/WH52c673bd5c21402388fd347d1442ef3f?example_id=[callUUID]&example_revenue=[conversionAmount]&successful_sale=yes",
                      "name": "Example Webhook",
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "enabled": true,
                      "version": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/WebHooks/{webHookId}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Details for a Single Webhook",
        "description": "Get details about a specific webhook.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n\n`webHookId` Find IDs of your webhooks using the \"GET Get Webhooks\" request above\n<br>",
        "operationId": "GetDetailsforaSingleWebhook",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webHookId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 07 Apr 2021 15:17:32 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "517"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetailsforaSingleWebhook"
                },
                "example": {
                  "transactionId": "TRafca69bf-9a3c-4c5c-be5e-f1297ae50a68",
                  "webHook": {
                    "id": "WHa4dacc8b9c5640df808a5605402bfda2",
                    "webHookType": "conversion",
                    "qPathMaps": [
                      {
                        "incomingQueryStringName": "call_id",
                        "mapToTagType": "Conversion",
                        "mapToTagName": "callUUID"
                      },
                      {
                        "incomingQueryStringName": "call_revenue",
                        "mapToTagType": "Conversion",
                        "mapToTagName": "conversionAmount"
                      }
                    ],
                    "defaultValues": [],
                    "parameterTest": "sale_successful=yes",
                    "endPointUrl": "https://webhook.ringba.com/hook/WHa4dacc8b9c5640df808a5605402bfda2?call_id=[callUUID]&call_revenue=[conversionAmount]&sale_successful=yes",
                    "name": "New Webhook",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete a Webhook",
        "description": "Remove a webhook from your account\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n\n`webHookId` Find IDs of your webhooks using the \"GET Get Webhooks\" request above\n<br>",
        "operationId": "DeleteaWebhook",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webHookId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 07 Apr 2021 15:18:45 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "194"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaWebhook"
                },
                "example": {
                  "transactionId": "TR013c6aaa-a58c-42ed-9ca2-47d52cbc7f72",
                  "isSuccessful": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    },
    "/{accountId}/WebHooks/CreateConversion": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create New Webhook",
        "description": "Create a new webhook for use with your account.\n\n### Path Variables\n<hr>\n<br>\n\n``accountId`` Find your [accountId](#get-your-account-information) <br>\n\n### Request Body\n<hr>\n<br>\n\n#### Required Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>This is the name that will be used to describe your webhook information on the report</td>\n</tr>\n<tr>\n<td><code>incomingCallIdQueryStringParameter</code></td>\n<td>This is the name of the variable that Ringba will collect the call Id from, we use the call Id to identify which call the requests refer to</td>\n</tr>\n<tr>\n<td><code>conversionAmountQueryStringParameter</code></td>\n<td>Name of the variable that Ringba will collect the revenue from</td>\n</tr>\n</table>\n\n#### Optional Parameters\n<table>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>conversionCriteriaParameterMatch</code></td>\n<td> If the optional string is set and the incoming request has it on the parameters then Ringba will set the call as converted and add revenue to the call.</td>\n</tr>\n</table>",
        "operationId": "CreateNewWebhook",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Find your [apiToken](#get-or-create-api-token)",
            "required": false,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Token {{apiToken}}"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewWebhookRequest"
              },
              "example": {
                "name": "New Webhook",
                "incomingCallIdQueryStringParameter": "call_id",
                "conversionAmountQueryStringParameter": "call_revenue",
                "conversionCriteriaParameterMatch": "sale_successful=yes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Wed, 07 Apr 2021 15:11:49 GMT"
                  }
                }
              },
              "Expires": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "-1"
                  }
                }
              },
              "Pragma": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-cache"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Microsoft-IIS/10.0"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "X-AspNet-Version": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "4.0.30319"
                  }
                }
              },
              "X-Powered-By": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "ASP.NET"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "520"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewWebhook"
                },
                "example": {
                  "transactionId": "TR67a40bcc-9be7-412f-a63c-7e65a1103454",
                  "webHookId": "WHa4dacc8b9c5640df808a5605402bfda2",
                  "webHook": {
                    "id": "WHa4dacc8b9c5640df808a5605402bfda2",
                    "webHookType": "conversion",
                    "qPathMaps": [
                      {
                        "incomingQueryStringName": "call_id",
                        "mapToTagType": "Conversion",
                        "mapToTagName": "callUUID"
                      },
                      {
                        "incomingQueryStringName": "call_revenue",
                        "mapToTagType": "Conversion",
                        "mapToTagName": "conversionAmount"
                      }
                    ],
                    "defaultValues": [],
                    "parameterTest": "sale_successful=yes",
                    "endPointUrl": "https://webhook.ringba.com/hook/WHa4dacc8b9c5640df808a5605402bfda2?call_id=[callUUID]&call_revenue=[conversionAmount]&sale_successful=yes",
                    "name": "New Webhook",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [],
        "servers": [
          {
            "url": "https://api.ringba.com/v2/",
            "variables": {}
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "GetUserAuthenticationBearerToken": {
        "title": "GetUserAuthenticationBearerToken",
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "refresh_token",
          "userName",
          ".issued",
          ".expires"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_token": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          ".issued": {
            "type": "string"
          },
          ".expires": {
            "type": "string"
          }
        },
        "example": {
          "access_token": "0VH31LtRMFtHowoXf2IpXgcEvZMKVcs8uIjGcM9As91mYDpWJAwMZCeeWo8fDKI-oIbVlWrEmGJwkNiDMvu6NSN2ibkOWKzOOdshY6mSvhgfSykciPegwkepTrhc8EjWDBOR1zM0Y9GffMXcSIxAQEZAyxIIxrc7e12ipGROlWQtTJ8Ync0e9WiGAFTSvX5YNewfJgvef4S_ObwWvsCIsHPeEoyVxoNHoBoZMyeZih0_Wyq9hp8aPXdjmNLaBPMDMtrXSZocIWMVbz4LSjk18tmjtDy4dHwgtkFzcqhomaeYqz2sS-xJLUdb7DfTRUZpbGRamG4in5jpcAWKwkWmgRIl9vNKH4wKQiR8CrlNgSgf4VCaR-NKuZqOJXrLxn6JJlBTqJLueOZBv3FK27ex7X1gvm3Q9eul_XA4vzawFPDlnO6Xi7RpqG0rnfvkYjgWYVaV4G-vYdSoi3Tm4CkCMcHscCJ0ythxx1QQER##########",
          "token_type": "bearer",
          "expires_in": 3599,
          "refresh_token": "tHt5ISkNZO_8apbiN1RdtTWHik7Uf5Rp6cVe0uX7auRPng0iFrMygs33L4HE8DEnWdMGxE6jNt10-hS8xEFjuerKJcU0qxSPVlaGCsifnE9z600TKOotN0UrM4-mzbzbydp18hsT2EYDgJ1MI0yAbbctcM8XTgxlnDhHaKnvLuA8ck7WUaPxqyyxtUvo9U-C4KunMHkIcZuNqx13wOBNbV2SQZ9Dgcw0ynPKHjoRemA9JCE3g0qhEDs-iQ3Rv9UE_lkXVzZp9_WzGTtfdU5a8V8mOfQhuE24Glw5LLRPa1oEUWMzdhKJMe5nqYF2gH_CDWR1fZwVXA1gjDrSKJqb8HnZPQPzYvegAxVNEpO-v_EHGV0c2g7Mx6zxdZJvy9huA5slJaJHef-rBwVI97MIrCgfFg1s9gnKEnC5kNpNs4NemAKP-B-tKMLYv12T4YT0K0lEZss76y-S4NdlT2QrtXKXSGqN3UYR0oj50c##########",
          "userName": "ringba.api.user@gmail.com",
          ".issued": "Mon, 01 Feb 2021 18:25:55 GMT",
          ".expires": "Mon, 01 Feb 2021 19:25:55 GMT"
        }
      },
      "GetAPITokenswithusage": {
        "title": "GetAPITokenswithusage",
        "required": [
          "transactionId",
          "apiTokens"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "apiTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiToken"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR4c37f7e0-674f-4370-9c88-278a624d9e25",
          "apiTokens": [
            {
              "usage": [
                {
                  "ipAddress": "68.6.132.162",
                  "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                  "loginTime": "2020-06-30T23:10:02.159+00:00"
                },
                {
                  "ipAddress": "68.6.132.162",
                  "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                  "loginTime": "2020-06-30T23:09:04.738+00:00"
                },
                {
                  "ipAddress": "68.6.132.162",
                  "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                  "loginTime": "2020-06-30T23:08:59.522+00:00"
                },
                {
                  "ipAddress": "68.6.132.162",
                  "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookupbulk",
                  "loginTime": "2020-06-30T23:06:18.717+00:00"
                },
                {
                  "ipAddress": "68.6.132.162",
                  "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                  "loginTime": "2020-06-30T23:06:04.15+00:00"
                },
                {
                  "ipAddress": "68.6.132.162",
                  "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                  "loginTime": "2020-06-30T23:05:54.129+00:00"
                },
                {
                  "ipAddress": "68.6.132.162",
                  "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
                  "loginTime": "2020-06-30T23:05:16.489+00:00"
                }
              ],
              "name": "Test",
              "userName": "gus@ringba.com",
              "creationTime": "2020-06-30T23:03:06.781+00:00",
              "tokenId": "API347036dbc137412195617416ab36cffa",
              "userId": "398924893-cb0f-409b-9148-d65f4f5695be"
            }
          ]
        }
      },
      "ApiToken": {
        "title": "ApiToken",
        "required": [
          "usage",
          "name",
          "userName",
          "creationTime",
          "tokenId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "usage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Usage"
            },
            "description": ""
          },
          "name": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "creationTime": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "example": {
          "usage": [
            {
              "ipAddress": "68.6.132.162",
              "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
              "loginTime": "2020-06-30T23:10:02.159+00:00"
            },
            {
              "ipAddress": "68.6.132.162",
              "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
              "loginTime": "2020-06-30T23:09:04.738+00:00"
            },
            {
              "ipAddress": "68.6.132.162",
              "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
              "loginTime": "2020-06-30T23:08:59.522+00:00"
            },
            {
              "ipAddress": "68.6.132.162",
              "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookupbulk",
              "loginTime": "2020-06-30T23:06:18.717+00:00"
            },
            {
              "ipAddress": "68.6.132.162",
              "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
              "loginTime": "2020-06-30T23:06:04.15+00:00"
            },
            {
              "ipAddress": "68.6.132.162",
              "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
              "loginTime": "2020-06-30T23:05:54.129+00:00"
            },
            {
              "ipAddress": "68.6.132.162",
              "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
              "loginTime": "2020-06-30T23:05:16.489+00:00"
            }
          ],
          "name": "Test",
          "userName": "gus@ringba.com",
          "creationTime": "2020-06-30T23:03:06.781+00:00",
          "tokenId": "API347036dbc137412195617416ab36cffa",
          "userId": "398924893-cb0f-409b-9148-d65f4f5695be"
        }
      },
      "Usage": {
        "title": "Usage",
        "required": [
          "ipAddress",
          "protectedResource",
          "loginTime"
        ],
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string"
          },
          "protectedResource": {
            "type": "string"
          },
          "loginTime": {
            "type": "string"
          }
        },
        "example": {
          "ipAddress": "68.6.132.162",
          "protectedResource": "/api/v1/RA608a55cf08d848b9ae4cac7402f1c019/lookup",
          "loginTime": "2020-06-30T23:10:02.159+00:00"
        }
      },
      "GetAPITokens": {
        "title": "GetAPITokens",
        "required": [
          "transactionId",
          "apiTokens"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "apiTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiToken1"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR59aa490e-719c-4d8f-a4a8-5bbcfc903a25",
          "apiTokens": [
            {
              "usage": [],
              "name": "Test",
              "userName": "gus@ringba.com",
              "creationTime": "2020-06-25T16:00:13.645+00:00",
              "tokenId": "API3c7ced56045443a8a66711683b663f51",
              "userId": "39893893-cb0f-409b-9148-d65f4f5695be"
            }
          ]
        }
      },
      "ApiToken1": {
        "title": "ApiToken1",
        "required": [
          "usage",
          "name",
          "userName",
          "creationTime",
          "tokenId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "usage": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "name": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "creationTime": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "example": {
          "usage": [],
          "name": "Test",
          "userName": "gus@ringba.com",
          "creationTime": "2020-06-25T16:00:13.645+00:00",
          "tokenId": "API3c7ced56045443a8a66711683b663f51",
          "userId": "39893893-cb0f-409b-9148-d65f4f5695be"
        }
      },
      "CreateApiTokenRequest": {
        "title": "CreateApiTokenRequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "Test"
        }
      },
      "DeleteApiToken": {
        "title": "DeleteApiToken",
        "required": [
          "transactionId",
          "deleteApiToken"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "deleteApiToken": {
            "type": "string"
          }
        },
        "example": {
          "transactionId": "TR6d6470e4-8b72-4ec5-9cee-45c0378a5ce2",
          "deleteApiToken": "API3c7ced56045443a8a66711683b663f51"
        }
      },
      "GetAccountInfo": {
        "title": "GetAccountInfo",
        "required": [
          "transactionId",
          "account"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRdb998cad-82fd-45b3-ae3e-9fdc9001bbd3",
          "account": [
            {
              "accountCreationEpoch": 1513899772617,
              "timeZoneId": "Eastern Standard Time",
              "accountAddress": {
                "streetAddress": "3344 Terrace Ave",
                "addressLine2": "",
                "city": "San Diego",
                "region": "California",
                "postalCode": "92113",
                "countryName": "United States",
                "countryCode": "US"
              },
              "id": "RA432a55cf08d848b9aertac7402f3r5y6",
              "name": "Ringba Testing Company",
              "accountId": "RA432a55cf08d848b9aertac7402f3r5y6",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "Account": {
        "title": "Account",
        "required": [
          "accountCreationEpoch",
          "timeZoneId",
          "accountAddress",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "accountCreationEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "timeZoneId": {
            "type": "string"
          },
          "accountAddress": {
            "$ref": "#/components/schemas/AccountAddress"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "accountCreationEpoch": 1513899772617,
          "timeZoneId": "Eastern Standard Time",
          "accountAddress": {
            "streetAddress": "3344 Terrace Ave",
            "addressLine2": "",
            "city": "San Diego",
            "region": "California",
            "postalCode": "92113",
            "countryName": "United States",
            "countryCode": "US"
          },
          "id": "RA432a55cf08d848b9aertac7402f3r5y6",
          "name": "Ringba Testing Company",
          "accountId": "RA432a55cf08d848b9aertac7402f3r5y6",
          "enabled": true,
          "version": 1
        }
      },
      "AccountAddress": {
        "title": "AccountAddress",
        "required": [
          "streetAddress",
          "addressLine2",
          "city",
          "region",
          "postalCode",
          "countryName",
          "countryCode"
        ],
        "type": "object",
        "properties": {
          "streetAddress": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        },
        "example": {
          "streetAddress": "3344 Terrace Ave",
          "addressLine2": "",
          "city": "San Diego",
          "region": "California",
          "postalCode": "92113",
          "countryName": "United States",
          "countryCode": "US"
        }
      },
      "GetAddresses": {
        "title": "GetAddresses",
        "required": [
          "transactionId",
          "addresses"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR1fed7965-3065-4c76-bcd2-f97916964446",
          "addresses": [
            {
              "id": "ADe86e712170c14d7caebe6f3afb130868",
              "customerName": "Paper Street Soap Co.",
              "streetAddress": "123 Paper St",
              "city": "Lander",
              "region": "Wyoming",
              "postalCode": "82520",
              "countryName": "United States",
              "countryCode": "US",
              "isDefault": false,
              "status": "incomplete",
              "name": "Tyler Durden",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "Address": {
        "title": "Address",
        "required": [
          "id",
          "customerName",
          "streetAddress",
          "city",
          "region",
          "postalCode",
          "countryName",
          "countryCode",
          "isDefault",
          "status",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "ADe86e712170c14d7caebe6f3afb130868",
          "customerName": "Paper Street Soap Co.",
          "streetAddress": "123 Paper St",
          "city": "Lander",
          "region": "Wyoming",
          "postalCode": "82520",
          "countryName": "United States",
          "countryCode": "US",
          "isDefault": false,
          "status": "incomplete",
          "name": "Tyler Durden",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetAddressbyID": {
        "title": "GetAddressbyID",
        "required": [
          "transactionId",
          "address"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "example": {
          "transactionId": "TR839d1ef2-7945-4549-9f00-b92d9f639ad4",
          "address": {
            "id": "AD3734b588e82b4757934d1cc456c2354f",
            "customerName": "some business",
            "streetAddress": "456 Example St",
            "city": "San Diego",
            "region": "California",
            "postalCode": "92115",
            "countryName": "United States",
            "countryCode": "US",
            "isDefault": false,
            "status": "incomplete",
            "name": "new name",
            "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
            "enabled": true,
            "version": 1
          }
        }
      },
      "GetAddressesbyCountry": {
        "title": "GetAddressesbyCountry",
        "required": [
          "addressRequirementFullfilledForLocalNumbers",
          "name",
          "countryCode",
          "hasTollFreeNumbers",
          "hasMobileNumbers",
          "hasLocalNumbers",
          "addressRequirementForLocalNumbers",
          "addressProofRequirementForLocalNumbers",
          "identityRequirementForLocalNumbers",
          "identityProofRequirementForLocalNumbers",
          "canSearchByZipCode",
          "canSearchByRegion",
          "canSearchByPrefix"
        ],
        "type": "object",
        "properties": {
          "addressRequirementFullfilledForTollFreeNumbers": {
            "type": "boolean"
          },
          "addressRequirementFullfilledForLocalNumbers": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "hasTollFreeNumbers": {
            "type": "boolean"
          },
          "hasMobileNumbers": {
            "type": "boolean"
          },
          "hasLocalNumbers": {
            "type": "boolean"
          },
          "addressRequirementForTollFreeNumbers": {
            "type": "string"
          },
          "addressRequirementForLocalNumbers": {
            "type": "string"
          },
          "addressProofRequirementForTollFreeNumbers": {
            "type": "boolean"
          },
          "addressProofRequirementForLocalNumbers": {
            "type": "boolean"
          },
          "identityRequirementForTollFreeNumbers": {
            "type": "string"
          },
          "identityRequirementForLocalNumbers": {
            "type": "string"
          },
          "identityProofRequirementForTollFreeNumbers": {
            "type": "boolean"
          },
          "identityProofRequirementForLocalNumbers": {
            "type": "boolean"
          },
          "canSearchByZipCode": {
            "type": "boolean"
          },
          "canSearchByRegion": {
            "type": "boolean"
          },
          "canSearchByPrefix": {
            "type": "boolean"
          }
        },
        "example": {
          "addressRequirementFullfilledForTollFreeNumbers": false,
          "addressRequirementFullfilledForLocalNumbers": false,
          "name": "Canada",
          "countryCode": "CA",
          "hasTollFreeNumbers": true,
          "hasMobileNumbers": false,
          "hasLocalNumbers": true,
          "addressRequirementForTollFreeNumbers": "none",
          "addressRequirementForLocalNumbers": "none",
          "addressProofRequirementForTollFreeNumbers": false,
          "addressProofRequirementForLocalNumbers": false,
          "identityRequirementForTollFreeNumbers": "none",
          "identityRequirementForLocalNumbers": "none",
          "identityProofRequirementForTollFreeNumbers": false,
          "identityProofRequirementForLocalNumbers": false,
          "canSearchByZipCode": false,
          "canSearchByRegion": true,
          "canSearchByPrefix": true
        }
      },
      "GetDetailsaboutaspecificcountry": {
        "title": "GetDetailsaboutaspecificcountry",
        "required": [
          "addressRequirementFullfilledForTollFreeNumbers",
          "addressRequirementFullfilledForLocalNumbers",
          "name",
          "countryCode",
          "hasTollFreeNumbers",
          "hasMobileNumbers",
          "hasLocalNumbers",
          "addressRequirementForTollFreeNumbers",
          "addressRequirementForLocalNumbers",
          "addressProofRequirementForTollFreeNumbers",
          "addressProofRequirementForLocalNumbers",
          "identityRequirementForTollFreeNumbers",
          "identityRequirementForLocalNumbers",
          "identityProofRequirementForTollFreeNumbers",
          "identityProofRequirementForLocalNumbers",
          "canSearchByZipCode",
          "canSearchByRegion",
          "canSearchByPrefix"
        ],
        "type": "object",
        "properties": {
          "addressRequirementFullfilledForTollFreeNumbers": {
            "type": "boolean"
          },
          "addressRequirementFullfilledForLocalNumbers": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "hasTollFreeNumbers": {
            "type": "boolean"
          },
          "hasMobileNumbers": {
            "type": "boolean"
          },
          "hasLocalNumbers": {
            "type": "boolean"
          },
          "addressRequirementForTollFreeNumbers": {
            "type": "string"
          },
          "addressRequirementForLocalNumbers": {
            "type": "string"
          },
          "addressProofRequirementForTollFreeNumbers": {
            "type": "boolean"
          },
          "addressProofRequirementForLocalNumbers": {
            "type": "boolean"
          },
          "identityRequirementForTollFreeNumbers": {
            "type": "string"
          },
          "identityRequirementForLocalNumbers": {
            "type": "string"
          },
          "identityProofRequirementForTollFreeNumbers": {
            "type": "boolean"
          },
          "identityProofRequirementForLocalNumbers": {
            "type": "boolean"
          },
          "canSearchByZipCode": {
            "type": "boolean"
          },
          "canSearchByRegion": {
            "type": "boolean"
          },
          "canSearchByPrefix": {
            "type": "boolean"
          }
        },
        "example": {
          "addressRequirementFullfilledForTollFreeNumbers": false,
          "addressRequirementFullfilledForLocalNumbers": false,
          "name": "United States",
          "countryCode": "US",
          "hasTollFreeNumbers": true,
          "hasMobileNumbers": false,
          "hasLocalNumbers": true,
          "addressRequirementForTollFreeNumbers": "none",
          "addressRequirementForLocalNumbers": "none",
          "addressProofRequirementForTollFreeNumbers": false,
          "addressProofRequirementForLocalNumbers": false,
          "identityRequirementForTollFreeNumbers": "none",
          "identityRequirementForLocalNumbers": "none",
          "identityProofRequirementForTollFreeNumbers": false,
          "identityProofRequirementForLocalNumbers": false,
          "canSearchByZipCode": true,
          "canSearchByRegion": true,
          "canSearchByPrefix": false
        }
      },
      "CreateNewAddressRequest": {
        "title": "CreateNewAddressRequest",
        "required": [
          "city",
          "countryCode",
          "countryName",
          "customerName",
          "name",
          "postalCode",
          "region",
          "streetAddress"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          }
        },
        "example": {
          "city": "Midlothian",
          "countryCode": "US",
          "countryName": "United States",
          "customerName": "Paper Street Soap Company",
          "name": "Test2",
          "postalCode": "23112",
          "region": "Virginia",
          "streetAddress": "456 Paper St"
        }
      },
      "CreateNewAddress": {
        "title": "CreateNewAddress",
        "required": [
          "transactionId",
          "addressId",
          "address"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "addressId": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "example": {
          "transactionId": "TR1af11695-2f80-47b8-aa74-d234e2c43d0e",
          "addressId": "ADb56e411dffb346dc95b816f755869fe7",
          "address": {
            "id": "ADb56e411dffb346dc95b816f755869fe7",
            "customerName": "Paper Street Soap Company",
            "streetAddress": "456 Paper St",
            "city": "Midlothian",
            "region": "Virginia",
            "postalCode": "23112",
            "countryName": "United States",
            "countryCode": "US",
            "isDefault": false,
            "status": "incomplete",
            "name": "Test2",
            "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
            "enabled": true,
            "version": 1
          }
        }
      },
      "SetDefaultAddress": {
        "title": "SetDefaultAddress",
        "required": [
          "transactionId",
          "isSuccessful",
          "address"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "example": {
          "transactionId": "TR88870abe-f3b9-4159-a5c3-23a30b6a8bc1",
          "isSuccessful": true,
          "address": {
            "id": "AD3734b588e82b4757934d1cc456c2354f",
            "customerName": "some business",
            "streetAddress": "456 Example St",
            "city": "San Diego",
            "region": "California",
            "postalCode": "92115",
            "countryName": "United States",
            "countryCode": "US",
            "isDefault": true,
            "status": "incomplete",
            "name": "new name",
            "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
            "enabled": true,
            "version": 1
          }
        }
      },
      "EditAddressRequest": {
        "title": "EditAddressRequest",
        "required": [
          "name",
          "customerName",
          "streetAddress",
          "city",
          "region",
          "postalCode",
          "countryName",
          "countryCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        },
        "example": {
          "name": "new name",
          "customerName": "some business",
          "streetAddress": "456 Example St",
          "city": "San Diego",
          "region": "California",
          "postalCode": "92115",
          "countryName": "United States",
          "countryCode": "US"
        }
      },
      "EditAddress": {
        "title": "EditAddress",
        "required": [
          "transactionId",
          "address"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "example": {
          "transactionId": "TR1e4ee0a7-7f12-41bb-bd2f-afc849f0b2dc",
          "address": {
            "id": "AD3734b588e82b4757934d1cc456c2354f",
            "customerName": "some business",
            "streetAddress": "456 Example St",
            "city": "San Diego",
            "region": "California",
            "postalCode": "92115",
            "countryName": "United States",
            "countryCode": "US",
            "isDefault": false,
            "status": "incomplete",
            "name": "new name",
            "accountId": "RA608a55cf08d848b9ae4cac7402f1c019",
            "enabled": true,
            "version": 1
          }
        }
      },
      "DeleteAddress": {
        "title": "DeleteAddress",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR27b6c6fc-2fb9-4711-a989-0e9a72dec2b4",
          "isSuccessful": true
        }
      },
      "GetBuyers": {
        "title": "GetBuyers",
        "required": [
          "transactionId",
          "buyers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "buyers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Buyer"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRd7df7edd-39f8-4c47-8bb9-f59e1d0e4334",
          "buyers": [
            {
              "email": "",
              "canPauseTargets": false,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": false,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "id": "BU0db0aea8954049468ed3d2893d0b00e9",
              "name": "Acme Call Buyers",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "email": "",
              "canPauseTargets": true,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": false,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "id": "BUec50e9c7fa294283ba10a35893b13198",
              "name": "Example Buyer Co.",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "email": "",
              "canPauseTargets": false,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": false,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "id": "BUaf8fb40966cc40cd83e3ac27d9fa5c9a",
              "name": "Call Buying Inc.",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "Buyer": {
        "title": "Buyer",
        "required": [
          "email",
          "canPauseTargets",
          "canSetConcurrencyCaps",
          "canDisputeConversions",
          "capacity",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "canPauseTargets": {
            "type": "boolean"
          },
          "canSetConcurrencyCaps": {
            "type": "boolean"
          },
          "canDisputeConversions": {
            "type": "boolean"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "email": "",
          "canPauseTargets": false,
          "canSetConcurrencyCaps": false,
          "canDisputeConversions": false,
          "capacity": {
            "timeZoneId": "UTC",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "id": "BU0db0aea8954049468ed3d2893d0b00e9",
          "name": "Acme Call Buyers",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Capacity": {
        "title": "Capacity",
        "required": [
          "timeZoneId",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap"
        ],
        "type": "object",
        "properties": {
          "timeZoneId": {
            "type": "string"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "timeZoneId": "UTC",
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1
        }
      },
      "AdjustRevenueandorPaymentforaCallwithrelativeadjustmentsRequest": {
        "title": "AdjustRevenueandorPaymentforaCallwithrelativeadjustmentsRequest",
        "required": [
          "inboundCallId",
          "reason",
          "adjustConversion",
          "adjustPayout",
          "adjustConverionByAmount",
          "adjustPayoutByAmount"
        ],
        "type": "object",
        "properties": {
          "inboundCallId": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "adjustConversion": {
            "type": "boolean"
          },
          "adjustPayout": {
            "type": "boolean"
          },
          "adjustConverionByAmount": {
            "type": "number"
          },
          "adjustPayoutByAmount": {
            "type": "number"
          }
        },
        "example": {
          "inboundCallId": "{{InboundCallId}}",
          "reason": "Call payments adjusted by acct. Admin.",
          "adjustConversion": true,
          "adjustPayout": true,
          "adjustConverionByAmount": -0.01,
          "adjustPayoutByAmount": 0.01
        }
      },
      "AdjustRevenueandPaymentforaCallwithrelativeadjustment": {
        "title": "AdjustRevenueandPaymentforaCallwithrelativeadjustment",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        },
        "example": {
          "transactionId": "TR8a4adf07-1b0e-48d7-a62b-ca95e5f47ec8",
          "result": {
            "payoutAmount": 0.11,
            "conversionAmount": 0.11
          }
        }
      },
      "Result": {
        "title": "Result",
        "required": [
          "payoutAmount",
          "conversionAmount"
        ],
        "type": "object",
        "properties": {
          "payoutAmount": {
            "type": "number"
          },
          "conversionAmount": {
            "type": "number"
          }
        },
        "example": {
          "payoutAmount": 0.11,
          "conversionAmount": 0.11
        }
      },
      "DecreaseRevenueandIncreasePaymentforaCallwithrelativeadjustment": {
        "title": "DecreaseRevenueandIncreasePaymentforaCallwithrelativeadjustment",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        },
        "example": {
          "transactionId": "TRf0a69cf7-43cb-437c-9ebe-b81bc3b07fb9",
          "result": {
            "payoutAmount": 0.12,
            "conversionAmount": 0.1
          }
        }
      },
      "AdjustRevenueOnlyforaCallwithrelativeadjustments": {
        "title": "AdjustRevenueOnlyforaCallwithrelativeadjustments",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result2"
          }
        },
        "example": {
          "transactionId": "TRdf679b51-87be-4888-970e-9c2c6ee9a7dc",
          "result": {
            "conversionAmount": 0.1
          }
        }
      },
      "Result2": {
        "title": "Result2",
        "required": [
          "conversionAmount"
        ],
        "type": "object",
        "properties": {
          "conversionAmount": {
            "type": "number"
          }
        },
        "example": {
          "conversionAmount": 0.1
        }
      },
      "AdjustPaymentOnlyforaCallwithrelativeadjustments": {
        "title": "AdjustPaymentOnlyforaCallwithrelativeadjustments",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result3"
          }
        },
        "example": {
          "transactionId": "TRf9258180-9b75-4225-ad2a-73b9a2b9b897",
          "result": {
            "payoutAmount": 0.14
          }
        }
      },
      "Result3": {
        "title": "Result3",
        "required": [
          "payoutAmount"
        ],
        "type": "object",
        "properties": {
          "payoutAmount": {
            "type": "number"
          }
        },
        "example": {
          "payoutAmount": 0.14
        }
      },
      "AdjustRevenueandorPaymentforaCallwithabsoluteadjustmentsRequest": {
        "title": "AdjustRevenueandorPaymentforaCallwithabsoluteadjustmentsRequest",
        "required": [
          "inboundCallId",
          "reason",
          "adjustConversion",
          "adjustPayout",
          "newConversionAmount",
          "newPayoutAmount"
        ],
        "type": "object",
        "properties": {
          "inboundCallId": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "adjustConversion": {
            "type": "boolean"
          },
          "adjustPayout": {
            "type": "boolean"
          },
          "newConversionAmount": {
            "type": "number"
          },
          "newPayoutAmount": {
            "type": "number"
          }
        },
        "example": {
          "inboundCallId": "{{InboundCallId}}",
          "reason": "Call payments adjusted by acct. Admin.",
          "adjustConversion": true,
          "adjustPayout": true,
          "newConversionAmount": 0.1,
          "newPayoutAmount": 0.1
        }
      },
      "AdjustRevenueandorPaymentforaCallwithabsoluteadjustments": {
        "title": "AdjustRevenueandorPaymentforaCallwithabsoluteadjustments",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        },
        "example": {
          "transactionId": "TRd498f207-fd42-4ef1-913d-e11775015a37",
          "result": {
            "payoutAmount": 0.1,
            "conversionAmount": 0.1
          }
        }
      },
      "VoidRevenueandorPaymentforaCallRequest": {
        "title": "VoidRevenueandorPaymentforaCallRequest",
        "required": [
          "inboundCallId",
          "voidReason",
          "voidConversion",
          "voidPayout",
          "voidConverionAmount",
          "voidPayoutAmount"
        ],
        "type": "object",
        "properties": {
          "inboundCallId": {
            "type": "string"
          },
          "voidReason": {
            "type": "string"
          },
          "voidConversion": {
            "type": "boolean"
          },
          "voidPayout": {
            "type": "boolean"
          },
          "voidConverionAmount": {
            "type": "number"
          },
          "voidPayoutAmount": {
            "type": "number"
          }
        },
        "example": {
          "inboundCallId": "{{InboundCallId}}",
          "voidReason": "Test call voiding",
          "voidConversion": true,
          "voidPayout": true,
          "voidConverionAmount": 0.03,
          "voidPayoutAmount": 0.06
        }
      },
      "VoidRevenueandPaymentforaCall": {
        "title": "VoidRevenueandPaymentforaCall",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        },
        "example": {
          "transactionId": "TR611821a0-3052-48af-b1c3-d352cb5e1cbb",
          "result": {
            "payoutAmount": 0.04,
            "conversionAmount": 0.07
          }
        }
      },
      "AddAnnotationtoaCallRequest": {
        "title": "AddAnnotationtoaCallRequest",
        "required": [
          "inboundCallId",
          "tags"
        ],
        "type": "object",
        "properties": {
          "inboundCallId": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": ""
          }
        },
        "example": {
          "inboundCallId": "{{InboundCallId}}",
          "tags": [
            {
              "tagType": "Annotations",
              "tagName": "Any Name",
              "tagValue": "Any Value"
            }
          ]
        }
      },
      "Tag": {
        "title": "Tag",
        "required": [
          "tagType",
          "tagName",
          "tagValue"
        ],
        "type": "object",
        "properties": {
          "tagType": {
            "type": "string"
          },
          "tagName": {
            "type": "string"
          },
          "tagValue": {
            "type": "string"
          }
        },
        "example": {
          "tagType": "Annotations",
          "tagName": "Any Name",
          "tagValue": "Any Value"
        }
      },
      "AddAnnotationtoaCall": {
        "title": "AddAnnotationtoaCall",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR3a816760-ca7d-4ec5-958f-c605608bbe56",
          "isSuccessful": true
        }
      },
      "BUYERRequestforPayoutAdjustmentwithrelativeadjustmentRequest": {
        "title": "BUYERRequestforPayoutAdjustmentwithrelativeadjustmentRequest",
        "required": [
          "inboundCallId",
          "reason",
          "amount"
        ],
        "type": "object",
        "properties": {
          "inboundCallId": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        },
        "example": {
          "inboundCallId": "{{InboundCallId}}",
          "reason": "Test call revenue adjustment request",
          "amount": 0.2
        }
      },
      "BUYERRequestforPayoutAdjustmentwithrelativeadjustment": {
        "title": "BUYERRequestforPayoutAdjustmentwithrelativeadjustment",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result6"
          }
        },
        "example": {
          "transactionId": "TRbc991b1b-a5fe-4375-a57f-311bf081eae2",
          "result": {
            "requestJobID": "JQI_v2-TgZ9W5Wd5as1PBPyNLXBrNPN-WkngQMoucaOW1hQJJpQay8vErGHg"
          }
        }
      },
      "Result6": {
        "title": "Result6",
        "required": [
          "requestJobID"
        ],
        "type": "object",
        "properties": {
          "requestJobID": {
            "type": "string"
          }
        },
        "example": {
          "requestJobID": "JQI_v2-TgZ9W5Wd5as1PBPyNLXBrNPN-WkngQMoucaOW1hQJJpQay8vErGHg"
        }
      },
      "BUYERRequestforPayoutAdjustmentwithabsoluteadjustmentRequest": {
        "title": "BUYERRequestforPayoutAdjustmentwithabsoluteadjustmentRequest",
        "required": [
          "inboundCallId",
          "reason",
          "amount"
        ],
        "type": "object",
        "properties": {
          "inboundCallId": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        },
        "example": {
          "inboundCallId": "{{InboundCallId}}",
          "reason": "Test call revenue adjustment request",
          "amount": 0.4
        }
      },
      "BUYERRequestforPayoutAdjustmentwithabsoluteadjustment": {
        "title": "BUYERRequestforPayoutAdjustmentwithabsoluteadjustment",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result6"
          }
        },
        "example": {
          "transactionId": "TR52b02b55-30b1-49c9-a747-9972d6e588f8",
          "result": {
            "requestJobID": "JQI_v2-TgZ9W5Wd5as1PBPyNLXBrNPN-WkngQMoucaOW1hQJJpQay8vErGHg"
          }
        }
      },
      "GetColumnNames": {
        "title": "GetColumnNames",
        "required": [
          "isSuccessful",
          "transactionId",
          "columns"
        ],
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Column"
            },
            "description": ""
          }
        },
        "example": {
          "isSuccessful": true,
          "transactionId": "TReb919019-66ad-4cc2-accd-f03126d55b45",
          "columns": [
            {
              "id": "campaignName",
              "title": "Campaign",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "publisherName",
              "title": "Publisher",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "targetName",
              "title": "Target",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "targetNumber",
              "title": "Target Number",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "buyer",
              "title": "Buyer",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "targetGroupName",
              "title": "Target Group",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "campaignId",
              "title": "Campaign ID",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "publisherId",
              "title": "Publisher ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "publisherSubId",
              "title": "Publisher Sub ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "targetId",
              "title": "Target ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "targetSubId",
              "title": "Target Sub ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "buyerId",
              "title": "Buyer ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "targetBuyerSubId",
              "title": "Buyer Sub ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "inboundCallId",
              "title": "Inbound Call ID",
              "roles": [
                "admin",
                "user",
                "affiliate",
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "callDt",
              "title": "Call Date",
              "roles": [
                "admin",
                "user",
                "affiliate",
                "buyer"
              ],
              "type": "date",
              "isTag": false,
              "groupName": "Call",
              "supportsFilter": false,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "targetGroupId",
              "title": "Target Group ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "inboundPhoneNumber",
              "title": "Caller ID",
              "roles": [
                "admin",
                "user",
                "affiliate",
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "number",
              "title": "Number",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "numberId",
              "title": "Number ID",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "isFromNumberPool",
              "title": "Number Pool Used",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Impression",
              "filterGroupName": "Impression",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "numberPoolId",
              "title": "Number Pool ID",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Impression",
              "filterGroupName": "Impression",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "numberPoolName",
              "title": "Number Pool",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Impression",
              "filterGroupName": "Impression",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "timeToCallInSeconds",
              "title": "Time To Call",
              "roles": [
                "admin",
                "user",
                "affiliate",
                "buyer"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Time",
              "filterGroupName": "Time",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "callCompletedDt",
              "title": "Call Complete Timestamp",
              "roles": [
                "admin",
                "user"
              ],
              "type": "date",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": false,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "callConnectionDt",
              "title": "Call Connected Timestamp",
              "roles": [
                "admin",
                "user"
              ],
              "type": "date",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": false,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "callLengthInSeconds",
              "title": "Call Length",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Time",
              "filterGroupName": "Time",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "connectedCallLengthInSeconds",
              "title": "Connected Call Length",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Time",
              "filterGroupName": "Time",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "endCallSource",
              "title": "End Call Source",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "noPayoutReason",
              "title": "No Payout Reason",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "noConversionReason",
              "title": "No Conversion Reason",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "blockReason",
              "title": "Block Reason",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "incompleteCallReason",
              "title": "Incomplete Call Reason",
              "roles": [
                "admin",
                "user"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "hasConnected",
              "title": "Connected",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "offlineConversionUploaded",
              "title": "Offline Conversion Uploaded",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "hasPayout",
              "title": "Paid Out",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "wasConversionAdjusted",
              "title": "Conversion Adjusted",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Adjustment",
              "filterGroupName": "Adjustment",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "conversionAdjustedCalls",
              "title": "Conversion-Adjusted",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "Adjustment",
              "filterGroupName": "Adjustment",
              "supportsFilter": false,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "wasPayoutAdjusted",
              "title": "Payout Adjusted",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Adjustment",
              "filterGroupName": "Adjustment",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "hasAnnotations",
              "title": "Has Annotations",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Adjustment",
              "filterGroupName": "Adjustment",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "isDuplicate",
              "title": "Is Duplicate",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "hasPreviouslyConnected",
              "title": "Previously Connected",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "isIncomplete",
              "title": "Incomplete",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "hasRecording",
              "title": "Has Recording",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "hasConverted",
              "title": "Converted",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "isLive",
              "title": "Is Live",
              "roles": [
                "admin",
                "user",
                "affiliate",
                "buyer"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "wasBlocked",
              "title": "Blocked",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "tcpaCount",
              "title": "TCPA Shield Count",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "TCPAShield",
              "filterGroupName": "TCPAShield",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "wasBlockedByTCPA",
              "title": "TCPA Shield Blocked",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "TCPAShield",
              "filterGroupName": "TCPAShield",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "dataEnrichmentCount",
              "title": "ICP Count",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "ICP",
              "filterGroupName": "ICP",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "ivrDepth",
              "title": "IVR Depth",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "IVR",
              "filterGroupName": "IVR",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "convAdjustmentsRejectedCount",
              "title": "Rejected Adjustments",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "Adjustment",
              "filterGroupName": "Adjustment",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "convAdjustmentRequestCount",
              "title": "Requested Adjustments",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "Adjustment",
              "filterGroupName": "Adjustment",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "convAdjustmentsApproved",
              "title": "Approved Adjustments",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "Adjustment",
              "filterGroupName": "Adjustment",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "convAdjustmentsApprovedAmount",
              "title": "Approved Adjustment",
              "roles": [
                "admin",
                "user"
              ],
              "type": "double",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "conversionAmount",
              "title": "Revenue",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "profitNet",
              "title": "Profit Net Telco",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "profitGross",
              "title": "Profit",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "payoutAmount",
              "title": "Payout",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "hasVoiceMail",
              "title": "Voicemail",
              "roles": [
                "admin",
                "user"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "totalCost",
              "title": "Total Cost",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "telcoCost",
              "title": "Telco Cost",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "icpCost",
              "title": "ICP Cost",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "ICP",
              "filterGroupName": "ICP",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "tcpaCost",
              "title": "TCPA Shield Cost",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "TCPAShield",
              "filterGroupName": "TCPAShield",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "recordingUrl",
              "title": "Recording URL",
              "roles": [
                "admin",
                "user",
                "affiliate",
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerTargetName",
              "title": "Target",
              "roles": [
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerTargetNumber",
              "title": "Target Number",
              "roles": [
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerTargetId",
              "title": "Target ID",
              "roles": [
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerTargetSubId",
              "title": "Target Sub ID",
              "roles": [
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Popular",
              "filterGroupName": "Name/ID",
              "supportsFilter": true,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerCallLengthInSeconds",
              "title": "Duration",
              "roles": [
                "buyer"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Time",
              "filterGroupName": "Time",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerConversionAmount",
              "title": "Payout",
              "roles": [
                "buyer"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerTimeToConnectInSeconds",
              "title": "Time To Connect",
              "roles": [
                "buyer"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Time",
              "filterGroupName": "Time",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerHasConnected",
              "title": "Connected",
              "roles": [
                "buyer"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Call",
              "filterGroupName": "Call",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerHasConverted",
              "title": "Paid out",
              "roles": [
                "buyer"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "Performance",
              "filterGroupName": "Performance",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "buyerConversionAdjustmentStatus",
              "title": "Conversion Adjustment Status",
              "roles": [
                "buyer"
              ],
              "type": "keyword",
              "isTag": false,
              "groupName": "Call",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "pingSuccessCount",
              "title": "Ping Successes",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "Ping Tree",
              "filterGroupName": "Ping Tree",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "pingFailCount",
              "title": "Ping Failures",
              "roles": [
                "admin",
                "user"
              ],
              "type": "long",
              "isTag": false,
              "groupName": "Ping Tree",
              "filterGroupName": "Ping Tree",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "pingTotalBidAmount",
              "title": "Ping Tree Bid Amount",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Ping Tree",
              "filterGroupName": "Ping Tree",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "pingDynamicCallLengthInSeconds",
              "title": "Dynamic Duration",
              "roles": [
                "admin",
                "user"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Ping Tree",
              "filterGroupName": "Ping Tree",
              "supportsFilter": false,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "winningBid",
              "title": "Winning Bid",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "RTB",
              "filterGroupName": "RTB",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "winningBidCallAccepted",
              "title": "Winning Bid - Call Accepted",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "RTB",
              "filterGroupName": "RTB",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "winningBidCallRejected",
              "title": "Winning Bid - Call Rejected",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "boolean",
              "isTag": false,
              "groupName": "RTB",
              "filterGroupName": "RTB",
              "supportsFilter": true,
              "supportsSorting": true,
              "isComputed": false
            },
            {
              "id": "timeToConnectInSeconds",
              "title": "Time To Connect",
              "roles": [
                "admin",
                "user",
                "affiliate"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Time",
              "filterGroupName": "Time",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": true
            },
            {
              "id": "buyerConnectedCallLengthInSeconds",
              "title": "Connected Call Length",
              "roles": [
                "buyer"
              ],
              "type": "timespan",
              "isTag": false,
              "groupName": "Time",
              "filterGroupName": "Time",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": false
            },
            {
              "id": "avgPingTreeBidAmount",
              "title": "Avg. Ping Tree Bid Amount",
              "roles": [
                "admin",
                "user"
              ],
              "type": "money",
              "isTag": false,
              "groupName": "Ping Tree",
              "filterGroupName": "Ping Tree",
              "supportsFilter": false,
              "supportsSorting": false,
              "isComputed": true
            }
          ]
        }
      },
      "Column": {
        "title": "Column",
        "required": [
          "id",
          "title",
          "roles",
          "type",
          "isTag",
          "groupName",
          "supportsFilter",
          "supportsSorting",
          "isComputed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "type": {
            "type": "string"
          },
          "isTag": {
            "type": "boolean"
          },
          "groupName": {
            "type": "string"
          },
          "filterGroupName": {
            "type": "string"
          },
          "supportsFilter": {
            "type": "boolean"
          },
          "supportsSorting": {
            "type": "boolean"
          },
          "isComputed": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "campaignName",
          "title": "Campaign",
          "roles": [
            "admin",
            "user",
            "affiliate"
          ],
          "type": "keyword",
          "isTag": false,
          "groupName": "Popular",
          "filterGroupName": "Name/ID",
          "supportsFilter": true,
          "supportsSorting": true,
          "isComputed": false
        }
      },
      "GetTagNamesforTypeInboundNumbers": {
        "title": "GetTagNamesforTypeInboundNumbers",
        "required": [
          "transactionId",
          "values"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR2c6b0135-df39-4b6b-813d-2825650fe94a",
          "values": [
            "AreaCode",
            "CountryCode",
            "CountryDigits",
            "IsPhoneNumberValid",
            "Number",
            "Number-NoPlus",
            "NumberE164",
            "Prefix",
            "Region",
            "State",
            "Suffix"
          ]
        }
      },
      "GetAllTagTypes": {
        "title": "GetAllTagTypes",
        "required": [
          "transactionId",
          "values"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR3aa157f3-fa9f-439e-87c5-f5dbed11db3c",
          "values": [
            "InboundNumber",
            "Date",
            "Time",
            "Publisher",
            "Campaign",
            "CallLength",
            "DialedNumber",
            "CallInfo",
            "Annotations"
          ]
        }
      },
      "GetTagNamesforTypeCallInfo": {
        "title": "GetTagNamesforTypeCallInfo",
        "required": [
          "transactionId",
          "values"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR46fa904c-f708-40d8-bdff-f7e0b1260154",
          "values": [
            "IsDuplicate",
            "BlockedReason"
          ]
        }
      },
      "GetTagNameforTypeTime": {
        "title": "GetTagNameforTypeTime",
        "required": [
          "transactionId",
          "values"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR75b1e560-0b04-45cc-982e-e8ed11b9a27d",
          "values": [
            "Hour",
            "Minute",
            "Second",
            "UTCHour",
            "UTCMinute",
            "UTCOffset",
            "UTCSecond"
          ]
        }
      },
      "GetCallLogRequest": {
        "title": "GetCallLogRequest",
        "required": [
          "reportEnd",
          "reportStart"
        ],
        "type": "object",
        "properties": {
          "reportEnd": {
            "type": "string"
          },
          "reportStart": {
            "type": "string"
          }
        },
        "example": {
          "reportEnd": "2021-02-04T07:59:59Z",
          "reportStart": "2021-02-01T08:00:00Z"
        }
      },
      "GetCallLogWithFilters": {
        "title": "GetCallLogWithFilters",
        "required": [
          "isSuccessful",
          "transactionId",
          "report"
        ],
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "report": {
            "$ref": "#/components/schemas/Report"
          }
        },
        "example": {
          "isSuccessful": true,
          "transactionId": "TR44a98169-3226-42bc-9ca0-bb2b3a055059",
          "report": {
            "partialResult": false,
            "records": [
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2cd7lW_KVB95pJnSeRSRBMHuL_MOzcMTn5A8qL5_Hc178aRgTZhj-JA",
                "callDt": 1612368427115,
                "inboundPhoneNumber": "+17813364178",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612368438741,
                "callConnectionDt": 1612368429090,
                "callLengthInSeconds": 11,
                "connectedCallLengthInSeconds": 9,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=y9MzL4Piohc0PA6gvEzyfhSlFSkTP%2fHJ%2bNC%2bNCf6fBCBZNm7wxigrtck1p6%2bfD84WOvvjfU95PfXAccJLcuGmiet2Au4MliudDK0yw0aNTpOb5jjqa9hKlTD3z0cLQbcWuGtcoBvH37qH3tuSN4P9%2b%2f4pMSjfBKuvgDbJf9d%2f7M9ah9YORsV%2fgX6nLx4dic3ci9EGmn8w1Jh6upQ%2fOFsIsbf1qNSwy9LukHjOnRTmz4Nwms11oUZ9YAHFiVjQRE%2fPJz9ffBBoO841bApMvATxNBeh9k%3d",
                "timeToConnectInSeconds": 2
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2147G0eMkK4nw_BU3SAcXiDHM4reCssygiNWj_2dEJ78LxV4pFrCWWw",
                "callDt": 1612219032605,
                "inboundPhoneNumber": "+17745459961",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612219037364,
                "callConnectionDt": 1612219034636,
                "callLengthInSeconds": 4,
                "connectedCallLengthInSeconds": 2,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
                "timeToConnectInSeconds": 2
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2YHKrf7eZPPPJ06nrZS4cdrhZWLN1OVXpcQkH9zG6qHKFQqzjiWc0Gw",
                "callDt": 1612218085439,
                "inboundPhoneNumber": "+16192488427",
                "number": "+18334013665",
                "numberId": "CLAOGNEH",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612218091303,
                "callConnectionDt": 1612218087256,
                "callLengthInSeconds": 5,
                "connectedCallLengthInSeconds": 4,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
                "timeToConnectInSeconds": 1
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
                "callDt": 1612219718965,
                "inboundPhoneNumber": "+16613804706",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612219731658,
                "callConnectionDt": 1612219720840,
                "callLengthInSeconds": 12,
                "connectedCallLengthInSeconds": 10,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasAnnotations": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                "timeToConnectInSeconds": 2
              }
            ],
            "totalCount": 4
          }
        }
      },
      "Report": {
        "title": "Report",
        "required": [
          "partialResult",
          "records",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "partialResult": {
            "type": "boolean"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Record"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "partialResult": false,
          "records": [
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v2cd7lW_KVB95pJnSeRSRBMHuL_MOzcMTn5A8qL5_Hc178aRgTZhj-JA",
              "callDt": 1612368427115,
              "inboundPhoneNumber": "+17813364178",
              "number": "+18884143472",
              "numberId": "PV18884143472",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612368438741,
              "callConnectionDt": 1612368429090,
              "callLengthInSeconds": 11,
              "connectedCallLengthInSeconds": 9,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=y9MzL4Piohc0PA6gvEzyfhSlFSkTP%2fHJ%2bNC%2bNCf6fBCBZNm7wxigrtck1p6%2bfD84WOvvjfU95PfXAccJLcuGmiet2Au4MliudDK0yw0aNTpOb5jjqa9hKlTD3z0cLQbcWuGtcoBvH37qH3tuSN4P9%2b%2f4pMSjfBKuvgDbJf9d%2f7M9ah9YORsV%2fgX6nLx4dic3ci9EGmn8w1Jh6upQ%2fOFsIsbf1qNSwy9LukHjOnRTmz4Nwms11oUZ9YAHFiVjQRE%2fPJz9ffBBoO841bApMvATxNBeh9k%3d",
              "timeToConnectInSeconds": 2
            },
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v2147G0eMkK4nw_BU3SAcXiDHM4reCssygiNWj_2dEJ78LxV4pFrCWWw",
              "callDt": 1612219032605,
              "inboundPhoneNumber": "+17745459961",
              "number": "+18884143472",
              "numberId": "PV18884143472",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612219037364,
              "callConnectionDt": 1612219034636,
              "callLengthInSeconds": 4,
              "connectedCallLengthInSeconds": 2,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
              "timeToConnectInSeconds": 2
            },
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v2YHKrf7eZPPPJ06nrZS4cdrhZWLN1OVXpcQkH9zG6qHKFQqzjiWc0Gw",
              "callDt": 1612218085439,
              "inboundPhoneNumber": "+16192488427",
              "number": "+18334013665",
              "numberId": "CLAOGNEH",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612218091303,
              "callConnectionDt": 1612218087256,
              "callLengthInSeconds": 5,
              "connectedCallLengthInSeconds": 4,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
              "timeToConnectInSeconds": 1
            },
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
              "callDt": 1612219718965,
              "inboundPhoneNumber": "+16613804706",
              "number": "+18884143472",
              "numberId": "PV18884143472",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612219731658,
              "callConnectionDt": 1612219720840,
              "callLengthInSeconds": 12,
              "connectedCallLengthInSeconds": 10,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasAnnotations": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
              "timeToConnectInSeconds": 2
            }
          ],
          "totalCount": 4
        }
      },
      "Record": {
        "title": "Record",
        "required": [
          "campaignName",
          "publisherName",
          "targetName",
          "targetNumber",
          "campaignId",
          "publisherId",
          "publisherSubId",
          "targetId",
          "inboundCallId",
          "callDt",
          "inboundPhoneNumber",
          "number",
          "numberId",
          "isFromNumberPool",
          "numberPoolId",
          "numberPoolName",
          "timeToCallInSeconds",
          "callCompletedDt",
          "callConnectionDt",
          "callLengthInSeconds",
          "connectedCallLengthInSeconds",
          "endCallSource",
          "hasConnected",
          "hasPayout",
          "hasPreviouslyConnected",
          "hasRecording",
          "hasConverted",
          "isLive",
          "conversionAmount",
          "profitNet",
          "profitGross",
          "payoutAmount",
          "totalCost",
          "telcoCost",
          "recordingUrl",
          "timeToConnectInSeconds"
        ],
        "type": "object",
        "properties": {
          "campaignName": {
            "type": "string"
          },
          "publisherName": {
            "type": "string"
          },
          "targetName": {
            "type": "string"
          },
          "targetNumber": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "publisherId": {
            "type": "string"
          },
          "publisherSubId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "inboundCallId": {
            "type": "string"
          },
          "callDt": {
            "type": "integer",
            "format": "int64"
          },
          "inboundPhoneNumber": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "isFromNumberPool": {
            "type": "boolean"
          },
          "numberPoolId": {
            "type": "string"
          },
          "numberPoolName": {
            "type": "string"
          },
          "timeToCallInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "callCompletedDt": {
            "type": "integer",
            "format": "int64"
          },
          "callConnectionDt": {
            "type": "integer",
            "format": "int64"
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "connectedCallLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "endCallSource": {
            "type": "string"
          },
          "hasConnected": {
            "type": "boolean"
          },
          "hasPayout": {
            "type": "boolean"
          },
          "hasPreviouslyConnected": {
            "type": "boolean"
          },
          "hasRecording": {
            "type": "boolean"
          },
          "hasConverted": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "conversionAmount": {
            "type": "integer",
            "format": "int32"
          },
          "profitNet": {
            "type": "number"
          },
          "profitGross": {
            "type": "integer",
            "format": "int32"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCost": {
            "type": "number"
          },
          "telcoCost": {
            "type": "number"
          },
          "recordingUrl": {
            "type": "string"
          },
          "timeToConnectInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "hasAnnotations": {
            "type": "boolean"
          }
        },
        "example": {
          "campaignName": "API Test",
          "publisherName": "You",
          "targetName": "Ringba Test Target",
          "targetNumber": "+16317918378",
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
          "publisherSubId": "",
          "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
          "inboundCallId": "v2cd7lW_KVB95pJnSeRSRBMHuL_MOzcMTn5A8qL5_Hc178aRgTZhj-JA",
          "callDt": 1612368427115,
          "inboundPhoneNumber": "+17813364178",
          "number": "+18884143472",
          "numberId": "PV18884143472",
          "isFromNumberPool": false,
          "numberPoolId": "",
          "numberPoolName": "",
          "timeToCallInSeconds": 0,
          "callCompletedDt": 1612368438741,
          "callConnectionDt": 1612368429090,
          "callLengthInSeconds": 11,
          "connectedCallLengthInSeconds": 9,
          "endCallSource": "Caller",
          "hasConnected": true,
          "hasPayout": true,
          "hasPreviouslyConnected": false,
          "hasRecording": true,
          "hasConverted": true,
          "isLive": false,
          "conversionAmount": 0,
          "profitNet": -0.04,
          "profitGross": 0,
          "payoutAmount": 0,
          "totalCost": 0.04,
          "telcoCost": 0.04,
          "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=y9MzL4Piohc0PA6gvEzyfhSlFSkTP%2fHJ%2bNC%2bNCf6fBCBZNm7wxigrtck1p6%2bfD84WOvvjfU95PfXAccJLcuGmiet2Au4MliudDK0yw0aNTpOb5jjqa9hKlTD3z0cLQbcWuGtcoBvH37qH3tuSN4P9%2b%2f4pMSjfBKuvgDbJf9d%2f7M9ah9YORsV%2fgX6nLx4dic3ci9EGmn8w1Jh6upQ%2fOFsIsbf1qNSwy9LukHjOnRTmz4Nwms11oUZ9YAHFiVjQRE%2fPJz9ffBBoO841bApMvATxNBeh9k%3d",
          "timeToConnectInSeconds": 2
        }
      },
      "GetCallLogSorted": {
        "title": "GetCallLogSorted",
        "required": [
          "isSuccessful",
          "transactionId",
          "report"
        ],
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "report": {
            "$ref": "#/components/schemas/Report"
          }
        },
        "example": {
          "isSuccessful": true,
          "transactionId": "TR89d880f8-f00a-4d22-be2d-c01b9cd570ef",
          "report": {
            "partialResult": false,
            "records": [
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2cd7lW_KVB95pJnSeRSRBMHuL_MOzcMTn5A8qL5_Hc178aRgTZhj-JA",
                "callDt": 1612368427115,
                "inboundPhoneNumber": "+17813364178",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "callCompletedDt": 1612368438741,
                "callConnectionDt": 1612368429090,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasRecording": true,
                "isLive": false,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=y9MzL4Piohc0PA6gvEzyfhSlFSkTP%2fHJ%2bNC%2bNCf6fBCBZNm7wxigrtck1p6%2bfD84WOvvjfU95PfXAccJLcuGmiet2Au4MliudDK0yw0aNTpOb5jjqa9hKlTD3z0cLQbcWuGtcoBvH37qH3tuSN4P9%2b%2f4pMSjfBKuvgDbJf9d%2f7M9ah9YORsV%2fgX6nLx4dic3ci9EGmn8w1Jh6upQ%2fOFsIsbf1qNSwy9LukHjOnRTmz4Nwms11oUZ9YAHFiVjQRE%2fPJz9ffBBoO841bApMvATxNBeh9k%3d",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callLengthInSeconds": 11,
                "connectedCallLengthInSeconds": 9,
                "timeToConnectInSeconds": 2,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasConverted": true,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
                "callDt": 1612219718965,
                "inboundPhoneNumber": "+16613804706",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "callCompletedDt": 1612219731658,
                "callConnectionDt": 1612219720840,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasRecording": true,
                "isLive": false,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callLengthInSeconds": 12,
                "connectedCallLengthInSeconds": 10,
                "timeToConnectInSeconds": 2,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasConverted": true,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "hasAnnotations": true
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2147G0eMkK4nw_BU3SAcXiDHM4reCssygiNWj_2dEJ78LxV4pFrCWWw",
                "callDt": 1612219032605,
                "inboundPhoneNumber": "+17745459961",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "callCompletedDt": 1612219037364,
                "callConnectionDt": 1612219034636,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasRecording": true,
                "isLive": false,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callLengthInSeconds": 4,
                "connectedCallLengthInSeconds": 2,
                "timeToConnectInSeconds": 2,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasConverted": true,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2YHKrf7eZPPPJ06nrZS4cdrhZWLN1OVXpcQkH9zG6qHKFQqzjiWc0Gw",
                "callDt": 1612218085439,
                "inboundPhoneNumber": "+16192488427",
                "number": "+18334013665",
                "numberId": "CLAOGNEH",
                "callCompletedDt": 1612218091303,
                "callConnectionDt": 1612218087256,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasRecording": true,
                "isLive": false,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callLengthInSeconds": 5,
                "connectedCallLengthInSeconds": 4,
                "timeToConnectInSeconds": 1,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasConverted": true,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04
              }
            ],
            "totalCount": 4
          }
        }
      },
      "GetCallLog": {
        "title": "GetCallLog",
        "required": [
          "isSuccessful",
          "transactionId",
          "report"
        ],
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "report": {
            "$ref": "#/components/schemas/Report2"
          }
        },
        "example": {
          "isSuccessful": true,
          "transactionId": "TR87811b95-8ae3-4871-abdd-204117e1c0c1",
          "report": {
            "partialResult": false,
            "records": [
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
                "callDt": 1612219718965,
                "inboundPhoneNumber": "+16613804706",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612219731658,
                "callConnectionDt": 1612219720840,
                "callLengthInSeconds": 12,
                "connectedCallLengthInSeconds": 10,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                "timeToConnectInSeconds": 2
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2147G0eMkK4nw_BU3SAcXiDHM4reCssygiNWj_2dEJ78LxV4pFrCWWw",
                "callDt": 1612219032605,
                "inboundPhoneNumber": "+17745459961",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612219037364,
                "callConnectionDt": 1612219034636,
                "callLengthInSeconds": 4,
                "connectedCallLengthInSeconds": 2,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
                "timeToConnectInSeconds": 2
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2YHKrf7eZPPPJ06nrZS4cdrhZWLN1OVXpcQkH9zG6qHKFQqzjiWc0Gw",
                "callDt": 1612218085439,
                "inboundPhoneNumber": "+16192488427",
                "number": "+18334013665",
                "numberId": "CLAOGNEH",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612218091303,
                "callConnectionDt": 1612218087256,
                "callLengthInSeconds": 5,
                "connectedCallLengthInSeconds": 4,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
                "timeToConnectInSeconds": 1
              }
            ],
            "totalCount": 3
          }
        }
      },
      "Report2": {
        "title": "Report2",
        "required": [
          "partialResult",
          "records",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "partialResult": {
            "type": "boolean"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Record2"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "partialResult": false,
          "records": [
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
              "callDt": 1612219718965,
              "inboundPhoneNumber": "+16613804706",
              "number": "+18884143472",
              "numberId": "PV18884143472",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612219731658,
              "callConnectionDt": 1612219720840,
              "callLengthInSeconds": 12,
              "connectedCallLengthInSeconds": 10,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
              "timeToConnectInSeconds": 2
            },
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v2147G0eMkK4nw_BU3SAcXiDHM4reCssygiNWj_2dEJ78LxV4pFrCWWw",
              "callDt": 1612219032605,
              "inboundPhoneNumber": "+17745459961",
              "number": "+18884143472",
              "numberId": "PV18884143472",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612219037364,
              "callConnectionDt": 1612219034636,
              "callLengthInSeconds": 4,
              "connectedCallLengthInSeconds": 2,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
              "timeToConnectInSeconds": 2
            },
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v2YHKrf7eZPPPJ06nrZS4cdrhZWLN1OVXpcQkH9zG6qHKFQqzjiWc0Gw",
              "callDt": 1612218085439,
              "inboundPhoneNumber": "+16192488427",
              "number": "+18334013665",
              "numberId": "CLAOGNEH",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612218091303,
              "callConnectionDt": 1612218087256,
              "callLengthInSeconds": 5,
              "connectedCallLengthInSeconds": 4,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
              "timeToConnectInSeconds": 1
            }
          ],
          "totalCount": 3
        }
      },
      "Record2": {
        "title": "Record2",
        "required": [
          "campaignName",
          "publisherName",
          "targetName",
          "targetNumber",
          "campaignId",
          "publisherId",
          "publisherSubId",
          "targetId",
          "inboundCallId",
          "callDt",
          "inboundPhoneNumber",
          "number",
          "numberId",
          "isFromNumberPool",
          "numberPoolId",
          "numberPoolName",
          "timeToCallInSeconds",
          "callCompletedDt",
          "callConnectionDt",
          "callLengthInSeconds",
          "connectedCallLengthInSeconds",
          "endCallSource",
          "hasConnected",
          "hasPayout",
          "hasPreviouslyConnected",
          "hasRecording",
          "hasConverted",
          "isLive",
          "conversionAmount",
          "profitNet",
          "profitGross",
          "payoutAmount",
          "totalCost",
          "telcoCost",
          "recordingUrl",
          "timeToConnectInSeconds"
        ],
        "type": "object",
        "properties": {
          "campaignName": {
            "type": "string"
          },
          "publisherName": {
            "type": "string"
          },
          "targetName": {
            "type": "string"
          },
          "targetNumber": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "publisherId": {
            "type": "string"
          },
          "publisherSubId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "inboundCallId": {
            "type": "string"
          },
          "callDt": {
            "type": "integer",
            "format": "int64"
          },
          "inboundPhoneNumber": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "isFromNumberPool": {
            "type": "boolean"
          },
          "numberPoolId": {
            "type": "string"
          },
          "numberPoolName": {
            "type": "string"
          },
          "timeToCallInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "callCompletedDt": {
            "type": "integer",
            "format": "int64"
          },
          "callConnectionDt": {
            "type": "integer",
            "format": "int64"
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "connectedCallLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "endCallSource": {
            "type": "string"
          },
          "hasConnected": {
            "type": "boolean"
          },
          "hasPayout": {
            "type": "boolean"
          },
          "hasPreviouslyConnected": {
            "type": "boolean"
          },
          "hasRecording": {
            "type": "boolean"
          },
          "hasConverted": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "conversionAmount": {
            "type": "integer",
            "format": "int32"
          },
          "profitNet": {
            "type": "number"
          },
          "profitGross": {
            "type": "integer",
            "format": "int32"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCost": {
            "type": "number"
          },
          "telcoCost": {
            "type": "number"
          },
          "recordingUrl": {
            "type": "string"
          },
          "timeToConnectInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "campaignName": "API Test",
          "publisherName": "You",
          "targetName": "Ringba Test Target",
          "targetNumber": "+16317918378",
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
          "publisherSubId": "",
          "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
          "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
          "callDt": 1612219718965,
          "inboundPhoneNumber": "+16613804706",
          "number": "+18884143472",
          "numberId": "PV18884143472",
          "isFromNumberPool": false,
          "numberPoolId": "",
          "numberPoolName": "",
          "timeToCallInSeconds": 0,
          "callCompletedDt": 1612219731658,
          "callConnectionDt": 1612219720840,
          "callLengthInSeconds": 12,
          "connectedCallLengthInSeconds": 10,
          "endCallSource": "Caller",
          "hasConnected": true,
          "hasPayout": true,
          "hasPreviouslyConnected": false,
          "hasRecording": true,
          "hasConverted": true,
          "isLive": false,
          "conversionAmount": 0,
          "profitNet": -0.04,
          "profitGross": 0,
          "payoutAmount": 0,
          "totalCost": 0.04,
          "telcoCost": 0.04,
          "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
          "timeToConnectInSeconds": 2
        }
      },
      "GetCallLogWithSpecifiedColumns": {
        "title": "GetCallLogWithSpecifiedColumns",
        "required": [
          "isSuccessful",
          "transactionId",
          "report"
        ],
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "report": {
            "$ref": "#/components/schemas/Report3"
          }
        },
        "example": {
          "isSuccessful": true,
          "transactionId": "TR8ec058f0-7640-4a59-a680-8e31460a7edb",
          "report": {
            "partialResult": false,
            "records": [
              {
                "campaignName": "API Test",
                "inboundPhoneNumber": "+17745459961",
                "hasConnected": true
              },
              {
                "campaignName": "API Test",
                "inboundPhoneNumber": "+16192488427",
                "hasConnected": true
              },
              {
                "campaignName": "API Test",
                "inboundPhoneNumber": "+16613804706",
                "hasConnected": true
              },
              {
                "campaignName": "API Test",
                "inboundPhoneNumber": "+17813364178",
                "hasConnected": true
              }
            ],
            "totalCount": 4
          }
        }
      },
      "Report3": {
        "title": "Report3",
        "required": [
          "partialResult",
          "records",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "partialResult": {
            "type": "boolean"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Record3"
            },
            "description": ""
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "partialResult": false,
          "records": [
            {
              "campaignName": "API Test",
              "inboundPhoneNumber": "+17745459961",
              "hasConnected": true
            },
            {
              "campaignName": "API Test",
              "inboundPhoneNumber": "+16192488427",
              "hasConnected": true
            },
            {
              "campaignName": "API Test",
              "inboundPhoneNumber": "+16613804706",
              "hasConnected": true
            },
            {
              "campaignName": "API Test",
              "inboundPhoneNumber": "+17813364178",
              "hasConnected": true
            }
          ],
          "totalCount": 4
        }
      },
      "Record3": {
        "title": "Record3",
        "required": [
          "campaignName",
          "inboundPhoneNumber",
          "hasConnected"
        ],
        "type": "object",
        "properties": {
          "campaignName": {
            "type": "string"
          },
          "inboundPhoneNumber": {
            "type": "string"
          },
          "hasConnected": {
            "type": "boolean"
          }
        },
        "example": {
          "campaignName": "API Test",
          "inboundPhoneNumber": "+17745459961",
          "hasConnected": true
        }
      },
      "GetDetailsAboutSpecificCallsRequest": {
        "title": "GetDetailsAboutSpecificCallsRequest",
        "required": [
          "InboundCallIds"
        ],
        "type": "object",
        "properties": {
          "InboundCallIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "InboundCallIds": [
            "{{InboundCallId}}",
            "{{InboundCallId2}}",
            "{{InboundCallId3}}"
          ]
        }
      },
      "GetDetailsAboutSingleCall": {
        "title": "GetDetailsAboutSingleCall",
        "required": [
          "isSuccessful",
          "transactionId",
          "report"
        ],
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "report": {
            "$ref": "#/components/schemas/Report4"
          }
        },
        "example": {
          "isSuccessful": true,
          "transactionId": "TRb5d57064-4012-48d8-9803-f3647729fb2e",
          "report": {
            "records": [
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
                "callDt": 1612219718965,
                "inboundPhoneNumber": "+16613804706",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612219731658,
                "callConnectionDt": 1612219720840,
                "callLengthInSeconds": 12,
                "connectedCallLengthInSeconds": 10,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                "timeToConnectInSeconds": 2,
                "events": [
                  {
                    "name": "CallPlanDetail",
                    "ineligibleTargets": "",
                    "eligibleOrderedTargets": "Ringba Test Target[1,1]",
                    "dtStamp": "2021-02-01T22:48:38.9811491Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "totalAmount": 0.04,
                    "targetNumber": "+16317918378",
                    "name": "TargetDialed",
                    "dtStamp": "2021-02-01T22:48:38.9967945Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "timeToConnect": 1,
                    "callConnectionDt": 1612219720840,
                    "targetNumber": "+16317918378",
                    "name": "ConnectedCall",
                    "dtStamp": "2021-02-01T22:48:40.8405533Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "callLengthInSeconds": 12,
                    "callCompletedDt": 1612219731658,
                    "totalAmount": 0.04,
                    "recordingUrl": "",
                    "name": "CompletedCall",
                    "dtStamp": "2021-02-01T22:48:51.6589290Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "conversionAmount": 0,
                    "payoutAmount": 0,
                    "targetNumber": "+16317918378",
                    "name": "ConvertedCall",
                    "dtStamp": "2021-02-01T22:48:51.6745531Z",
                    "targetSubId": ""
                  },
                  {
                    "name": "PayoutCall",
                    "dtStamp": "2021-02-01T22:48:51.6901622Z",
                    "payoutAmount": 0
                  },
                  {
                    "name": "EndCallSource",
                    "source": "Caller",
                    "dtStamp": "2021-02-01T22:48:51.6901622Z"
                  },
                  {
                    "targetBuyer": "",
                    "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                    "name": "CallRecordingMigrated",
                    "targetBuyerId": "",
                    "dtStamp": "2021-02-01T22:48:52.7140912Z"
                  }
                ],
                "message-tags": [
                  {
                    "name": "testingtags",
                    "source": "Impression",
                    "type": "DialedNumber",
                    "value": "12345",
                    "value-num": 12345
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "DialedNumber",
                    "value": "+18884143472",
                    "value-num": 18884143472
                  },
                  {
                    "name": "UTCHour",
                    "source": "Call",
                    "type": "Time",
                    "value": "22",
                    "value-num": 22
                  },
                  {
                    "name": "UTCMinute",
                    "source": "Call",
                    "type": "Time",
                    "value": "48",
                    "value-num": 48
                  },
                  {
                    "name": "UTCSecond",
                    "source": "Call",
                    "type": "Time",
                    "value": "38",
                    "value-num": 38
                  },
                  {
                    "name": "UTCOffset",
                    "source": "Call",
                    "type": "Time",
                    "value": "-8",
                    "value-num": -8
                  },
                  {
                    "name": "Hour",
                    "source": "Call",
                    "type": "Time",
                    "value": "14",
                    "value-num": 14
                  },
                  {
                    "name": "Minute",
                    "source": "Call",
                    "type": "Time",
                    "value": "48",
                    "value-num": 48
                  },
                  {
                    "name": "Second",
                    "source": "Call",
                    "type": "Time",
                    "value": "38",
                    "value-num": 38
                  },
                  {
                    "name": "UTCWeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "UTCDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "UTCMonth",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "UTCYear",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "WeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "Day",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "Month",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "Year",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "TimeZone",
                    "source": "Call",
                    "type": "Date",
                    "value": "Pacific Standard Time"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "API Test"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "CA74c0b7f1f3824246b73e72a9238b4bfc"
                  },
                  {
                    "name": "TrackingId",
                    "source": "Call",
                    "type": "Campaign",
                    "value": ""
                  },
                  {
                    "name": "Company",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "AFbd21c4a3274c4382aa98919d5149baf3"
                  },
                  {
                    "name": "SubId",
                    "source": "Call",
                    "type": "Publisher",
                    "value": ""
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+16613804706",
                    "value-num": 16613804706
                  },
                  {
                    "name": "Number-NoPlus",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "16613804706",
                    "value-num": 16613804706
                  },
                  {
                    "name": "CountryCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "US"
                  },
                  {
                    "name": "CountryDigits",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "AreaCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "661",
                    "value-num": 661
                  },
                  {
                    "name": "Prefix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "380",
                    "value-num": 380
                  },
                  {
                    "name": "Suffix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "4706",
                    "value-num": 4706
                  },
                  {
                    "name": "Region",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "California"
                  },
                  {
                    "name": "State",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "CA"
                  },
                  {
                    "name": "IsPhoneNumberValid",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "yes"
                  },
                  {
                    "name": "NumberE164",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+16613804706",
                    "value-num": 16613804706
                  },
                  {
                    "name": "Total",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "12",
                    "value-num": 12
                  },
                  {
                    "name": "FromConnect",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "10",
                    "value-num": 10
                  },
                  {
                    "name": "FromDial",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "11",
                    "value-num": 11
                  }
                ]
              }
            ]
          }
        }
      },
      "Report4": {
        "title": "Report4",
        "required": [
          "records"
        ],
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Record4"
            },
            "description": ""
          }
        },
        "example": {
          "records": [
            {
              "campaignName": "API Test",
              "publisherName": "You",
              "targetName": "Ringba Test Target",
              "targetNumber": "+16317918378",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "publisherSubId": "",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
              "callDt": 1612219718965,
              "inboundPhoneNumber": "+16613804706",
              "number": "+18884143472",
              "numberId": "PV18884143472",
              "isFromNumberPool": false,
              "numberPoolId": "",
              "numberPoolName": "",
              "timeToCallInSeconds": 0,
              "callCompletedDt": 1612219731658,
              "callConnectionDt": 1612219720840,
              "callLengthInSeconds": 12,
              "connectedCallLengthInSeconds": 10,
              "endCallSource": "Caller",
              "hasConnected": true,
              "hasPayout": true,
              "hasPreviouslyConnected": false,
              "hasRecording": true,
              "hasConverted": true,
              "isLive": false,
              "conversionAmount": 0,
              "profitNet": -0.04,
              "profitGross": 0,
              "payoutAmount": 0,
              "totalCost": 0.04,
              "telcoCost": 0.04,
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
              "timeToConnectInSeconds": 2,
              "events": [
                {
                  "name": "CallPlanDetail",
                  "ineligibleTargets": "",
                  "eligibleOrderedTargets": "Ringba Test Target[1,1]",
                  "dtStamp": "2021-02-01T22:48:38.9811491Z"
                },
                {
                  "targetBuyerSubId": "",
                  "targetName": "Ringba Test Target",
                  "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetBuyer": "",
                  "targetBuyerId": "",
                  "totalAmount": 0.04,
                  "targetNumber": "+16317918378",
                  "name": "TargetDialed",
                  "dtStamp": "2021-02-01T22:48:38.9967945Z",
                  "targetSubId": ""
                },
                {
                  "targetBuyerSubId": "",
                  "targetName": "Ringba Test Target",
                  "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetBuyer": "",
                  "targetBuyerId": "",
                  "timeToConnect": 1,
                  "callConnectionDt": 1612219720840,
                  "targetNumber": "+16317918378",
                  "name": "ConnectedCall",
                  "dtStamp": "2021-02-01T22:48:40.8405533Z",
                  "targetSubId": ""
                },
                {
                  "targetBuyerSubId": "",
                  "targetBuyer": "",
                  "targetBuyerId": "",
                  "callLengthInSeconds": 12,
                  "callCompletedDt": 1612219731658,
                  "totalAmount": 0.04,
                  "recordingUrl": "",
                  "name": "CompletedCall",
                  "dtStamp": "2021-02-01T22:48:51.6589290Z"
                },
                {
                  "targetBuyerSubId": "",
                  "targetName": "Ringba Test Target",
                  "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetBuyer": "",
                  "targetBuyerId": "",
                  "conversionAmount": 0,
                  "payoutAmount": 0,
                  "targetNumber": "+16317918378",
                  "name": "ConvertedCall",
                  "dtStamp": "2021-02-01T22:48:51.6745531Z",
                  "targetSubId": ""
                },
                {
                  "name": "PayoutCall",
                  "dtStamp": "2021-02-01T22:48:51.6901622Z",
                  "payoutAmount": 0
                },
                {
                  "name": "EndCallSource",
                  "source": "Caller",
                  "dtStamp": "2021-02-01T22:48:51.6901622Z"
                },
                {
                  "targetBuyer": "",
                  "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                  "name": "CallRecordingMigrated",
                  "targetBuyerId": "",
                  "dtStamp": "2021-02-01T22:48:52.7140912Z"
                }
              ],
              "message-tags": [
                {
                  "name": "testingtags",
                  "source": "Impression",
                  "type": "DialedNumber",
                  "value": "12345",
                  "value-num": 12345
                },
                {
                  "name": "Number",
                  "source": "Call",
                  "type": "DialedNumber",
                  "value": "+18884143472",
                  "value-num": 18884143472
                },
                {
                  "name": "UTCHour",
                  "source": "Call",
                  "type": "Time",
                  "value": "22",
                  "value-num": 22
                },
                {
                  "name": "UTCMinute",
                  "source": "Call",
                  "type": "Time",
                  "value": "48",
                  "value-num": 48
                },
                {
                  "name": "UTCSecond",
                  "source": "Call",
                  "type": "Time",
                  "value": "38",
                  "value-num": 38
                },
                {
                  "name": "UTCOffset",
                  "source": "Call",
                  "type": "Time",
                  "value": "-8",
                  "value-num": -8
                },
                {
                  "name": "Hour",
                  "source": "Call",
                  "type": "Time",
                  "value": "14",
                  "value-num": 14
                },
                {
                  "name": "Minute",
                  "source": "Call",
                  "type": "Time",
                  "value": "48",
                  "value-num": 48
                },
                {
                  "name": "Second",
                  "source": "Call",
                  "type": "Time",
                  "value": "38",
                  "value-num": 38
                },
                {
                  "name": "UTCWeekDay",
                  "source": "Call",
                  "type": "Date",
                  "value": "Monday"
                },
                {
                  "name": "UTCDay",
                  "source": "Call",
                  "type": "Date",
                  "value": "1",
                  "value-num": 1
                },
                {
                  "name": "UTCMonth",
                  "source": "Call",
                  "type": "Date",
                  "value": "2",
                  "value-num": 2
                },
                {
                  "name": "UTCYear",
                  "source": "Call",
                  "type": "Date",
                  "value": "2021",
                  "value-num": 2021
                },
                {
                  "name": "WeekDay",
                  "source": "Call",
                  "type": "Date",
                  "value": "Monday"
                },
                {
                  "name": "Day",
                  "source": "Call",
                  "type": "Date",
                  "value": "1",
                  "value-num": 1
                },
                {
                  "name": "Month",
                  "source": "Call",
                  "type": "Date",
                  "value": "2",
                  "value-num": 2
                },
                {
                  "name": "Year",
                  "source": "Call",
                  "type": "Date",
                  "value": "2021",
                  "value-num": 2021
                },
                {
                  "name": "TimeZone",
                  "source": "Call",
                  "type": "Date",
                  "value": "Pacific Standard Time"
                },
                {
                  "name": "Name",
                  "source": "Call",
                  "type": "Campaign",
                  "value": "API Test"
                },
                {
                  "name": "Id",
                  "source": "Call",
                  "type": "Campaign",
                  "value": "CA74c0b7f1f3824246b73e72a9238b4bfc"
                },
                {
                  "name": "TrackingId",
                  "source": "Call",
                  "type": "Campaign",
                  "value": ""
                },
                {
                  "name": "Company",
                  "source": "Call",
                  "type": "Publisher",
                  "value": "You"
                },
                {
                  "name": "Name",
                  "source": "Call",
                  "type": "Publisher",
                  "value": "You"
                },
                {
                  "name": "Id",
                  "source": "Call",
                  "type": "Publisher",
                  "value": "AFbd21c4a3274c4382aa98919d5149baf3"
                },
                {
                  "name": "SubId",
                  "source": "Call",
                  "type": "Publisher",
                  "value": ""
                },
                {
                  "name": "Number",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "+16613804706",
                  "value-num": 16613804706
                },
                {
                  "name": "Number-NoPlus",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "16613804706",
                  "value-num": 16613804706
                },
                {
                  "name": "CountryCode",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "US"
                },
                {
                  "name": "CountryDigits",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "1",
                  "value-num": 1
                },
                {
                  "name": "AreaCode",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "661",
                  "value-num": 661
                },
                {
                  "name": "Prefix",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "380",
                  "value-num": 380
                },
                {
                  "name": "Suffix",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "4706",
                  "value-num": 4706
                },
                {
                  "name": "Region",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "California"
                },
                {
                  "name": "State",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "CA"
                },
                {
                  "name": "IsPhoneNumberValid",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "yes"
                },
                {
                  "name": "NumberE164",
                  "source": "Call",
                  "type": "InboundNumber",
                  "value": "+16613804706",
                  "value-num": 16613804706
                },
                {
                  "name": "Total",
                  "source": "Call",
                  "type": "CallLength",
                  "value": "12",
                  "value-num": 12
                },
                {
                  "name": "FromConnect",
                  "source": "Call",
                  "type": "CallLength",
                  "value": "10",
                  "value-num": 10
                },
                {
                  "name": "FromDial",
                  "source": "Call",
                  "type": "CallLength",
                  "value": "11",
                  "value-num": 11
                }
              ]
            }
          ]
        }
      },
      "Record4": {
        "title": "Record4",
        "required": [
          "campaignName",
          "publisherName",
          "targetName",
          "targetNumber",
          "campaignId",
          "publisherId",
          "publisherSubId",
          "targetId",
          "inboundCallId",
          "callDt",
          "inboundPhoneNumber",
          "number",
          "numberId",
          "isFromNumberPool",
          "numberPoolId",
          "numberPoolName",
          "timeToCallInSeconds",
          "callCompletedDt",
          "callConnectionDt",
          "callLengthInSeconds",
          "connectedCallLengthInSeconds",
          "endCallSource",
          "hasConnected",
          "hasPayout",
          "hasPreviouslyConnected",
          "hasRecording",
          "hasConverted",
          "isLive",
          "conversionAmount",
          "profitNet",
          "profitGross",
          "payoutAmount",
          "totalCost",
          "telcoCost",
          "recordingUrl",
          "timeToConnectInSeconds",
          "events",
          "message-tags"
        ],
        "type": "object",
        "properties": {
          "campaignName": {
            "type": "string"
          },
          "publisherName": {
            "type": "string"
          },
          "targetName": {
            "type": "string"
          },
          "targetNumber": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "publisherId": {
            "type": "string"
          },
          "publisherSubId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "inboundCallId": {
            "type": "string"
          },
          "callDt": {
            "type": "integer",
            "format": "int64"
          },
          "inboundPhoneNumber": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "isFromNumberPool": {
            "type": "boolean"
          },
          "numberPoolId": {
            "type": "string"
          },
          "numberPoolName": {
            "type": "string"
          },
          "timeToCallInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "callCompletedDt": {
            "type": "integer",
            "format": "int64"
          },
          "callConnectionDt": {
            "type": "integer",
            "format": "int64"
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "connectedCallLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "endCallSource": {
            "type": "string"
          },
          "hasConnected": {
            "type": "boolean"
          },
          "hasPayout": {
            "type": "boolean"
          },
          "hasPreviouslyConnected": {
            "type": "boolean"
          },
          "hasRecording": {
            "type": "boolean"
          },
          "hasConverted": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "conversionAmount": {
            "type": "integer",
            "format": "int32"
          },
          "profitNet": {
            "type": "number"
          },
          "profitGross": {
            "type": "integer",
            "format": "int32"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCost": {
            "type": "number"
          },
          "telcoCost": {
            "type": "number"
          },
          "recordingUrl": {
            "type": "string"
          },
          "timeToConnectInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": ""
          },
          "message-tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageTag"
            },
            "description": ""
          }
        },
        "example": {
          "campaignName": "API Test",
          "publisherName": "You",
          "targetName": "Ringba Test Target",
          "targetNumber": "+16317918378",
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
          "publisherSubId": "",
          "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
          "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
          "callDt": 1612219718965,
          "inboundPhoneNumber": "+16613804706",
          "number": "+18884143472",
          "numberId": "PV18884143472",
          "isFromNumberPool": false,
          "numberPoolId": "",
          "numberPoolName": "",
          "timeToCallInSeconds": 0,
          "callCompletedDt": 1612219731658,
          "callConnectionDt": 1612219720840,
          "callLengthInSeconds": 12,
          "connectedCallLengthInSeconds": 10,
          "endCallSource": "Caller",
          "hasConnected": true,
          "hasPayout": true,
          "hasPreviouslyConnected": false,
          "hasRecording": true,
          "hasConverted": true,
          "isLive": false,
          "conversionAmount": 0,
          "profitNet": -0.04,
          "profitGross": 0,
          "payoutAmount": 0,
          "totalCost": 0.04,
          "telcoCost": 0.04,
          "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
          "timeToConnectInSeconds": 2,
          "events": [
            {
              "name": "CallPlanDetail",
              "ineligibleTargets": "",
              "eligibleOrderedTargets": "Ringba Test Target[1,1]",
              "dtStamp": "2021-02-01T22:48:38.9811491Z"
            },
            {
              "targetBuyerSubId": "",
              "targetName": "Ringba Test Target",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "targetBuyer": "",
              "targetBuyerId": "",
              "totalAmount": 0.04,
              "targetNumber": "+16317918378",
              "name": "TargetDialed",
              "dtStamp": "2021-02-01T22:48:38.9967945Z",
              "targetSubId": ""
            },
            {
              "targetBuyerSubId": "",
              "targetName": "Ringba Test Target",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "targetBuyer": "",
              "targetBuyerId": "",
              "timeToConnect": 1,
              "callConnectionDt": 1612219720840,
              "targetNumber": "+16317918378",
              "name": "ConnectedCall",
              "dtStamp": "2021-02-01T22:48:40.8405533Z",
              "targetSubId": ""
            },
            {
              "targetBuyerSubId": "",
              "targetBuyer": "",
              "targetBuyerId": "",
              "callLengthInSeconds": 12,
              "callCompletedDt": 1612219731658,
              "totalAmount": 0.04,
              "recordingUrl": "",
              "name": "CompletedCall",
              "dtStamp": "2021-02-01T22:48:51.6589290Z"
            },
            {
              "targetBuyerSubId": "",
              "targetName": "Ringba Test Target",
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "targetBuyer": "",
              "targetBuyerId": "",
              "conversionAmount": 0,
              "payoutAmount": 0,
              "targetNumber": "+16317918378",
              "name": "ConvertedCall",
              "dtStamp": "2021-02-01T22:48:51.6745531Z",
              "targetSubId": ""
            },
            {
              "name": "PayoutCall",
              "dtStamp": "2021-02-01T22:48:51.6901622Z",
              "payoutAmount": 0
            },
            {
              "name": "EndCallSource",
              "source": "Caller",
              "dtStamp": "2021-02-01T22:48:51.6901622Z"
            },
            {
              "targetBuyer": "",
              "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
              "name": "CallRecordingMigrated",
              "targetBuyerId": "",
              "dtStamp": "2021-02-01T22:48:52.7140912Z"
            }
          ],
          "message-tags": [
            {
              "name": "testingtags",
              "source": "Impression",
              "type": "DialedNumber",
              "value": "12345",
              "value-num": 12345
            },
            {
              "name": "Number",
              "source": "Call",
              "type": "DialedNumber",
              "value": "+18884143472",
              "value-num": 18884143472
            },
            {
              "name": "UTCHour",
              "source": "Call",
              "type": "Time",
              "value": "22",
              "value-num": 22
            },
            {
              "name": "UTCMinute",
              "source": "Call",
              "type": "Time",
              "value": "48",
              "value-num": 48
            },
            {
              "name": "UTCSecond",
              "source": "Call",
              "type": "Time",
              "value": "38",
              "value-num": 38
            },
            {
              "name": "UTCOffset",
              "source": "Call",
              "type": "Time",
              "value": "-8",
              "value-num": -8
            },
            {
              "name": "Hour",
              "source": "Call",
              "type": "Time",
              "value": "14",
              "value-num": 14
            },
            {
              "name": "Minute",
              "source": "Call",
              "type": "Time",
              "value": "48",
              "value-num": 48
            },
            {
              "name": "Second",
              "source": "Call",
              "type": "Time",
              "value": "38",
              "value-num": 38
            },
            {
              "name": "UTCWeekDay",
              "source": "Call",
              "type": "Date",
              "value": "Monday"
            },
            {
              "name": "UTCDay",
              "source": "Call",
              "type": "Date",
              "value": "1",
              "value-num": 1
            },
            {
              "name": "UTCMonth",
              "source": "Call",
              "type": "Date",
              "value": "2",
              "value-num": 2
            },
            {
              "name": "UTCYear",
              "source": "Call",
              "type": "Date",
              "value": "2021",
              "value-num": 2021
            },
            {
              "name": "WeekDay",
              "source": "Call",
              "type": "Date",
              "value": "Monday"
            },
            {
              "name": "Day",
              "source": "Call",
              "type": "Date",
              "value": "1",
              "value-num": 1
            },
            {
              "name": "Month",
              "source": "Call",
              "type": "Date",
              "value": "2",
              "value-num": 2
            },
            {
              "name": "Year",
              "source": "Call",
              "type": "Date",
              "value": "2021",
              "value-num": 2021
            },
            {
              "name": "TimeZone",
              "source": "Call",
              "type": "Date",
              "value": "Pacific Standard Time"
            },
            {
              "name": "Name",
              "source": "Call",
              "type": "Campaign",
              "value": "API Test"
            },
            {
              "name": "Id",
              "source": "Call",
              "type": "Campaign",
              "value": "CA74c0b7f1f3824246b73e72a9238b4bfc"
            },
            {
              "name": "TrackingId",
              "source": "Call",
              "type": "Campaign",
              "value": ""
            },
            {
              "name": "Company",
              "source": "Call",
              "type": "Publisher",
              "value": "You"
            },
            {
              "name": "Name",
              "source": "Call",
              "type": "Publisher",
              "value": "You"
            },
            {
              "name": "Id",
              "source": "Call",
              "type": "Publisher",
              "value": "AFbd21c4a3274c4382aa98919d5149baf3"
            },
            {
              "name": "SubId",
              "source": "Call",
              "type": "Publisher",
              "value": ""
            },
            {
              "name": "Number",
              "source": "Call",
              "type": "InboundNumber",
              "value": "+16613804706",
              "value-num": 16613804706
            },
            {
              "name": "Number-NoPlus",
              "source": "Call",
              "type": "InboundNumber",
              "value": "16613804706",
              "value-num": 16613804706
            },
            {
              "name": "CountryCode",
              "source": "Call",
              "type": "InboundNumber",
              "value": "US"
            },
            {
              "name": "CountryDigits",
              "source": "Call",
              "type": "InboundNumber",
              "value": "1",
              "value-num": 1
            },
            {
              "name": "AreaCode",
              "source": "Call",
              "type": "InboundNumber",
              "value": "661",
              "value-num": 661
            },
            {
              "name": "Prefix",
              "source": "Call",
              "type": "InboundNumber",
              "value": "380",
              "value-num": 380
            },
            {
              "name": "Suffix",
              "source": "Call",
              "type": "InboundNumber",
              "value": "4706",
              "value-num": 4706
            },
            {
              "name": "Region",
              "source": "Call",
              "type": "InboundNumber",
              "value": "California"
            },
            {
              "name": "State",
              "source": "Call",
              "type": "InboundNumber",
              "value": "CA"
            },
            {
              "name": "IsPhoneNumberValid",
              "source": "Call",
              "type": "InboundNumber",
              "value": "yes"
            },
            {
              "name": "NumberE164",
              "source": "Call",
              "type": "InboundNumber",
              "value": "+16613804706",
              "value-num": 16613804706
            },
            {
              "name": "Total",
              "source": "Call",
              "type": "CallLength",
              "value": "12",
              "value-num": 12
            },
            {
              "name": "FromConnect",
              "source": "Call",
              "type": "CallLength",
              "value": "10",
              "value-num": 10
            },
            {
              "name": "FromDial",
              "source": "Call",
              "type": "CallLength",
              "value": "11",
              "value-num": 11
            }
          ]
        }
      },
      "Event": {
        "title": "Event",
        "required": [
          "name",
          "dtStamp"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "ineligibleTargets": {
            "type": "string"
          },
          "eligibleOrderedTargets": {
            "type": "string"
          },
          "dtStamp": {
            "type": "string"
          },
          "targetBuyerSubId": {
            "type": "string"
          },
          "targetName": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "targetBuyer": {
            "type": "string"
          },
          "targetBuyerId": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "targetNumber": {
            "type": "string"
          },
          "targetSubId": {
            "type": "string"
          },
          "timeToConnect": {
            "type": "integer",
            "format": "int32"
          },
          "callConnectionDt": {
            "type": "integer",
            "format": "int64"
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "callCompletedDt": {
            "type": "integer",
            "format": "int64"
          },
          "recordingUrl": {
            "type": "string"
          },
          "conversionAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "string"
          }
        },
        "example": {
          "name": "CallPlanDetail",
          "ineligibleTargets": "",
          "eligibleOrderedTargets": "Ringba Test Target[1,1]",
          "dtStamp": "2021-02-01T22:48:38.9811491Z"
        }
      },
      "MessageTag": {
        "title": "MessageTag",
        "required": [
          "name",
          "source",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "value-num": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "name": "testingtags",
          "source": "Impression",
          "type": "DialedNumber",
          "value": "12345",
          "value-num": 12345
        }
      },
      "GetDetailsAboutMultipleCalls": {
        "title": "GetDetailsAboutMultipleCalls",
        "required": [
          "isSuccessful",
          "transactionId",
          "report"
        ],
        "type": "object",
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "report": {
            "$ref": "#/components/schemas/Report4"
          }
        },
        "example": {
          "isSuccessful": true,
          "transactionId": "TR5a788fd4-1002-4e14-bc89-3dc43ebcd649",
          "report": {
            "records": [
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2147G0eMkK4nw_BU3SAcXiDHM4reCssygiNWj_2dEJ78LxV4pFrCWWw",
                "callDt": 1612219032605,
                "inboundPhoneNumber": "+17745459961",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612219037364,
                "callConnectionDt": 1612219034636,
                "callLengthInSeconds": 4,
                "connectedCallLengthInSeconds": 2,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
                "timeToConnectInSeconds": 2,
                "events": [
                  {
                    "name": "CallPlanDetail",
                    "ineligibleTargets": "",
                    "eligibleOrderedTargets": "Ringba Test Target[1,1]",
                    "dtStamp": "2021-02-01T22:37:12.6212240Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "totalAmount": 0.04,
                    "targetNumber": "+16317918378",
                    "name": "TargetDialed",
                    "dtStamp": "2021-02-01T22:37:12.6368465Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "timeToConnect": 2,
                    "callConnectionDt": 1612219034636,
                    "targetNumber": "+16317918378",
                    "name": "ConnectedCall",
                    "dtStamp": "2021-02-01T22:37:14.6368813Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "callLengthInSeconds": 4,
                    "callCompletedDt": 1612219037364,
                    "totalAmount": 0.04,
                    "recordingUrl": "",
                    "name": "CompletedCall",
                    "dtStamp": "2021-02-01T22:37:17.3645722Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "conversionAmount": 0,
                    "payoutAmount": 0,
                    "targetNumber": "+16317918378",
                    "name": "ConvertedCall",
                    "dtStamp": "2021-02-01T22:37:17.3953855Z",
                    "targetSubId": ""
                  },
                  {
                    "name": "PayoutCall",
                    "dtStamp": "2021-02-01T22:37:17.4108218Z",
                    "payoutAmount": 0
                  },
                  {
                    "name": "EndCallSource",
                    "source": "Caller",
                    "dtStamp": "2021-02-01T22:37:17.4108218Z"
                  },
                  {
                    "targetBuyer": "",
                    "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=EFuAX1oRg9ftDT49cglfqgeim8mlFkrUtC7nYY0WNCEq4U9lvH16LJx2aXKKwJIhuMMO0dPhjFEoC9Mp4Vc3a2cx8jXMHoGtGoyIIthl0CvnXGXa2YV1DNvruiPTbn7s85HxuHZHViriBIMqFNyGPio7O00ZhBQSOSpPVF6aoWqj4nF8Mh387Y9pan0x%2becuhSQ5cdKy3MAw3OPjPDHJCoJZLS%2fFNpM9m%2bFFpnoHq45e70P3MVS4bpgSmJ4UBHxvniNW5PP7eirEWHuso7Vcz6f%2bwwY%3d",
                    "name": "CallRecordingMigrated",
                    "targetBuyerId": "",
                    "dtStamp": "2021-02-01T22:37:18.2020659Z"
                  }
                ],
                "message-tags": [
                  {
                    "name": "testingtags",
                    "source": "Impression",
                    "type": "DialedNumber",
                    "value": "12345",
                    "value-num": 12345
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "DialedNumber",
                    "value": "+18884143472",
                    "value-num": 18884143472
                  },
                  {
                    "name": "UTCHour",
                    "source": "Call",
                    "type": "Time",
                    "value": "22",
                    "value-num": 22
                  },
                  {
                    "name": "UTCMinute",
                    "source": "Call",
                    "type": "Time",
                    "value": "37",
                    "value-num": 37
                  },
                  {
                    "name": "UTCSecond",
                    "source": "Call",
                    "type": "Time",
                    "value": "12",
                    "value-num": 12
                  },
                  {
                    "name": "UTCOffset",
                    "source": "Call",
                    "type": "Time",
                    "value": "-8",
                    "value-num": -8
                  },
                  {
                    "name": "Hour",
                    "source": "Call",
                    "type": "Time",
                    "value": "14",
                    "value-num": 14
                  },
                  {
                    "name": "Minute",
                    "source": "Call",
                    "type": "Time",
                    "value": "37",
                    "value-num": 37
                  },
                  {
                    "name": "Second",
                    "source": "Call",
                    "type": "Time",
                    "value": "12",
                    "value-num": 12
                  },
                  {
                    "name": "UTCWeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "UTCDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "UTCMonth",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "UTCYear",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "WeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "Day",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "Month",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "Year",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "TimeZone",
                    "source": "Call",
                    "type": "Date",
                    "value": "Pacific Standard Time"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "API Test"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "CA74c0b7f1f3824246b73e72a9238b4bfc"
                  },
                  {
                    "name": "TrackingId",
                    "source": "Call",
                    "type": "Campaign",
                    "value": ""
                  },
                  {
                    "name": "Company",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "AFbd21c4a3274c4382aa98919d5149baf3"
                  },
                  {
                    "name": "SubId",
                    "source": "Call",
                    "type": "Publisher",
                    "value": ""
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+17745459961",
                    "value-num": 17745459961
                  },
                  {
                    "name": "Number-NoPlus",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "17745459961",
                    "value-num": 17745459961
                  },
                  {
                    "name": "CountryCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "US"
                  },
                  {
                    "name": "CountryDigits",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "AreaCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "774",
                    "value-num": 774
                  },
                  {
                    "name": "Prefix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "545",
                    "value-num": 545
                  },
                  {
                    "name": "Suffix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "9961",
                    "value-num": 9961
                  },
                  {
                    "name": "Region",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "Massachusetts"
                  },
                  {
                    "name": "State",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "MA"
                  },
                  {
                    "name": "IsPhoneNumberValid",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "yes"
                  },
                  {
                    "name": "NumberE164",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+17745459961",
                    "value-num": 17745459961
                  },
                  {
                    "name": "Total",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "4",
                    "value-num": 4
                  },
                  {
                    "name": "FromConnect",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "FromDial",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "3",
                    "value-num": 3
                  }
                ]
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v21GxftEiw9_xebLSYKj4db9Wh5E3xSYcgYfGP6Z4rreg7TK7YdU5wFw",
                "callDt": 1612219718965,
                "inboundPhoneNumber": "+16613804706",
                "number": "+18884143472",
                "numberId": "PV18884143472",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612219731658,
                "callConnectionDt": 1612219720840,
                "callLengthInSeconds": 12,
                "connectedCallLengthInSeconds": 10,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                "timeToConnectInSeconds": 2,
                "events": [
                  {
                    "name": "CallPlanDetail",
                    "ineligibleTargets": "",
                    "eligibleOrderedTargets": "Ringba Test Target[1,1]",
                    "dtStamp": "2021-02-01T22:48:38.9811491Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "totalAmount": 0.04,
                    "targetNumber": "+16317918378",
                    "name": "TargetDialed",
                    "dtStamp": "2021-02-01T22:48:38.9967945Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "timeToConnect": 1,
                    "callConnectionDt": 1612219720840,
                    "targetNumber": "+16317918378",
                    "name": "ConnectedCall",
                    "dtStamp": "2021-02-01T22:48:40.8405533Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "callLengthInSeconds": 12,
                    "callCompletedDt": 1612219731658,
                    "totalAmount": 0.04,
                    "recordingUrl": "",
                    "name": "CompletedCall",
                    "dtStamp": "2021-02-01T22:48:51.6589290Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "conversionAmount": 0,
                    "payoutAmount": 0,
                    "targetNumber": "+16317918378",
                    "name": "ConvertedCall",
                    "dtStamp": "2021-02-01T22:48:51.6745531Z",
                    "targetSubId": ""
                  },
                  {
                    "name": "PayoutCall",
                    "dtStamp": "2021-02-01T22:48:51.6901622Z",
                    "payoutAmount": 0
                  },
                  {
                    "name": "EndCallSource",
                    "source": "Caller",
                    "dtStamp": "2021-02-01T22:48:51.6901622Z"
                  },
                  {
                    "targetBuyer": "",
                    "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=LU5ED4SMpth%2fx2tROaHGshZuKP%2bFCzw7oEXBmE9T2aXTSqdpJZ4e9mEpfwYK%2bO%2brSnSrb0MO4zTt2gX9LKFPQXjigBhs1QS2sK0iwYHqxs7St9wuzt6BczZa%2bBzq6LVZ4TQTSgnhVnTU9bvz17PT7Zwh70Xyi1ZmEbXlNRFl8MslZRg869bJEVl6XGbwyrWi9%2b8ZHICQ2fcDh7m4GxPRKEB6zV3bSmLzXuNwBtT6bBEaCRivU%2fu3wMCYtW%2bYfe8RBjvcvqLgeaHalOAJijr52Kgsh94%3d",
                    "name": "CallRecordingMigrated",
                    "targetBuyerId": "",
                    "dtStamp": "2021-02-01T22:48:52.7140912Z"
                  }
                ],
                "message-tags": [
                  {
                    "name": "testingtags",
                    "source": "Impression",
                    "type": "DialedNumber",
                    "value": "12345",
                    "value-num": 12345
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "DialedNumber",
                    "value": "+18884143472",
                    "value-num": 18884143472
                  },
                  {
                    "name": "UTCHour",
                    "source": "Call",
                    "type": "Time",
                    "value": "22",
                    "value-num": 22
                  },
                  {
                    "name": "UTCMinute",
                    "source": "Call",
                    "type": "Time",
                    "value": "48",
                    "value-num": 48
                  },
                  {
                    "name": "UTCSecond",
                    "source": "Call",
                    "type": "Time",
                    "value": "38",
                    "value-num": 38
                  },
                  {
                    "name": "UTCOffset",
                    "source": "Call",
                    "type": "Time",
                    "value": "-8",
                    "value-num": -8
                  },
                  {
                    "name": "Hour",
                    "source": "Call",
                    "type": "Time",
                    "value": "14",
                    "value-num": 14
                  },
                  {
                    "name": "Minute",
                    "source": "Call",
                    "type": "Time",
                    "value": "48",
                    "value-num": 48
                  },
                  {
                    "name": "Second",
                    "source": "Call",
                    "type": "Time",
                    "value": "38",
                    "value-num": 38
                  },
                  {
                    "name": "UTCWeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "UTCDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "UTCMonth",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "UTCYear",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "WeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "Day",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "Month",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "Year",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "TimeZone",
                    "source": "Call",
                    "type": "Date",
                    "value": "Pacific Standard Time"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "API Test"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "CA74c0b7f1f3824246b73e72a9238b4bfc"
                  },
                  {
                    "name": "TrackingId",
                    "source": "Call",
                    "type": "Campaign",
                    "value": ""
                  },
                  {
                    "name": "Company",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "AFbd21c4a3274c4382aa98919d5149baf3"
                  },
                  {
                    "name": "SubId",
                    "source": "Call",
                    "type": "Publisher",
                    "value": ""
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+16613804706",
                    "value-num": 16613804706
                  },
                  {
                    "name": "Number-NoPlus",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "16613804706",
                    "value-num": 16613804706
                  },
                  {
                    "name": "CountryCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "US"
                  },
                  {
                    "name": "CountryDigits",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "AreaCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "661",
                    "value-num": 661
                  },
                  {
                    "name": "Prefix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "380",
                    "value-num": 380
                  },
                  {
                    "name": "Suffix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "4706",
                    "value-num": 4706
                  },
                  {
                    "name": "Region",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "California"
                  },
                  {
                    "name": "State",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "CA"
                  },
                  {
                    "name": "IsPhoneNumberValid",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "yes"
                  },
                  {
                    "name": "NumberE164",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+16613804706",
                    "value-num": 16613804706
                  },
                  {
                    "name": "Total",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "12",
                    "value-num": 12
                  },
                  {
                    "name": "FromConnect",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "10",
                    "value-num": 10
                  },
                  {
                    "name": "FromDial",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "11",
                    "value-num": 11
                  }
                ]
              },
              {
                "campaignName": "API Test",
                "publisherName": "You",
                "targetName": "Ringba Test Target",
                "targetNumber": "+16317918378",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "publisherId": "AFbd21c4a3274c4382aa98919d5149baf3",
                "publisherSubId": "",
                "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                "inboundCallId": "v2YHKrf7eZPPPJ06nrZS4cdrhZWLN1OVXpcQkH9zG6qHKFQqzjiWc0Gw",
                "callDt": 1612218085439,
                "inboundPhoneNumber": "+16192488427",
                "number": "+18334013665",
                "numberId": "CLAOGNEH",
                "isFromNumberPool": false,
                "numberPoolId": "",
                "numberPoolName": "",
                "timeToCallInSeconds": 0,
                "callCompletedDt": 1612218091303,
                "callConnectionDt": 1612218087256,
                "callLengthInSeconds": 5,
                "connectedCallLengthInSeconds": 4,
                "endCallSource": "Caller",
                "hasConnected": true,
                "hasPayout": true,
                "hasPreviouslyConnected": false,
                "hasRecording": true,
                "hasConverted": true,
                "isLive": false,
                "conversionAmount": 0,
                "profitNet": -0.04,
                "profitGross": 0,
                "payoutAmount": 0,
                "totalCost": 0.04,
                "telcoCost": 0.04,
                "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
                "timeToConnectInSeconds": 1,
                "events": [
                  {
                    "name": "CallPlanDetail",
                    "ineligibleTargets": "",
                    "eligibleOrderedTargets": "Ringba Test Target[1,1]",
                    "dtStamp": "2021-02-01T22:21:25.4549188Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "totalAmount": 0.04,
                    "targetNumber": "+16317918378",
                    "name": "TargetDialed",
                    "dtStamp": "2021-02-01T22:21:25.4703960Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "timeToConnect": 1,
                    "callConnectionDt": 1612218087256,
                    "targetNumber": "+16317918378",
                    "name": "ConnectedCall",
                    "dtStamp": "2021-02-01T22:21:27.2566875Z",
                    "targetSubId": ""
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "callLengthInSeconds": 5,
                    "callCompletedDt": 1612218091303,
                    "totalAmount": 0.04,
                    "recordingUrl": "",
                    "name": "CompletedCall",
                    "dtStamp": "2021-02-01T22:21:31.3191910Z"
                  },
                  {
                    "targetBuyerSubId": "",
                    "targetName": "Ringba Test Target",
                    "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetBuyer": "",
                    "targetBuyerId": "",
                    "conversionAmount": 0,
                    "payoutAmount": 0,
                    "targetNumber": "+16317918378",
                    "name": "ConvertedCall",
                    "dtStamp": "2021-02-01T22:21:31.3348003Z",
                    "targetSubId": ""
                  },
                  {
                    "name": "PayoutCall",
                    "dtStamp": "2021-02-01T22:21:31.3348003Z",
                    "payoutAmount": 0
                  },
                  {
                    "name": "EndCallSource",
                    "source": "Caller",
                    "dtStamp": "2021-02-01T22:21:31.3348003Z"
                  },
                  {
                    "targetBuyer": "",
                    "recordingUrl": "https://media.ringba.com/recording-public?v=v1&k=P03B3aWBS56jO%2bcLEI%2frpdKyZiKEPWY6XeLI7RU4cZn93k5nAKTaGWtF6kC1h4Wz90egzbXvvfJWjfkhDEnslvJneM4gA2MhSj14ZJp1pknRFkI4scEjS%2fI26W3pbp8wXI9jQvpLCIzKopeN59S6cyI16YLwNf3b06DwtU7jUa17fH6CntHmxV2kzpGUuO1XPEXD4cH5l1yHi3tluX4CSCnfjRZdCaZfymZCLdv37lzThmeDgrkJw%2fBOo5BzAgZ9Sz9p%2fZh4%2b%2fF0VkpiwPI%2bm%2f6%2f5nU%3d",
                    "name": "CallRecordingMigrated",
                    "targetBuyerId": "",
                    "dtStamp": "2021-02-01T22:21:32.3385562Z"
                  }
                ],
                "message-tags": [
                  {
                    "name": "UTCHour",
                    "source": "Call",
                    "type": "Time",
                    "value": "22",
                    "value-num": 22
                  },
                  {
                    "name": "UTCMinute",
                    "source": "Call",
                    "type": "Time",
                    "value": "21",
                    "value-num": 21
                  },
                  {
                    "name": "UTCSecond",
                    "source": "Call",
                    "type": "Time",
                    "value": "25",
                    "value-num": 25
                  },
                  {
                    "name": "UTCOffset",
                    "source": "Call",
                    "type": "Time",
                    "value": "-8",
                    "value-num": -8
                  },
                  {
                    "name": "Hour",
                    "source": "Call",
                    "type": "Time",
                    "value": "14",
                    "value-num": 14
                  },
                  {
                    "name": "Minute",
                    "source": "Call",
                    "type": "Time",
                    "value": "21",
                    "value-num": 21
                  },
                  {
                    "name": "Second",
                    "source": "Call",
                    "type": "Time",
                    "value": "25",
                    "value-num": 25
                  },
                  {
                    "name": "UTCWeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "UTCDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "UTCMonth",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "UTCYear",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "WeekDay",
                    "source": "Call",
                    "type": "Date",
                    "value": "Monday"
                  },
                  {
                    "name": "Day",
                    "source": "Call",
                    "type": "Date",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "Month",
                    "source": "Call",
                    "type": "Date",
                    "value": "2",
                    "value-num": 2
                  },
                  {
                    "name": "Year",
                    "source": "Call",
                    "type": "Date",
                    "value": "2021",
                    "value-num": 2021
                  },
                  {
                    "name": "TimeZone",
                    "source": "Call",
                    "type": "Date",
                    "value": "Pacific Standard Time"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "API Test"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Campaign",
                    "value": "CA74c0b7f1f3824246b73e72a9238b4bfc"
                  },
                  {
                    "name": "TrackingId",
                    "source": "Call",
                    "type": "Campaign",
                    "value": ""
                  },
                  {
                    "name": "Company",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Name",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "You"
                  },
                  {
                    "name": "Id",
                    "source": "Call",
                    "type": "Publisher",
                    "value": "AFbd21c4a3274c4382aa98919d5149baf3"
                  },
                  {
                    "name": "SubId",
                    "source": "Call",
                    "type": "Publisher",
                    "value": ""
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+16192488427",
                    "value-num": 16192488427
                  },
                  {
                    "name": "Number-NoPlus",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "16192488427",
                    "value-num": 16192488427
                  },
                  {
                    "name": "CountryCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "US"
                  },
                  {
                    "name": "CountryDigits",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "1",
                    "value-num": 1
                  },
                  {
                    "name": "AreaCode",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "619",
                    "value-num": 619
                  },
                  {
                    "name": "Prefix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "248",
                    "value-num": 248
                  },
                  {
                    "name": "Suffix",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "8427",
                    "value-num": 8427
                  },
                  {
                    "name": "Region",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "California"
                  },
                  {
                    "name": "State",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "CA"
                  },
                  {
                    "name": "IsPhoneNumberValid",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "yes"
                  },
                  {
                    "name": "NumberE164",
                    "source": "Call",
                    "type": "InboundNumber",
                    "value": "+16192488427",
                    "value-num": 16192488427
                  },
                  {
                    "name": "Number",
                    "source": "Call",
                    "type": "DialedNumber",
                    "value": "+18334013665",
                    "value-num": 18334013665
                  },
                  {
                    "name": "Total",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "5",
                    "value-num": 5
                  },
                  {
                    "name": "FromConnect",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "3",
                    "value-num": 3
                  },
                  {
                    "name": "FromDial",
                    "source": "Call",
                    "type": "CallLength",
                    "value": "4",
                    "value-num": 4
                  }
                ]
              }
            ]
          }
        }
      },
      "ExportCallLog-CSVRequest": {
        "title": "ExportCallLog-CSVRequest",
        "required": [
          "reportEnd",
          "reportStart",
          "orderByColumns",
          "valueColumns"
        ],
        "type": "object",
        "properties": {
          "reportEnd": {
            "type": "string"
          },
          "reportStart": {
            "type": "string"
          },
          "orderByColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderByColumn"
            },
            "description": ""
          },
          "valueColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueColumn"
            },
            "description": ""
          }
        },
        "example": {
          "reportEnd": "2021-02-02T07:59:59Z",
          "reportStart": "2021-02-01T08:00:00Z",
          "orderByColumns": [
            {
              "column": "numberId",
              "direction": "desc"
            },
            {
              "column": "callDt",
              "direction": "desc"
            }
          ],
          "valueColumns": [
            {
              "column": "campaignName"
            },
            {
              "column": "publisherName"
            },
            {
              "column": "targetName"
            },
            {
              "column": "targetNumber"
            },
            {
              "column": "buyer"
            },
            {
              "column": "targetGroupName"
            },
            {
              "column": "campaignId"
            },
            {
              "column": "publisherId"
            },
            {
              "column": "publisherSubId"
            },
            {
              "column": "targetId"
            },
            {
              "column": "targetSubId"
            },
            {
              "column": "buyerId"
            },
            {
              "column": "targetBuyerSubId"
            },
            {
              "column": "targetGroupId"
            },
            {
              "column": "inboundCallId"
            },
            {
              "column": "callDt"
            },
            {
              "column": "inboundPhoneNumber"
            },
            {
              "column": "number"
            },
            {
              "column": "numberId"
            },
            {
              "column": "callCompletedDt"
            },
            {
              "column": "callConnectionDt"
            },
            {
              "column": "endCallSource"
            },
            {
              "column": "hasConnected"
            },
            {
              "column": "isIncomplete"
            },
            {
              "column": "hasRecording"
            },
            {
              "column": "isLive"
            },
            {
              "column": "recordingUrl"
            },
            {
              "column": "isFromNumberPool"
            },
            {
              "column": "numberPoolId"
            },
            {
              "column": "numberPoolName"
            },
            {
              "column": "timeToCallInSeconds"
            },
            {
              "column": "callLengthInSeconds"
            },
            {
              "column": "connectedCallLengthInSeconds"
            },
            {
              "column": "timeToConnectInSeconds"
            },
            {
              "column": "noPayoutReason"
            },
            {
              "column": "noConversionReason"
            },
            {
              "column": "blockReason"
            },
            {
              "column": "incompleteCallReason"
            },
            {
              "column": "offlineConversionUploaded"
            },
            {
              "column": "hasPayout"
            },
            {
              "column": "isDuplicate"
            },
            {
              "column": "hasPreviouslyConnected"
            },
            {
              "column": "hasConverted"
            },
            {
              "column": "wasBlocked"
            },
            {
              "column": "convAdjustmentsApprovedAmount"
            },
            {
              "column": "conversionAmount"
            },
            {
              "column": "profitNet"
            },
            {
              "column": "profitGross"
            },
            {
              "column": "payoutAmount"
            },
            {
              "column": "hasVoiceMail"
            },
            {
              "column": "totalCost"
            },
            {
              "column": "telcoCost"
            },
            {
              "column": "wasConversionAdjusted"
            },
            {
              "column": "conversionAdjustedCalls"
            },
            {
              "column": "wasPayoutAdjusted"
            },
            {
              "column": "hasAnnotations"
            },
            {
              "column": "convAdjustmentsRejectedCount"
            },
            {
              "column": "convAdjustmentRequestCount"
            },
            {
              "column": "convAdjustmentsApproved"
            },
            {
              "column": "tcpaCount"
            },
            {
              "column": "wasBlockedByTCPA"
            },
            {
              "column": "tcpaCost"
            },
            {
              "column": "dataEnrichmentCount"
            },
            {
              "column": "icpCost"
            },
            {
              "column": "ivrDepth"
            },
            {
              "column": "pingSuccessCount"
            },
            {
              "column": "pingFailCount"
            },
            {
              "column": "pingTotalBidAmount"
            },
            {
              "column": "pingDynamicCallLengthInSeconds"
            },
            {
              "column": "avgPingTreeBidAmount"
            },
            {
              "column": "winningBid"
            },
            {
              "column": "winningBidCallAccepted"
            },
            {
              "column": "winningBidCallRejected"
            }
          ]
        }
      },
      "OrderByColumn": {
        "title": "OrderByColumn",
        "required": [
          "column",
          "direction"
        ],
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          }
        },
        "example": {
          "column": "numberId",
          "direction": "desc"
        }
      },
      "ValueColumn": {
        "title": "ValueColumn",
        "required": [
          "column"
        ],
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          }
        },
        "example": {
          "column": "campaignName"
        }
      },
      "ExportCallLog-CSV": {
        "title": "ExportCallLog-CSV",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "EJ772657c816e54f4face3c917f2a5f28c"
        }
      },
      "ExportByJobId": {
        "title": "ExportByJobId",
        "required": [
          "status",
          "url"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "status": "Ready",
          "url": "https://s3.amazonaws.com/ringba-export/call_logs/2021/02/03/577827c925174a5f98ac350085d5c755.zip"
        }
      },
      "GetCampaigns": {
        "title": "GetCampaigns",
        "required": [
          "transactionId",
          "campaigns"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR983ef334-6d3e-4ccc-94a0-7fb09d6f5b87",
          "campaigns": [
            {
              "defaultPayout": {
                "id": "PS72474b39788e4c0084d5306418f55d50",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "defaultPayouts": [
                {
                  "id": "PS72474b39788e4c0084d5306418f55d50",
                  "name": "Campaign Default",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 0,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "incomingCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "timeZoneId": "UTC",
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                }
              ],
              "ivrEnabled": true,
              "userCampaignId": "",
              "countryCode": "US",
              "completed": true,
              "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
              "evalAnonymDuplication": true,
              "payoutDupesGlobal": false,
              "affiliateNumbers": [
                {
                  "phoneNumber": "+18334013665",
                  "displayNumber": "+18334013665",
                  "provider": "callrSipForward",
                  "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                  "providerId": "+18334013665",
                  "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                  "allocationDT": "2021-02-01T17:20:22.1504921Z",
                  "lastBillDT": "2021-02-01T00:00:00Z",
                  "nextChargeDT": "2021-02-27T00:00:00Z",
                  "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                  "deAllocationDT": "0001-01-01T00:00:00",
                  "autoRenew": true,
                  "renewDOM": 1,
                  "isTollFree": true,
                  "isActivated": false,
                  "assignmentSettings": {
                    "countryCode": "US",
                    "isTollFree": true
                  },
                  "deallocFlag": false,
                  "failedRechargeAttempts": 0,
                  "isCarrierNumber": true,
                  "carrierNumberId": "CLAOGNEH",
                  "affiliate": {
                    "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "createNumbers": false,
                    "isSelf": true,
                    "name": "You",
                    "enabled": true,
                    "version": 1
                  },
                  "id": "CLAOGNEH",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 3
                }
              ],
              "deDupeSettings": {
                "routeToOriginal": false,
                "routeToDifferent": false,
                "strict": true
              },
              "routes": [
                {
                  "id": "CR7492a41e3ba7453e809a9d7523307918",
                  "priority": {
                    "priority": 1,
                    "weight": 1
                  },
                  "callTarget": {
                    "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+18885852294"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "owner": {
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "id": "BUec50e9c7fa294283ba10a35893b13198",
                      "userIds": [
                        "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                      ],
                      "canPauseTargets": true,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": true,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "name": "Example Buyer Co.",
                      "enabled": true,
                      "version": 1
                    },
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Romance Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Ringba Test Target",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionSettings": [
                    {
                      "conversionValue": 0,
                      "payoutValue": 0,
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      },
                      "conversionType": "dialed"
                    }
                  ],
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                {
                  "id": "CRcdfd34e3411245f79c115ad0c8f7a5aa",
                  "priority": {
                    "priority": 2,
                    "weight": 2
                  },
                  "callTarget": {
                    "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                    "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+17605550149"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "owner": {
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "id": "BUec50e9c7fa294283ba10a35893b13198",
                      "userIds": [
                        "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                      ],
                      "canPauseTargets": true,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": true,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "name": "Example Buyer Co.",
                      "enabled": true,
                      "version": 1
                    },
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Mountain Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "New Test Target",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionSettings": [
                    {
                      "conversionValue": 0,
                      "payoutValue": 0,
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      },
                      "conversionType": "connectedCall",
                      "conversionArgs": {
                        "startTimerEvent": "OnConnectedCall"
                      }
                    }
                  ],
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                {
                  "id": "CRc9021a8fdee04af483097efc76c2ef88",
                  "priority": {
                    "priority": 3,
                    "weight": 3
                  },
                  "callTarget": {
                    "id": "TAdef30c972ca149468e618900de78906f",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+17205551235"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Mountain Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Phone Number Target",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionSettings": [
                    {
                      "conversionValue": 0,
                      "payoutValue": 0,
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      },
                      "conversionType": "dialed",
                      "conversionArgs": {
                        "startTimerEvent": "OnConnectedCall"
                      }
                    }
                  ],
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                }
              ],
              "duplicateSettings": {
                "duplicateSetting": "ON_CONNECT",
                "callLengthInSeconds": 0
              },
              "dialSettings": {
                "dialAttempts": 3
              },
              "recordSetting": {
                "record": true,
                "recordFromAnswer": true,
                "trimSilence": false,
                "dualChannelRecording": true
              },
              "affiliates": [
                {
                  "payoutConversionSettings": [],
                  "createNumbers": false,
                  "isSelf": false,
                  "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                  "name": "You",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                }
              ],
              "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "name": "API Test",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "defaultPayout": {
                "id": "PS6eee5f0c12aa4aa7a574e517da2f4726",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "defaultPayouts": [
                {
                  "id": "PS6eee5f0c12aa4aa7a574e517da2f4726",
                  "name": "Campaign Default",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 0,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "incomingCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "timeZoneId": "UTC",
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                }
              ],
              "ivrEnabled": true,
              "userCampaignId": "",
              "countryCode": "US",
              "completed": true,
              "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
              "evalAnonymDuplication": true,
              "payoutDupesGlobal": false,
              "affiliateNumbers": [
                {
                  "phoneNumber": "+18442757927",
                  "displayNumber": "+18442757927",
                  "provider": "callrSipForward",
                  "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                  "providerId": "+18442757927",
                  "campaignId": "CAf36c8dcd536349bd9114d27618eefb97",
                  "allocationDT": "2021-02-08T16:28:48.5721619Z",
                  "lastBillDT": "2021-02-08T00:00:00Z",
                  "nextChargeDT": "2021-03-06T00:00:00Z",
                  "lastChargeDT": "2021-02-08T16:28:48.5721619Z",
                  "deAllocationDT": "0001-01-01T00:00:00",
                  "autoRenew": true,
                  "renewDOM": 8,
                  "isTollFree": true,
                  "isActivated": false,
                  "assignmentSettings": {
                    "countryCode": "US",
                    "isTollFree": true
                  },
                  "deallocFlag": false,
                  "failedRechargeAttempts": 0,
                  "isCarrierNumber": true,
                  "carrierNumberId": "SRHBTMYV",
                  "affiliate": {
                    "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "createNumbers": false,
                    "isSelf": true,
                    "name": "You",
                    "enabled": true,
                    "version": 1
                  },
                  "id": "SRHBTMYV",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 3
                }
              ],
              "deDupeSettings": {
                "routeToOriginal": false,
                "routeToDifferent": false,
                "strict": true
              },
              "routes": [
                {
                  "id": "CR7acf5b915cc941d6be54dea44aeb5fd0",
                  "priority": {
                    "priority": 1,
                    "weight": 1
                  },
                  "callTarget": {
                    "id": "TA1183b884e2df4541ad9651c168e3bab9",
                    "targetGroupId": "",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+17205550167"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "owner": {
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "id": "BUaf8fb40966cc40cd83e3ac27d9fa5c9a",
                      "canPauseTargets": false,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": false,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "name": "Call Buying Inc.",
                      "enabled": true,
                      "version": 1
                    },
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Mountain Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Test Target Two",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionSettings": [
                    {
                      "conversionValue": 0,
                      "payoutValue": 0,
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      },
                      "conversionType": "connectedCall"
                    }
                  ],
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                }
              ],
              "duplicateSettings": {
                "duplicateSetting": "ON_CONNECT",
                "callLengthInSeconds": 0
              },
              "dialSettings": {
                "dialAttempts": 3
              },
              "recordSetting": {
                "record": true,
                "recordFromAnswer": true,
                "trimSilence": false,
                "dualChannelRecording": true
              },
              "affiliates": [
                {
                  "payoutConversionSettings": [],
                  "createNumbers": false,
                  "isSelf": false,
                  "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                  "name": "You",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                }
              ],
              "id": "CAf36c8dcd536349bd9114d27618eefb97",
              "name": "Super Cool Campaign",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "defaultPayout": {
                "id": "PS2f39062e18284765877875f3fda57a83",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "defaultPayouts": [
                {
                  "id": "PS2f39062e18284765877875f3fda57a83",
                  "name": "Campaign Default",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 0,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "incomingCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "timeZoneId": "UTC",
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                }
              ],
              "ivrEnabled": true,
              "userCampaignId": "Test Campaign",
              "numberDisplayFormat": "(nnn) nnn-nnnn",
              "countryCode": "US",
              "completed": true,
              "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
              "evalAnonymDuplication": true,
              "payoutDupesGlobal": false,
              "affiliateNumbers": [],
              "deDupeSettings": {
                "routeToOriginal": false,
                "routeToDifferent": false,
                "strict": true
              },
              "routes": [
                {
                  "id": "CR4931118ff1354163bb470999d70ddd74",
                  "priority": {
                    "priority": 1,
                    "weight": 1
                  },
                  "callTarget": {
                    "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                    "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                    "instructions": {
                      "connectionTimeOut": 0,
                      "callType": "number",
                      "number": "+18885852294"
                    },
                    "isHighRateTarget": false,
                    "targetCallIncrement": "onConvert",
                    "owner": {
                      "accountId": "RA25107ee2411049989cd8672852278bdb",
                      "id": "BUec50e9c7fa294283ba10a35893b13198",
                      "userIds": [
                        "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                      ],
                      "canPauseTargets": true,
                      "canSetConcurrencyCaps": false,
                      "canDisputeConversions": true,
                      "capacity": {
                        "timeZoneId": "UTC",
                        "allTimeSumCap": -1,
                        "monthlySumCap": -1,
                        "dailySumCap": -1,
                        "hourlySumCap": -1,
                        "allTimeCap": -1,
                        "monthlyCap": -1,
                        "dailyCap": -1,
                        "hourlyCap": -1
                      },
                      "name": "Example Buyer Co.",
                      "enabled": true,
                      "version": 1
                    },
                    "conversionTimerOffset": 0,
                    "schedule": {
                      "concurrencyCap": -1,
                      "timeZoneId": "Romance Standard Time",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "blockRecordings": false,
                    "name": "Ringba Test Target",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionSettings": [
                    {
                      "conversionValue": 0,
                      "payoutValue": 0,
                      "deDupeSetting": {
                        "secondsFromLastCall": 0
                      },
                      "conversionType": "dialed",
                      "conversionArgs": {
                        "startTimerEvent": "OnConnectedCall"
                      }
                    }
                  ],
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                }
              ],
              "duplicateSettings": {
                "duplicateSetting": "ON_CONNECT",
                "callLengthInSeconds": 0
              },
              "dialSettings": {
                "dialAttempts": 3
              },
              "recordSetting": {
                "record": true,
                "recordFromAnswer": true,
                "trimSilence": true,
                "dualChannelRecording": true
              },
              "affiliates": [
                {
                  "payoutConversionSettings": [],
                  "createNumbers": false,
                  "isSelf": false,
                  "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                  "name": "You",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                }
              ],
              "id": "CAa2714586592f464f817efc493f3a4b50",
              "name": "RINGBA TEST CAMPAIGN",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ]
        }
      },
      "Campaign": {
        "title": "Campaign",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AffiliateNumber"
                },
                {
                  "type": "string"
                }
              ]
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate2"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "numberDisplayFormat": {
            "type": "string"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PS72474b39788e4c0084d5306418f55d50",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18334013665",
              "displayNumber": "+18334013665",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18334013665",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "allocationDT": "2021-02-01T17:20:22.1504921Z",
              "lastBillDT": "2021-02-01T00:00:00Z",
              "nextChargeDT": "2021-02-27T00:00:00Z",
              "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "CLAOGNEH",
              "affiliate": {
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "createNumbers": false,
                "isSelf": true,
                "name": "You",
                "enabled": true,
                "version": 1
              },
              "id": "CLAOGNEH",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR7492a41e3ba7453e809a9d7523307918",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Romance Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRcdfd34e3411245f79c115ad0c8f7a5aa",
              "priority": {
                "priority": 2,
                "weight": 2
              },
              "callTarget": {
                "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17605550149"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "New Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "connectedCall",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRc9021a8fdee04af483097efc76c2ef88",
              "priority": {
                "priority": 3,
                "weight": 3
              },
              "callTarget": {
                "id": "TAdef30c972ca149468e618900de78906f",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17205551235"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Phone Number Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSettings": [],
              "createNumbers": false,
              "isSelf": false,
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "name": "API Test",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "DefaultPayout": {
        "title": "DefaultPayout",
        "required": [
          "id",
          "name",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "timeZoneId",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        },
        "example": {
          "id": "PS72474b39788e4c0084d5306418f55d50",
          "name": "Campaign Default",
          "priority": 0,
          "isRevShare": false,
          "payoutAmount": 0,
          "revSharePercentage": -1,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "incomingCall",
          "isGlobal": false,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "timeZoneId": "UTC",
          "deDupeSetting": {
            "secondsFromLastCall": 0
          }
        }
      },
      "DeDupeSetting": {
        "title": "DeDupeSetting",
        "required": [
          "secondsFromLastCall"
        ],
        "type": "object",
        "properties": {
          "secondsFromLastCall": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "secondsFromLastCall": 0
        }
      },
      "AffiliateNumber": {
        "title": "AffiliateNumber",
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18334013665",
          "displayNumber": "+18334013665",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18334013665",
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "allocationDT": "2021-02-01T17:20:22.1504921Z",
          "lastBillDT": "2021-02-01T00:00:00Z",
          "nextChargeDT": "2021-02-27T00:00:00Z",
          "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 1,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": true
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "CLAOGNEH",
          "affiliate": {
            "id": "AFbd21c4a3274c4382aa98919d5149baf3",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "createNumbers": false,
            "isSelf": true,
            "name": "You",
            "enabled": true,
            "version": 1
          },
          "id": "CLAOGNEH",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "AssignmentSettings": {
        "title": "AssignmentSettings",
        "required": [
          "countryCode",
          "isTollFree"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "isTollFree": {
            "type": "boolean"
          }
        },
        "example": {
          "countryCode": "US",
          "isTollFree": true
        }
      },
      "Affiliate": {
        "title": "Affiliate",
        "required": [
          "id",
          "accountId",
          "createNumbers",
          "isSelf",
          "name",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "createNumbers": false,
          "isSelf": true,
          "name": "You",
          "enabled": true,
          "version": 1
        }
      },
      "DeDupeSettings": {
        "title": "DeDupeSettings",
        "required": [
          "routeToOriginal",
          "routeToDifferent",
          "strict"
        ],
        "type": "object",
        "properties": {
          "routeToOriginal": {
            "type": "boolean"
          },
          "routeToDifferent": {
            "type": "boolean"
          },
          "strict": {
            "type": "boolean"
          }
        },
        "example": {
          "routeToOriginal": false,
          "routeToDifferent": false,
          "strict": true
        }
      },
      "Route": {
        "title": "Route",
        "required": [
          "id",
          "priority",
          "callTarget",
          "conversionSettings",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "callTarget": {
            "$ref": "#/components/schemas/CallTarget"
          },
          "conversionSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversionSetting"
            },
            "description": ""
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "CR7492a41e3ba7453e809a9d7523307918",
          "priority": {
            "priority": 1,
            "weight": 1
          },
          "callTarget": {
            "id": "TA2f6961e921ef4b92b7304dd76db8336f",
            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+18885852294"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "owner": {
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "id": "BUec50e9c7fa294283ba10a35893b13198",
              "userIds": [
                "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
              ],
              "canPauseTargets": true,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": true,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "name": "Example Buyer Co.",
              "enabled": true,
              "version": 1
            },
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Romance Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Ringba Test Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionSettings": [
            {
              "conversionValue": 0,
              "payoutValue": 0,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              },
              "conversionType": "dialed"
            }
          ],
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Priority": {
        "title": "Priority",
        "required": [
          "priority",
          "weight"
        ],
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "priority": 1,
          "weight": 1
        }
      },
      "CallTarget": {
        "title": "CallTarget",
        "required": [
          "id",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+18885852294"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "owner": {
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "id": "BUec50e9c7fa294283ba10a35893b13198",
            "userIds": [
              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
            ],
            "canPauseTargets": true,
            "canSetConcurrencyCaps": false,
            "canDisputeConversions": true,
            "capacity": {
              "timeZoneId": "UTC",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "name": "Example Buyer Co.",
            "enabled": true,
            "version": 1
          },
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Romance Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Ringba Test Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Instructions": {
        "title": "Instructions",
        "required": [
          "connectionTimeOut",
          "callType",
          "number"
        ],
        "type": "object",
        "properties": {
          "connectionTimeOut": {
            "type": "integer",
            "format": "int32"
          },
          "callType": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "example": {
          "connectionTimeOut": 0,
          "callType": "number",
          "number": "+18885852294"
        }
      },
      "Owner": {
        "title": "Owner",
        "required": [
          "accountId",
          "id",
          "canPauseTargets",
          "canSetConcurrencyCaps",
          "canDisputeConversions",
          "capacity",
          "name",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "canPauseTargets": {
            "type": "boolean"
          },
          "canSetConcurrencyCaps": {
            "type": "boolean"
          },
          "canDisputeConversions": {
            "type": "boolean"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "id": "BUec50e9c7fa294283ba10a35893b13198",
          "userIds": [
            "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
          ],
          "canPauseTargets": true,
          "canSetConcurrencyCaps": false,
          "canDisputeConversions": true,
          "capacity": {
            "timeZoneId": "UTC",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "name": "Example Buyer Co.",
          "enabled": true,
          "version": 1
        }
      },
      "Schedule": {
        "title": "Schedule",
        "required": [
          "concurrencyCap",
          "timeZoneId",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap"
        ],
        "type": "object",
        "properties": {
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "concurrencyCap": -1,
          "timeZoneId": "Romance Standard Time",
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1
        }
      },
      "ConversionSetting": {
        "title": "ConversionSetting",
        "required": [
          "conversionValue",
          "payoutValue",
          "deDupeSetting",
          "conversionType"
        ],
        "type": "object",
        "properties": {
          "conversionValue": {
            "type": "integer",
            "format": "int32"
          },
          "payoutValue": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "conversionType": {
            "type": "string"
          },
          "conversionArgs": {
            "$ref": "#/components/schemas/ConversionArgs"
          }
        },
        "example": {
          "conversionValue": 0,
          "payoutValue": 0,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "conversionType": "dialed"
        }
      },
      "ConversionArgs": {
        "title": "ConversionArgs",
        "required": [
          "startTimerEvent"
        ],
        "type": "object",
        "properties": {
          "startTimerEvent": {
            "type": "string"
          }
        },
        "example": {
          "startTimerEvent": "OnConnectedCall"
        }
      },
      "DuplicateSettings": {
        "title": "DuplicateSettings",
        "required": [
          "duplicateSetting",
          "callLengthInSeconds"
        ],
        "type": "object",
        "properties": {
          "duplicateSetting": {
            "type": "string"
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "duplicateSetting": "ON_CONNECT",
          "callLengthInSeconds": 0
        }
      },
      "DialSettings": {
        "title": "DialSettings",
        "required": [
          "dialAttempts"
        ],
        "type": "object",
        "properties": {
          "dialAttempts": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "dialAttempts": 3
        }
      },
      "RecordSetting": {
        "title": "RecordSetting",
        "required": [
          "record",
          "recordFromAnswer",
          "trimSilence",
          "dualChannelRecording"
        ],
        "type": "object",
        "properties": {
          "record": {
            "type": "boolean"
          },
          "recordFromAnswer": {
            "type": "boolean"
          },
          "trimSilence": {
            "type": "boolean"
          },
          "dualChannelRecording": {
            "type": "boolean"
          }
        },
        "example": {
          "record": true,
          "recordFromAnswer": true,
          "trimSilence": false,
          "dualChannelRecording": true
        }
      },
      "Affiliate2": {
        "title": "Affiliate2",
        "required": [
          "payoutConversionSettings",
          "createNumbers",
          "isSelf",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "payoutConversionSettings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "payoutConversionSettings": [],
          "createNumbers": false,
          "isSelf": false,
          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
          "name": "You",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetCampaignsStatsOnly": {
        "title": "GetCampaignsStatsOnly",
        "required": [
          "transactionId",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats"
          }
        },
        "example": {
          "transactionId": "TR87ff7754-a897-4eff-be9b-873e3b74da5c",
          "stats": {
            "cA9f6800fa2f074f41afde0aadd88292bd": {
              "total": 1,
              "currentMonth": 1,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "cA74c0b7f1f3824246b73e72a9238b4bfc": {
              "total": 5,
              "currentMonth": 5,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "cAa2714586592f464f817efc493f3a4b50": {
              "total": 6,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "Stats": {
        "title": "Stats",
        "required": [
          "cA9f6800fa2f074f41afde0aadd88292bd",
          "cA74c0b7f1f3824246b73e72a9238b4bfc",
          "cAa2714586592f464f817efc493f3a4b50"
        ],
        "type": "object",
        "properties": {
          "cA9f6800fa2f074f41afde0aadd88292bd": {
            "$ref": "#/components/schemas/CA9f6800fa2f074f41afde0aadd88292bd"
          },
          "cA74c0b7f1f3824246b73e72a9238b4bfc": {
            "$ref": "#/components/schemas/CA74c0b7f1f3824246b73e72a9238b4bfc"
          },
          "cAa2714586592f464f817efc493f3a4b50": {
            "$ref": "#/components/schemas/CAa2714586592f464f817efc493f3a4b50"
          }
        },
        "example": {
          "cA9f6800fa2f074f41afde0aadd88292bd": {
            "total": 1,
            "currentMonth": 1,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "cA74c0b7f1f3824246b73e72a9238b4bfc": {
            "total": 5,
            "currentMonth": 5,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "cAa2714586592f464f817efc493f3a4b50": {
            "total": 6,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "CA9f6800fa2f074f41afde0aadd88292bd": {
        "title": "CA9f6800fa2f074f41afde0aadd88292bd",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 1,
          "currentMonth": 1,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "CA74c0b7f1f3824246b73e72a9238b4bfc": {
        "title": "CA74c0b7f1f3824246b73e72a9238b4bfc",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 5,
          "currentMonth": 5,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "CAa2714586592f464f817efc493f3a4b50": {
        "title": "CAa2714586592f464f817efc493f3a4b50",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 6,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "GetInformationAboutaSingleCampaign": {
        "title": "GetInformationAboutaSingleCampaign",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign1"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "Campaign1": {
        "title": "Campaign1",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout2"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout3"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber2"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate4"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DefaultPayout2": {
        "title": "DefaultPayout2",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        },
        "example": {
          "id": "PA121fa20824254a318da663ae7a2c8be4",
          "priority": 0,
          "isRevShare": true,
          "payoutAmount": -1,
          "revSharePercentage": 80,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "convertedCall",
          "isGlobal": false,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": 130,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          }
        }
      },
      "DefaultPayout3": {
        "title": "DefaultPayout3",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "timeZoneId": {
            "type": "string"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          }
        },
        "example": {
          "id": "PA121fa20824254a318da663ae7a2c8be4",
          "priority": 0,
          "isRevShare": true,
          "payoutAmount": -1,
          "revSharePercentage": 80,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "convertedCall",
          "isGlobal": false,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": 130,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          }
        }
      },
      "PayoutHour": {
        "title": "PayoutHour",
        "required": [
          "openTime",
          "closeTime",
          "inverted",
          "isClosed"
        ],
        "type": "object",
        "properties": {
          "openTime": {
            "$ref": "#/components/schemas/OpenTime"
          },
          "closeTime": {
            "$ref": "#/components/schemas/CloseTime"
          },
          "inverted": {
            "type": "boolean"
          },
          "isClosed": {
            "type": "boolean"
          }
        },
        "example": {
          "openTime": {
            "minute": 0,
            "hour": 9
          },
          "closeTime": {
            "minute": 0,
            "hour": 17
          },
          "inverted": false,
          "isClosed": true
        }
      },
      "OpenTime": {
        "title": "OpenTime",
        "required": [
          "minute",
          "hour"
        ],
        "type": "object",
        "properties": {
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "minute": 0,
          "hour": 9
        }
      },
      "CloseTime": {
        "title": "CloseTime",
        "required": [
          "minute",
          "hour"
        ],
        "type": "object",
        "properties": {
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "minute": 0,
          "hour": 17
        }
      },
      "AffiliateNumber2": {
        "title": "AffiliateNumber2",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "campaignId",
          "jsTagId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "affiliate",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "jsTagId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate3"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18885852294",
          "displayNumber": "+18885852294",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18885852294",
          "campaignId": "",
          "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
          "allocationDT": "2021-02-08T23:56:26.0457102Z",
          "lastBillDT": "2021-03-08T00:00:00Z",
          "nextChargeDT": "2021-04-06T00:00:00Z",
          "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 8,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "888",
            "isTollFree": true
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "PNZFWQO0",
          "affiliate": {
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "enabled": true,
            "version": 1
          },
          "id": "PNZFWQO0",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "AssignmentSettings2": {
        "title": "AssignmentSettings2",
        "required": [
          "countryCode",
          "areaCode",
          "isTollFree"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "areaCode": {
            "type": "string"
          },
          "isTollFree": {
            "type": "boolean"
          }
        },
        "example": {
          "countryCode": "US",
          "areaCode": "888",
          "isTollFree": true
        }
      },
      "Affiliate3": {
        "title": "Affiliate3",
        "required": [
          "accountId",
          "id",
          "subId",
          "createNumbers",
          "accessToRecordings",
          "userIds",
          "isSelf",
          "name",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "accessToRecordings": {
            "type": "boolean"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "isSelf": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "subId": "",
          "createNumbers": true,
          "accessToRecordings": true,
          "userIds": [
            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
          ],
          "isSelf": false,
          "name": "Example Publisher",
          "enabled": true,
          "version": 1
        }
      },
      "Route1": {
        "title": "Route1",
        "required": [
          "id",
          "priority",
          "callTarget",
          "conversionSettings",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "callTarget": {
            "$ref": "#/components/schemas/CallTarget1"
          },
          "conversionSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversionSetting1"
            },
            "description": ""
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
          "priority": {
            "priority": 1,
            "weight": 1
          },
          "callTarget": {
            "id": "TA2f6961e921ef4b92b7304dd76db8336f",
            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+18885852294"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "owner": {
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "id": "BUec50e9c7fa294283ba10a35893b13198",
              "userIds": [
                "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
              ],
              "canPauseTargets": true,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": true,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "name": "Example Buyer Co.",
              "enabled": true,
              "version": 1
            },
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Pacific Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Ringba Test Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionSettings": [
            {
              "conversionValue": 0,
              "payoutValue": 0,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              },
              "conversionType": "dialed"
            }
          ],
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "CallTarget1": {
        "title": "CallTarget1",
        "required": [
          "id",
          "targetGroupId",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "owner",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner1"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+18885852294"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "owner": {
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "id": "BUec50e9c7fa294283ba10a35893b13198",
            "userIds": [
              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
            ],
            "canPauseTargets": true,
            "canSetConcurrencyCaps": false,
            "canDisputeConversions": true,
            "capacity": {
              "timeZoneId": "UTC",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "name": "Example Buyer Co.",
            "enabled": true,
            "version": 1
          },
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Pacific Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Ringba Test Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Owner1": {
        "title": "Owner1",
        "required": [
          "accountId",
          "id",
          "userIds",
          "canPauseTargets",
          "canSetConcurrencyCaps",
          "canDisputeConversions",
          "capacity",
          "name",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "canPauseTargets": {
            "type": "boolean"
          },
          "canSetConcurrencyCaps": {
            "type": "boolean"
          },
          "canDisputeConversions": {
            "type": "boolean"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "id": "BUec50e9c7fa294283ba10a35893b13198",
          "userIds": [
            "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
          ],
          "canPauseTargets": true,
          "canSetConcurrencyCaps": false,
          "canDisputeConversions": true,
          "capacity": {
            "timeZoneId": "UTC",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "name": "Example Buyer Co.",
          "enabled": true,
          "version": 1
        }
      },
      "ConversionSetting1": {
        "title": "ConversionSetting1",
        "required": [
          "conversionValue",
          "payoutValue",
          "deDupeSetting",
          "conversionType"
        ],
        "type": "object",
        "properties": {
          "conversionValue": {
            "type": "integer",
            "format": "int32"
          },
          "payoutValue": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "conversionType": {
            "type": "string"
          }
        },
        "example": {
          "conversionValue": 0,
          "payoutValue": 0,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "conversionType": "dialed"
        }
      },
      "Affiliate4": {
        "title": "Affiliate4",
        "required": [
          "payoutConversionSettings",
          "createNumbers",
          "isSelf",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "payoutConversionSettings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PayoutConversionSetting"
                },
                {
                  "$ref": "#/components/schemas/PayoutConversionSetting1"
                }
              ]
            },
            "description": ""
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionSetting": {
            "$ref": "#/components/schemas/PayoutConversionSetting1"
          },
          "subId": {
            "type": "string"
          }
        },
        "example": {
          "payoutConversionSettings": [],
          "createNumbers": false,
          "isSelf": false,
          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
          "name": "You",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "PayoutConversionSetting": {
        "title": "PayoutConversionSetting",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        }
      },
      "PayoutConversionSetting1": {
        "title": "PayoutConversionSetting1",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        },
        "example": {
          "id": "PAd7ef627d476241ea99f860c16b485d8f",
          "priority": 0,
          "isRevShare": false,
          "payoutAmount": 12,
          "revSharePercentage": -1,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "connectedCall",
          "isGlobal": false,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          }
        }
      },
      "JsTags": {
        "title": "JsTags",
        "required": [
          "jSf208d4fa391d4a88b0120e1cad94ac98"
        ],
        "type": "object",
        "properties": {
          "jSf208d4fa391d4a88b0120e1cad94ac98": {
            "$ref": "#/components/schemas/JSf208d4fa391d4a88b0120e1cad94ac98"
          }
        },
        "example": {
          "jSf208d4fa391d4a88b0120e1cad94ac98": {
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
            "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "numberId": "PNZFWQO0",
            "previousNumber": {
              "e164Number": "+18885852294",
              "countryCode": "1",
              "formatedNumber": "(888) 585-2294",
              "numberParts": [
                "(888)",
                "585",
                "2294"
              ]
            },
            "id": "JSf208d4fa391d4a88b0120e1cad94ac98",
            "name": "Example Js Tag",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 2
          }
        }
      },
      "JSf208d4fa391d4a88b0120e1cad94ac98": {
        "title": "JSf208d4fa391d4a88b0120e1cad94ac98",
        "required": [
          "campaignId",
          "numberPoolId",
          "publisherId",
          "numberId",
          "previousNumber",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "numberPoolId": {
            "type": "string"
          },
          "publisherId": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "previousNumber": {
            "$ref": "#/components/schemas/PreviousNumber"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
          "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "numberId": "PNZFWQO0",
          "previousNumber": {
            "e164Number": "+18885852294",
            "countryCode": "1",
            "formatedNumber": "(888) 585-2294",
            "numberParts": [
              "(888)",
              "585",
              "2294"
            ]
          },
          "id": "JSf208d4fa391d4a88b0120e1cad94ac98",
          "name": "Example Js Tag",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 2
        }
      },
      "PreviousNumber": {
        "title": "PreviousNumber",
        "required": [
          "e164Number",
          "countryCode",
          "formatedNumber",
          "numberParts"
        ],
        "type": "object",
        "properties": {
          "e164Number": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "formatedNumber": {
            "type": "string"
          },
          "numberParts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "e164Number": "+18885852294",
          "countryCode": "1",
          "formatedNumber": "(888) 585-2294",
          "numberParts": [
            "(888)",
            "585",
            "2294"
          ]
        }
      },
      "PubNumberEnrichmentUrls": {
        "title": "PubNumberEnrichmentUrls",
        "required": [
          "_PNZFWQO0"
        ],
        "type": "object",
        "properties": {
          "_PNZFWQO0": {
            "type": "string"
          }
        },
        "example": {
          "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
        }
      },
      "Rtb": {
        "title": "Rtb",
        "required": [
          "setup",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "setup": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "setup": true,
          "enabled": true
        }
      },
      "GetInboundReferencesforaSingleCampaign": {
        "title": "GetInboundReferencesforaSingleCampaign",
        "required": [
          "transactionId",
          "id",
          "hasReferences",
          "refByAccount",
          "affiliates",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          },
          "refByAccount": {
            "type": "boolean"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate5"
            },
            "description": ""
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR856f310d-9020-4c3c-9593-ce36e6870772",
          "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "hasReferences": true,
          "refByAccount": true,
          "affiliates": [
            {
              "affiliateId": "AFbd21c4a3274c4382aa98919d5149baf3",
              "affiliateName": "You"
            }
          ],
          "numbers": [
            {
              "numberId": "CLAOGNEH",
              "numberName": "+18334013665",
              "numberPhoneNumber": "+18334013665"
            }
          ]
        }
      },
      "Affiliate5": {
        "title": "Affiliate5",
        "required": [
          "affiliateId",
          "affiliateName"
        ],
        "type": "object",
        "properties": {
          "affiliateId": {
            "type": "string"
          },
          "affiliateName": {
            "type": "string"
          }
        },
        "example": {
          "affiliateId": "AFbd21c4a3274c4382aa98919d5149baf3",
          "affiliateName": "You"
        }
      },
      "Number": {
        "title": "Number",
        "required": [
          "numberId",
          "numberName",
          "numberPhoneNumber"
        ],
        "type": "object",
        "properties": {
          "numberId": {
            "type": "string"
          },
          "numberName": {
            "type": "string"
          },
          "numberPhoneNumber": {
            "type": "string"
          }
        },
        "example": {
          "numberId": "CLAOGNEH",
          "numberName": "+18334013665",
          "numberPhoneNumber": "+18334013665"
        }
      },
      "CreateNewCampaignRequest": {
        "title": "CreateNewCampaignRequest",
        "required": [
          "name",
          "userCampaignId",
          "numberDisplayFormat",
          "countryCode",
          "duplicateSettings",
          "deDupeSettings",
          "dialSettings",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "recordSetting",
          "spamDetection"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "userCampaignId": {
            "type": "string"
          },
          "numberDisplayFormat": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting2"
          },
          "spamDetection": {
            "$ref": "#/components/schemas/SpamDetection"
          }
        },
        "example": {
          "name": "New Campaign",
          "userCampaignId": "Test Campaign",
          "numberDisplayFormat": "(nnn) nnn-nnnn",
          "countryCode": "US",
          "duplicateSettings": {
            "duplicateSetting": "ON_CALL_LENGTH",
            "callLengthInSeconds": 21
          },
          "deDupeSettings": {
            "routeToOriginal": true,
            "routeToDifferent": false,
            "strict": true
          },
          "dialSettings": {
            "dialAttempts": 7
          },
          "evalAnonymDuplication": false,
          "payoutDupesGlobal": true,
          "recordSetting": {
            "record": true,
            "recordFromAnswer": false,
            "trimSilence": true
          },
          "spamDetection": {
            "blockDuplicatesForSeconds": "3",
            "trackAnonymous": true
          }
        }
      },
      "RecordSetting2": {
        "title": "RecordSetting2",
        "required": [
          "record",
          "recordFromAnswer",
          "trimSilence"
        ],
        "type": "object",
        "properties": {
          "record": {
            "type": "boolean"
          },
          "recordFromAnswer": {
            "type": "boolean"
          },
          "trimSilence": {
            "type": "boolean"
          }
        },
        "example": {
          "record": true,
          "recordFromAnswer": false,
          "trimSilence": true
        }
      },
      "SpamDetection": {
        "title": "SpamDetection",
        "required": [
          "blockDuplicatesForSeconds",
          "trackAnonymous"
        ],
        "type": "object",
        "properties": {
          "blockDuplicatesForSeconds": {
            "type": "string"
          },
          "trackAnonymous": {
            "type": "boolean"
          }
        },
        "example": {
          "blockDuplicatesForSeconds": "3",
          "trackAnonymous": true
        }
      },
      "CreateNewCampaignwithallavailableparametersspecified": {
        "title": "CreateNewCampaignwithallavailableparametersspecified",
        "required": [
          "transactionId",
          "campaignId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign2"
          }
        },
        "example": {
          "transactionId": "TR334fac3f-4c14-4353-89f9-55dab6ed597e",
          "campaignId": "CA478a4239bc844b828fc086db6892b2d5",
          "campaign": {
            "defaultPayouts": [],
            "ivrEnabled": true,
            "userCampaignId": "Test Campaign",
            "numberDisplayFormat": "(nnn) nnn-nnnn",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": false,
            "payoutDupesGlobal": true,
            "spamDetection": {
              "blockDuplicatesForSeconds": 3,
              "trackAnonymous": true
            },
            "deDupeSettings": {
              "routeToOriginal": true,
              "routeToDifferent": false,
              "strict": true
            },
            "duplicateSettings": {
              "duplicateSetting": "ON_CALL_LENGTH",
              "callLengthInSeconds": 21
            },
            "dialSettings": {
              "dialAttempts": 7
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": false,
              "trimSilence": true,
              "dualChannelRecording": true
            },
            "id": "CA478a4239bc844b828fc086db6892b2d5",
            "name": "New Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Campaign2": {
        "title": "Campaign2",
        "required": [
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "numberDisplayFormat",
          "countryCode",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "spamDetection",
          "deDupeSettings",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayouts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "numberDisplayFormat": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "spamDetection": {
            "$ref": "#/components/schemas/SpamDetection1"
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayouts": [],
          "ivrEnabled": true,
          "userCampaignId": "Test Campaign",
          "numberDisplayFormat": "(nnn) nnn-nnnn",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": false,
          "payoutDupesGlobal": true,
          "spamDetection": {
            "blockDuplicatesForSeconds": 3,
            "trackAnonymous": true
          },
          "deDupeSettings": {
            "routeToOriginal": true,
            "routeToDifferent": false,
            "strict": true
          },
          "duplicateSettings": {
            "duplicateSetting": "ON_CALL_LENGTH",
            "callLengthInSeconds": 21
          },
          "dialSettings": {
            "dialAttempts": 7
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": false,
            "trimSilence": true,
            "dualChannelRecording": true
          },
          "id": "CA478a4239bc844b828fc086db6892b2d5",
          "name": "New Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "SpamDetection1": {
        "title": "SpamDetection1",
        "required": [
          "blockDuplicatesForSeconds",
          "trackAnonymous"
        ],
        "type": "object",
        "properties": {
          "blockDuplicatesForSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "trackAnonymous": {
            "type": "boolean"
          }
        },
        "example": {
          "blockDuplicatesForSeconds": 3,
          "trackAnonymous": true
        }
      },
      "CreateNewCampaignwithnameonlyanddefaultvaluesforoptionalparameters": {
        "title": "CreateNewCampaignwithnameonlyanddefaultvaluesforoptionalparameters",
        "required": [
          "transactionId",
          "campaignId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign3"
          }
        },
        "example": {
          "transactionId": "TR36f7bfd0-4066-41e6-a72c-bb5911d96c07",
          "campaignId": "CA4c1e2341d05e43a8aa36449666cac77c",
          "campaign": {
            "defaultPayouts": [],
            "ivrEnabled": true,
            "userCampaignId": "",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "id": "CA4c1e2341d05e43a8aa36449666cac77c",
            "name": "New Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Campaign3": {
        "title": "Campaign3",
        "required": [
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "deDupeSettings",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayouts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayouts": [],
          "ivrEnabled": true,
          "userCampaignId": "",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "id": "CA4c1e2341d05e43a8aa36449666cac77c",
          "name": "New Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "CloneaCampaign": {
        "title": "CloneaCampaign",
        "required": [
          "transactionId",
          "campaignId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign4"
          }
        },
        "example": {
          "transactionId": "TReddce6fa-e8e4-4918-aabc-0373bd73fd22",
          "campaignId": "CA61e0d0f850ac48e5aea0374629b7f601",
          "campaign": {
            "defaultPayout": {
              "id": "PS102132daefda4b9496774ed561b39d5f",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PS102132daefda4b9496774ed561b39d5f",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR46678c979f4d4a26acae7e564b59e36b",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "name": "Example Buyer Co.",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Romance Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "id": "CA61e0d0f850ac48e5aea0374629b7f601",
            "name": "Example Campaign - Copy",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Campaign4": {
        "title": "Campaign4",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PS102132daefda4b9496774ed561b39d5f",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PS102132daefda4b9496774ed561b39d5f",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR46678c979f4d4a26acae7e564b59e36b",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Romance Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "id": "CA61e0d0f850ac48e5aea0374629b7f601",
          "name": "Example Campaign - Copy",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "UpdateaCampaignRequest": {
        "title": "UpdateaCampaignRequest",
        "required": [
          "name",
          "userCampaignId",
          "numberDisplayFormat",
          "countryCode",
          "duplicateSettings",
          "deDupeSettings",
          "dialSettings",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "recordSetting",
          "spamDetection"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "userCampaignId": {
            "type": "string"
          },
          "numberDisplayFormat": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting2"
          },
          "spamDetection": {
            "$ref": "#/components/schemas/SpamDetection"
          }
        },
        "example": {
          "name": "New Name",
          "userCampaignId": "New ID",
          "numberDisplayFormat": "nnn-nnn-nnnn",
          "countryCode": "US",
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": true,
            "strict": false
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "recordSetting": {
            "record": false,
            "recordFromAnswer": false,
            "trimSilence": false
          },
          "spamDetection": {
            "blockDuplicatesForSeconds": "7",
            "trackAnonymous": false
          }
        }
      },
      "UpdateaCampaign": {
        "title": "UpdateaCampaign",
        "required": [
          "transactionId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign5"
          }
        },
        "example": {
          "transactionId": "TRf4ff4041-3c13-41eb-95b4-c9000c0e770a",
          "campaign": {
            "defaultPayout": {
              "id": "PSe3a0d11525b440849c744454b2c73974",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PSe3a0d11525b440849c744454b2c73974",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "New ID",
            "numberDisplayFormat": "nnn-nnn-nnnn",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "spamDetection": {
              "blockDuplicatesForSeconds": 7,
              "trackAnonymous": false
            },
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": true,
              "strict": false
            },
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": false,
              "recordFromAnswer": false,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "id": "CAa32ff0c29a764cf99ca4304b8d941c12",
            "name": "New Name",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Campaign5": {
        "title": "Campaign5",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "numberDisplayFormat",
          "countryCode",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "spamDetection",
          "deDupeSettings",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "numberDisplayFormat": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "spamDetection": {
            "$ref": "#/components/schemas/SpamDetection1"
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PSe3a0d11525b440849c744454b2c73974",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PSe3a0d11525b440849c744454b2c73974",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "New ID",
          "numberDisplayFormat": "nnn-nnn-nnnn",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "spamDetection": {
            "blockDuplicatesForSeconds": 7,
            "trackAnonymous": false
          },
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": true,
            "strict": false
          },
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": false,
            "recordFromAnswer": false,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "id": "CAa32ff0c29a764cf99ca4304b8d941c12",
          "name": "New Name",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "DeleteaCampaign": {
        "title": "DeleteaCampaign",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRca4ce249-6ba1-4691-b94f-923aab91838d",
          "isSuccessful": true
        }
      },
      "AddaDefaultNumberforaCampaignRequest": {
        "title": "AddaDefaultNumberforaCampaignRequest",
        "required": [
          "numberId"
        ],
        "type": "object",
        "properties": {
          "numberId": {
            "type": "string"
          }
        },
        "example": {
          "numberId": "{{numberId}}"
        }
      },
      "AddaDefaultNumberforaCampaign": {
        "title": "AddaDefaultNumberforaCampaign",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign6"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls1"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TR9af2e2e7-48ee-4160-ad31-3b06963e06e3",
          "campaign": {
            "defaultPayout": {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "defaultNumber": {
              "phoneNumber": "+18885852294",
              "displayNumber": "+18885852294",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18885852294",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2021-02-08T23:56:26.0457102Z",
              "lastBillDT": "2021-03-08T00:00:00Z",
              "nextChargeDT": "2021-04-06T00:00:00Z",
              "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "888",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "PNZFWQO0",
              "id": "PNZFWQO0",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            "affiliateNumbers": [
              {
                "phoneNumber": "+18336371466",
                "localNumber": "(833) 637-1466",
                "displayNumber": "18336371466",
                "provider": "telnyx",
                "providerAccountId": "1299489388324979809",
                "providerId": "1362385882509739900",
                "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                "allocationDT": "2020-05-01T17:37:35.3481506Z",
                "lastBillDT": "2021-03-01T00:00:00Z",
                "nextChargeDT": "2021-03-30T00:00:00Z",
                "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "tags": [],
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": false,
                "carrierNumberId": "",
                "affiliate": {
                  "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                  "subId": "",
                  "createNumbers": true,
                  "accessToRecordings": true,
                  "userIds": [
                    "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                  ],
                  "isSelf": false,
                  "name": "Example Publisher",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "id": "1362385882509739900",
                "name": "Skype3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              },
              {
                "phoneNumber": "+18885852294",
                "displayNumber": "+18885852294",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18885852294",
                "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                "allocationDT": "2021-02-08T23:56:26.0457102Z",
                "lastBillDT": "2021-03-08T00:00:00Z",
                "nextChargeDT": "2021-04-06T00:00:00Z",
                "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 8,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "areaCode": "888",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "PNZFWQO0",
                "id": "PNZFWQO0",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Pacific Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSetting": {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                "payoutConversionSettings": [
                  {
                    "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                    "priority": 0,
                    "isRevShare": false,
                    "payoutAmount": 7,
                    "revSharePercentage": -1,
                    "revShareMaxPayoutAmount": -1,
                    "revShareMinPayoutAmount": -1,
                    "payoutConversionType": "convertedCall",
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    }
                  },
                  {
                    "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                    "priority": 1,
                    "isRevShare": true,
                    "payoutAmount": -1,
                    "revSharePercentage": 50,
                    "revShareMaxPayoutAmount": 10,
                    "revShareMinPayoutAmount": 1,
                    "payoutConversionType": "convertedCall",
                    "payoutConversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    },
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": -1
                    }
                  }
                ],
                "subId": "",
                "createNumbers": true,
                "isSelf": false,
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "Example Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_1362385882509739900": "https://display.ringba.com/enrich/1362385882509739900?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2",
            "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": true,
            "enabled": true
          }
        }
      },
      "Campaign6": {
        "title": "Campaign6",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerDraftId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "defaultNumber",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerDraftId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "defaultNumber": {
            "$ref": "#/components/schemas/DefaultNumber"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber3"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate7"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "defaultNumber": {
            "phoneNumber": "+18885852294",
            "displayNumber": "+18885852294",
            "provider": "callrSipForward",
            "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
            "providerId": "+18885852294",
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "allocationDT": "2021-02-08T23:56:26.0457102Z",
            "lastBillDT": "2021-03-08T00:00:00Z",
            "nextChargeDT": "2021-04-06T00:00:00Z",
            "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
            "deAllocationDT": "0001-01-01T00:00:00",
            "autoRenew": true,
            "renewDOM": 8,
            "isTollFree": true,
            "isActivated": false,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "888",
              "isTollFree": true
            },
            "deallocFlag": false,
            "failedRechargeAttempts": 0,
            "isCarrierNumber": true,
            "carrierNumberId": "PNZFWQO0",
            "id": "PNZFWQO0",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "affiliateNumbers": [
            {
              "phoneNumber": "+18336371466",
              "localNumber": "(833) 637-1466",
              "displayNumber": "18336371466",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362385882509739900",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2020-05-01T17:37:35.3481506Z",
              "lastBillDT": "2021-03-01T00:00:00Z",
              "nextChargeDT": "2021-03-30T00:00:00Z",
              "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "id": "1362385882509739900",
              "name": "Skype3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18885852294",
              "displayNumber": "+18885852294",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18885852294",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2021-02-08T23:56:26.0457102Z",
              "lastBillDT": "2021-03-08T00:00:00Z",
              "nextChargeDT": "2021-04-06T00:00:00Z",
              "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "888",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "PNZFWQO0",
              "id": "PNZFWQO0",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSetting": {
                "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 7,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "convertedCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "payoutConversionSettings": [
                {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                {
                  "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                  "priority": 1,
                  "isRevShare": true,
                  "payoutAmount": -1,
                  "revSharePercentage": 50,
                  "revShareMaxPayoutAmount": 10,
                  "revShareMinPayoutAmount": 1,
                  "payoutConversionType": "convertedCall",
                  "payoutConversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  },
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": -1
                  }
                }
              ],
              "subId": "",
              "createNumbers": true,
              "isSelf": false,
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "Example Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "DefaultNumber": {
        "title": "DefaultNumber",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "campaignId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18885852294",
          "displayNumber": "+18885852294",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18885852294",
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "allocationDT": "2021-02-08T23:56:26.0457102Z",
          "lastBillDT": "2021-03-08T00:00:00Z",
          "nextChargeDT": "2021-04-06T00:00:00Z",
          "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 8,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "888",
            "isTollFree": true
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "PNZFWQO0",
          "id": "PNZFWQO0",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "AffiliateNumber3": {
        "title": "AffiliateNumber3",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "campaignId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "localNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings4"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate3"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18336371466",
          "localNumber": "(833) 637-1466",
          "displayNumber": "18336371466",
          "provider": "telnyx",
          "providerAccountId": "1299489388324979809",
          "providerId": "1362385882509739900",
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "allocationDT": "2020-05-01T17:37:35.3481506Z",
          "lastBillDT": "2021-03-01T00:00:00Z",
          "nextChargeDT": "2021-03-30T00:00:00Z",
          "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 1,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": true
          },
          "tags": [],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": false,
          "carrierNumberId": "",
          "affiliate": {
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "id": "1362385882509739900",
          "name": "Skype3",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "AssignmentSettings4": {
        "title": "AssignmentSettings4",
        "required": [
          "countryCode",
          "isTollFree"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "areaCode": {
            "type": "string"
          }
        },
        "example": {
          "countryCode": "US",
          "isTollFree": true
        }
      },
      "Affiliate7": {
        "title": "Affiliate7",
        "required": [
          "payoutConversionSetting",
          "payoutConversionSettings",
          "subId",
          "createNumbers",
          "isSelf",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "payoutConversionSetting": {
            "$ref": "#/components/schemas/PayoutConversionSetting1"
          },
          "payoutConversionSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutConversionSetting5"
            },
            "description": ""
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "payoutConversionSetting": {
            "id": "PA05bad0a21c3240589e5be0bd6821eac9",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 7,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "convertedCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "payoutConversionSettings": [
            {
              "id": "PA05bad0a21c3240589e5be0bd6821eac9",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 7,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "convertedCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            {
              "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
              "priority": 1,
              "isRevShare": true,
              "payoutAmount": -1,
              "revSharePercentage": 50,
              "revShareMaxPayoutAmount": 10,
              "revShareMinPayoutAmount": 1,
              "payoutConversionType": "convertedCall",
              "payoutConversionArgs": {
                "startTimerEvent": "OnConnectedCall"
              },
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "deDupeSetting": {
                "secondsFromLastCall": -1
              }
            }
          ],
          "subId": "",
          "createNumbers": true,
          "isSelf": false,
          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "name": "Example Publisher",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "PayoutConversionSetting5": {
        "title": "PayoutConversionSetting5",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "payoutConversionArgs": {
            "$ref": "#/components/schemas/PayoutConversionArgs"
          }
        },
        "example": {
          "id": "PA05bad0a21c3240589e5be0bd6821eac9",
          "priority": 0,
          "isRevShare": false,
          "payoutAmount": 7,
          "revSharePercentage": -1,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "convertedCall",
          "isGlobal": false,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          }
        }
      },
      "PayoutConversionArgs": {
        "title": "PayoutConversionArgs",
        "required": [
          "startTimerEvent"
        ],
        "type": "object",
        "properties": {
          "startTimerEvent": {
            "type": "string"
          }
        },
        "example": {
          "startTimerEvent": "OnConnectedCall"
        }
      },
      "PubNumberEnrichmentUrls1": {
        "title": "PubNumberEnrichmentUrls1",
        "required": [
          "_1362385882509739900",
          "_PNZFWQO0"
        ],
        "type": "object",
        "properties": {
          "_1362385882509739900": {
            "type": "string"
          },
          "_PNZFWQO0": {
            "type": "string"
          }
        },
        "example": {
          "_1362385882509739900": "https://display.ringba.com/enrich/1362385882509739900?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2",
          "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
        }
      },
      "AddPublisherNumbertoaCampaignRequest": {
        "title": "AddPublisherNumbertoaCampaignRequest",
        "required": [
          "numberId"
        ],
        "type": "object",
        "properties": {
          "numberId": {
            "type": "string"
          }
        },
        "example": {
          "numberId": "{{numberId}}"
        }
      },
      "AddPublisherNumbertoaCampaign": {
        "title": "AddPublisherNumbertoaCampaign",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign7"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls1"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TRe154a076-bbeb-4d37-98c7-7a360a0f8bb4",
          "campaign": {
            "defaultPayout": {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18336371466",
                "localNumber": "(833) 637-1466",
                "displayNumber": "18336371466",
                "provider": "telnyx",
                "providerAccountId": "1299489388324979809",
                "providerId": "1362385882509739900",
                "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                "allocationDT": "2020-05-01T17:37:35.3481506Z",
                "lastBillDT": "2021-03-01T00:00:00Z",
                "nextChargeDT": "2021-03-30T00:00:00Z",
                "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "tags": [],
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": false,
                "carrierNumberId": "",
                "affiliate": {
                  "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                  "subId": "",
                  "createNumbers": true,
                  "accessToRecordings": true,
                  "userIds": [
                    "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                  ],
                  "isSelf": false,
                  "name": "Example Publisher",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "id": "1362385882509739900",
                "name": "Skype3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              },
              {
                "phoneNumber": "+18885852294",
                "displayNumber": "+18885852294",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18885852294",
                "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                "allocationDT": "2021-02-08T23:56:26.0457102Z",
                "lastBillDT": "2021-03-08T00:00:00Z",
                "nextChargeDT": "2021-04-06T00:00:00Z",
                "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 8,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "areaCode": "888",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "PNZFWQO0",
                "id": "PNZFWQO0",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Pacific Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSetting": {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                "payoutConversionSettings": [
                  {
                    "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                    "priority": 0,
                    "isRevShare": false,
                    "payoutAmount": 7,
                    "revSharePercentage": -1,
                    "revShareMaxPayoutAmount": -1,
                    "revShareMinPayoutAmount": -1,
                    "payoutConversionType": "convertedCall",
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    }
                  },
                  {
                    "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                    "priority": 1,
                    "isRevShare": true,
                    "payoutAmount": -1,
                    "revSharePercentage": 50,
                    "revShareMaxPayoutAmount": 10,
                    "revShareMinPayoutAmount": 1,
                    "payoutConversionType": "convertedCall",
                    "payoutConversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    },
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": -1
                    }
                  }
                ],
                "subId": "",
                "createNumbers": true,
                "isSelf": false,
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "payoutConversionSettings": [],
                "createNumbers": false,
                "isSelf": false,
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "Example Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_1362385882509739900": "https://display.ringba.com/enrich/1362385882509739900?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2",
            "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": true,
            "enabled": true
          }
        }
      },
      "Campaign7": {
        "title": "Campaign7",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerDraftId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerDraftId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber3"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate9"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18336371466",
              "localNumber": "(833) 637-1466",
              "displayNumber": "18336371466",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362385882509739900",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2020-05-01T17:37:35.3481506Z",
              "lastBillDT": "2021-03-01T00:00:00Z",
              "nextChargeDT": "2021-03-30T00:00:00Z",
              "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "id": "1362385882509739900",
              "name": "Skype3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18885852294",
              "displayNumber": "+18885852294",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18885852294",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2021-02-08T23:56:26.0457102Z",
              "lastBillDT": "2021-03-08T00:00:00Z",
              "nextChargeDT": "2021-04-06T00:00:00Z",
              "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "888",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "PNZFWQO0",
              "id": "PNZFWQO0",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSetting": {
                "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 7,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "convertedCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "payoutConversionSettings": [
                {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                {
                  "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                  "priority": 1,
                  "isRevShare": true,
                  "payoutAmount": -1,
                  "revSharePercentage": 50,
                  "revShareMaxPayoutAmount": 10,
                  "revShareMinPayoutAmount": 1,
                  "payoutConversionType": "convertedCall",
                  "payoutConversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  },
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": -1
                  }
                }
              ],
              "subId": "",
              "createNumbers": true,
              "isSelf": false,
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "payoutConversionSettings": [],
              "createNumbers": false,
              "isSelf": false,
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "Example Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "Affiliate9": {
        "title": "Affiliate9",
        "required": [
          "payoutConversionSettings",
          "createNumbers",
          "isSelf",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "payoutConversionSetting": {
            "$ref": "#/components/schemas/PayoutConversionSetting1"
          },
          "payoutConversionSettings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PayoutConversionSetting7"
                },
                {
                  "type": "string"
                }
              ]
            },
            "description": ""
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "payoutConversionSetting": {
            "id": "PA05bad0a21c3240589e5be0bd6821eac9",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 7,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "convertedCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "payoutConversionSettings": [
            {
              "id": "PA05bad0a21c3240589e5be0bd6821eac9",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 7,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "convertedCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            {
              "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
              "priority": 1,
              "isRevShare": true,
              "payoutAmount": -1,
              "revSharePercentage": 50,
              "revShareMaxPayoutAmount": 10,
              "revShareMinPayoutAmount": 1,
              "payoutConversionType": "convertedCall",
              "payoutConversionArgs": {
                "startTimerEvent": "OnConnectedCall"
              },
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "deDupeSetting": {
                "secondsFromLastCall": -1
              }
            }
          ],
          "subId": "",
          "createNumbers": true,
          "isSelf": false,
          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "name": "Example Publisher",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "PayoutConversionSetting7": {
        "title": "PayoutConversionSetting7",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "payoutConversionArgs": {
            "$ref": "#/components/schemas/PayoutConversionArgs"
          }
        },
        "example": {
          "id": "PA05bad0a21c3240589e5be0bd6821eac9",
          "priority": 0,
          "isRevShare": false,
          "payoutAmount": 7,
          "revSharePercentage": -1,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "convertedCall",
          "isGlobal": false,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          }
        }
      },
      "RemoveDefaultNumberfromaCampaignRequest": {
        "title": "RemoveDefaultNumberfromaCampaignRequest",
        "required": [
          "numberId"
        ],
        "type": "object",
        "properties": {
          "numberId": {
            "type": "string"
          }
        },
        "example": {
          "numberId": "{{numberId}}"
        }
      },
      "RemoveDefaultNumberfromaCampaign": {
        "title": "RemoveDefaultNumberfromaCampaign",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign8"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls1"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TRa81a2f2e-de7d-43ef-9151-0d31bdfbc184",
          "campaign": {
            "defaultPayout": {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18336371466",
                "localNumber": "(833) 637-1466",
                "displayNumber": "18336371466",
                "provider": "telnyx",
                "providerAccountId": "1299489388324979809",
                "providerId": "1362385882509739900",
                "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                "allocationDT": "2020-05-01T17:37:35.3481506Z",
                "lastBillDT": "2021-03-01T00:00:00Z",
                "nextChargeDT": "2021-03-30T00:00:00Z",
                "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "tags": [],
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": false,
                "carrierNumberId": "",
                "affiliate": {
                  "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                  "subId": "",
                  "createNumbers": true,
                  "accessToRecordings": true,
                  "userIds": [
                    "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                  ],
                  "isSelf": false,
                  "name": "Example Publisher",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "id": "1362385882509739900",
                "name": "Skype3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              },
              {
                "phoneNumber": "+18885852294",
                "displayNumber": "+18885852294",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18885852294",
                "campaignId": "",
                "allocationDT": "2021-02-08T23:56:26.0457102Z",
                "lastBillDT": "2021-03-08T00:00:00Z",
                "nextChargeDT": "2021-04-06T00:00:00Z",
                "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 8,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "areaCode": "888",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "PNZFWQO0",
                "id": "PNZFWQO0",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Pacific Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSetting": {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                "payoutConversionSettings": [
                  {
                    "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                    "priority": 0,
                    "isRevShare": false,
                    "payoutAmount": 7,
                    "revSharePercentage": -1,
                    "revShareMaxPayoutAmount": -1,
                    "revShareMinPayoutAmount": -1,
                    "payoutConversionType": "convertedCall",
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    }
                  },
                  {
                    "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                    "priority": 1,
                    "isRevShare": true,
                    "payoutAmount": -1,
                    "revSharePercentage": 50,
                    "revShareMaxPayoutAmount": 10,
                    "revShareMinPayoutAmount": 1,
                    "payoutConversionType": "convertedCall",
                    "payoutConversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    },
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": -1
                    }
                  }
                ],
                "subId": "",
                "createNumbers": true,
                "isSelf": false,
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "Example Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_1362385882509739900": "https://display.ringba.com/enrich/1362385882509739900?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2",
            "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": true,
            "enabled": true
          }
        }
      },
      "Campaign8": {
        "title": "Campaign8",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerDraftId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerDraftId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber3"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate7"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18336371466",
              "localNumber": "(833) 637-1466",
              "displayNumber": "18336371466",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362385882509739900",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2020-05-01T17:37:35.3481506Z",
              "lastBillDT": "2021-03-01T00:00:00Z",
              "nextChargeDT": "2021-03-30T00:00:00Z",
              "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "id": "1362385882509739900",
              "name": "Skype3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18885852294",
              "displayNumber": "+18885852294",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18885852294",
              "campaignId": "",
              "allocationDT": "2021-02-08T23:56:26.0457102Z",
              "lastBillDT": "2021-03-08T00:00:00Z",
              "nextChargeDT": "2021-04-06T00:00:00Z",
              "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "888",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "PNZFWQO0",
              "id": "PNZFWQO0",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSetting": {
                "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 7,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "convertedCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "payoutConversionSettings": [
                {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                {
                  "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                  "priority": 1,
                  "isRevShare": true,
                  "payoutAmount": -1,
                  "revSharePercentage": 50,
                  "revShareMaxPayoutAmount": 10,
                  "revShareMinPayoutAmount": 1,
                  "payoutConversionType": "convertedCall",
                  "payoutConversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  },
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": -1
                  }
                }
              ],
              "subId": "",
              "createNumbers": true,
              "isSelf": false,
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "Example Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "AddPublishertoaCampaignRequest": {
        "title": "AddPublishertoaCampaignRequest",
        "required": [
          "publisherId"
        ],
        "type": "object",
        "properties": {
          "publisherId": {
            "type": "string"
          }
        },
        "example": {
          "publisherId": "{{publisherId}}"
        }
      },
      "AddPublishertoaCampaign": {
        "title": "AddPublishertoaCampaign",
        "required": [
          "transactionId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign9"
          }
        },
        "example": {
          "transactionId": "TR72cbc559-aab0-407c-9087-cf5d6550da2f",
          "campaign": {
            "defaultPayout": {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18336371466",
                "localNumber": "(833) 637-1466",
                "displayNumber": "18336371466",
                "provider": "telnyx",
                "providerAccountId": "1299489388324979809",
                "providerId": "1362385882509739900",
                "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                "allocationDT": "2020-05-01T17:37:35.3481506Z",
                "lastBillDT": "2021-03-01T00:00:00Z",
                "nextChargeDT": "2021-03-30T00:00:00Z",
                "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "tags": [],
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": false,
                "carrierNumberId": "",
                "affiliate": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                  "subId": "",
                  "createNumbers": true,
                  "accessToRecordings": true,
                  "userIds": [
                    "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                  ],
                  "isSelf": false,
                  "name": "Example Publisher",
                  "enabled": true,
                  "version": 1
                },
                "id": "1362385882509739900",
                "name": "Skype3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "name": "Example Buyer Co.",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Pacific Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSetting": {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                "payoutConversionSettings": [
                  {
                    "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                    "priority": 0,
                    "isRevShare": false,
                    "payoutAmount": 7,
                    "revSharePercentage": -1,
                    "revShareMaxPayoutAmount": -1,
                    "revShareMinPayoutAmount": -1,
                    "payoutConversionType": "convertedCall",
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    }
                  },
                  {
                    "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                    "priority": 1,
                    "isRevShare": true,
                    "payoutAmount": -1,
                    "revSharePercentage": 50,
                    "revShareMaxPayoutAmount": 10,
                    "revShareMinPayoutAmount": 1,
                    "payoutConversionType": "convertedCall",
                    "payoutConversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    },
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": -1
                    }
                  }
                ],
                "subId": "",
                "createNumbers": true,
                "isSelf": false,
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "payoutConversionSettings": [],
                "createNumbers": false,
                "isSelf": false,
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "Example Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Campaign9": {
        "title": "Campaign9",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerDraftId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerDraftId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber6"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate9"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18336371466",
              "localNumber": "(833) 637-1466",
              "displayNumber": "18336371466",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362385882509739900",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2020-05-01T17:37:35.3481506Z",
              "lastBillDT": "2021-03-01T00:00:00Z",
              "nextChargeDT": "2021-03-30T00:00:00Z",
              "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "affiliate": {
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "enabled": true,
                "version": 1
              },
              "id": "1362385882509739900",
              "name": "Skype3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSetting": {
                "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 7,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "convertedCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "payoutConversionSettings": [
                {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                {
                  "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                  "priority": 1,
                  "isRevShare": true,
                  "payoutAmount": -1,
                  "revSharePercentage": 50,
                  "revShareMaxPayoutAmount": 10,
                  "revShareMinPayoutAmount": 1,
                  "payoutConversionType": "convertedCall",
                  "payoutConversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  },
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": -1
                  }
                }
              ],
              "subId": "",
              "createNumbers": true,
              "isSelf": false,
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "payoutConversionSettings": [],
              "createNumbers": false,
              "isSelf": false,
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "Example Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "AffiliateNumber6": {
        "title": "AffiliateNumber6",
        "required": [
          "phoneNumber",
          "localNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "campaignId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "tags",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "affiliate",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "localNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate3"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18336371466",
          "localNumber": "(833) 637-1466",
          "displayNumber": "18336371466",
          "provider": "telnyx",
          "providerAccountId": "1299489388324979809",
          "providerId": "1362385882509739900",
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "allocationDT": "2020-05-01T17:37:35.3481506Z",
          "lastBillDT": "2021-03-01T00:00:00Z",
          "nextChargeDT": "2021-03-30T00:00:00Z",
          "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 1,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": true
          },
          "tags": [],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": false,
          "carrierNumberId": "",
          "affiliate": {
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "enabled": true,
            "version": 1
          },
          "id": "1362385882509739900",
          "name": "Skype3",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "RemovePublisherfromaCampaign": {
        "title": "RemovePublisherfromaCampaign",
        "required": [
          "transactionId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign10"
          }
        },
        "example": {
          "transactionId": "TR2dfb64f5-f2b9-4df4-b03f-146c672e0ee8",
          "campaign": {
            "defaultPayout": {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18336371466",
                "localNumber": "(833) 637-1466",
                "displayNumber": "18336371466",
                "provider": "telnyx",
                "providerAccountId": "1299489388324979809",
                "providerId": "1362385882509739900",
                "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
                "allocationDT": "2020-05-01T17:37:35.3481506Z",
                "lastBillDT": "2021-03-01T00:00:00Z",
                "nextChargeDT": "2021-03-30T00:00:00Z",
                "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "tags": [],
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": false,
                "carrierNumberId": "",
                "affiliate": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                  "subId": "",
                  "createNumbers": true,
                  "accessToRecordings": true,
                  "userIds": [
                    "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                  ],
                  "isSelf": false,
                  "name": "Example Publisher",
                  "enabled": true,
                  "version": 1
                },
                "id": "1362385882509739900",
                "name": "Skype3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "name": "Example Buyer Co.",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Pacific Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSetting": {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                "payoutConversionSettings": [
                  {
                    "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                    "priority": 0,
                    "isRevShare": false,
                    "payoutAmount": 7,
                    "revSharePercentage": -1,
                    "revShareMaxPayoutAmount": -1,
                    "revShareMinPayoutAmount": -1,
                    "payoutConversionType": "convertedCall",
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    }
                  },
                  {
                    "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                    "priority": 1,
                    "isRevShare": true,
                    "payoutAmount": -1,
                    "revSharePercentage": 50,
                    "revShareMaxPayoutAmount": 10,
                    "revShareMinPayoutAmount": 1,
                    "payoutConversionType": "convertedCall",
                    "payoutConversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    },
                    "isGlobal": false,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1,
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "concurrencyCap": -1,
                    "deDupeSetting": {
                      "secondsFromLastCall": -1
                    }
                  }
                ],
                "subId": "",
                "createNumbers": true,
                "isSelf": false,
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "Example Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Campaign10": {
        "title": "Campaign10",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerDraftId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerDraftId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber6"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate7"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "offerDraftId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18336371466",
              "localNumber": "(833) 637-1466",
              "displayNumber": "18336371466",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362385882509739900",
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "allocationDT": "2020-05-01T17:37:35.3481506Z",
              "lastBillDT": "2021-03-01T00:00:00Z",
              "nextChargeDT": "2021-03-30T00:00:00Z",
              "lastChargeDT": "2021-02-27T23:00:11.7797589Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "affiliate": {
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "enabled": true,
                "version": 1
              },
              "id": "1362385882509739900",
              "name": "Skype3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSetting": {
                "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 7,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "convertedCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              },
              "payoutConversionSettings": [
                {
                  "id": "PA05bad0a21c3240589e5be0bd6821eac9",
                  "priority": 0,
                  "isRevShare": false,
                  "payoutAmount": 7,
                  "revSharePercentage": -1,
                  "revShareMaxPayoutAmount": -1,
                  "revShareMinPayoutAmount": -1,
                  "payoutConversionType": "convertedCall",
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  }
                },
                {
                  "id": "PA6f9aade44d1e48d58e51993cac2d1cab",
                  "priority": 1,
                  "isRevShare": true,
                  "payoutAmount": -1,
                  "revSharePercentage": 50,
                  "revShareMaxPayoutAmount": 10,
                  "revShareMinPayoutAmount": 1,
                  "payoutConversionType": "convertedCall",
                  "payoutConversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  },
                  "isGlobal": false,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1,
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "concurrencyCap": -1,
                  "deDupeSetting": {
                    "secondsFromLastCall": -1
                  }
                }
              ],
              "subId": "",
              "createNumbers": true,
              "isSelf": false,
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "Example Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "GetJsTagsforaNumber": {
        "title": "GetJsTagsforaNumber",
        "required": [
          "transactionId",
          "tag"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag1"
          }
        },
        "example": {
          "transactionId": "TR90fbdb0b-fb12-4b50-a246-830003ae4d2e",
          "tag": {
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "numberId": "PNZFWQO0",
            "previousNumber": {
              "e164Number": "+18885551234",
              "countryCode": "1",
              "formatedNumber": "(888) 555-1234",
              "numberParts": [
                "(888)",
                "555",
                "1234"
              ]
            },
            "id": "JS1884eadf96674e26b4bd17f6deff28cf",
            "name": "Example Tag",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 2
          }
        }
      },
      "Tag1": {
        "title": "Tag1",
        "required": [
          "campaignId",
          "publisherId",
          "numberId",
          "previousNumber",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "publisherId": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "previousNumber": {
            "$ref": "#/components/schemas/PreviousNumber"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "numberId": "PNZFWQO0",
          "previousNumber": {
            "e164Number": "+18885551234",
            "countryCode": "1",
            "formatedNumber": "(888) 555-1234",
            "numberParts": [
              "(888)",
              "555",
              "1234"
            ]
          },
          "id": "JS1884eadf96674e26b4bd17f6deff28cf",
          "name": "Example Tag",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 2
        }
      },
      "CreateNewJsTagforaNumberRequest": {
        "title": "CreateNewJsTagforaNumberRequest",
        "required": [
          "name",
          "e164ExistingNumber",
          "hasNumberPool",
          "numberPoolId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "e164ExistingNumber": {
            "type": "string"
          },
          "hasNumberPool": {
            "type": "boolean"
          },
          "numberPoolId": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "name": "Example Tag",
          "e164ExistingNumber": "+18885551234",
          "hasNumberPool": false,
          "numberPoolId": null
        }
      },
      "CreateNewJsTagforaNumber": {
        "title": "CreateNewJsTagforaNumber",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign11"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags1"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "Campaign11": {
        "title": "Campaign11",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "callIVRTree",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber2"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "callIVRTree": {
            "$ref": "#/components/schemas/CallIVRTree"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate17"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CallIVRTree": {
        "title": "CallIVRTree",
        "required": [
          "root",
          "isFinalized",
          "nodes",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "root": {
            "$ref": "#/components/schemas/Root"
          },
          "isFinalized": {
            "type": "boolean"
          },
          "nodes": {
            "$ref": "#/components/schemas/Nodes"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Root": {
        "title": "Root",
        "required": [
          "id",
          "stepName",
          "nodeTypeId",
          "childLinks",
          "isValid",
          "settings"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "nodeTypeId": {
            "type": "string"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildLink"
            },
            "description": ""
          },
          "isValid": {
            "type": "boolean"
          },
          "settings": {
            "type": "object"
          }
        },
        "example": {
          "id": "root",
          "stepName": "root",
          "nodeTypeId": "RootNode",
          "childLinks": [
            {
              "childNodeId": "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7",
              "onSuccess": true,
              "criteria": []
            }
          ],
          "isValid": false,
          "settings": {}
        }
      },
      "ChildLink": {
        "title": "ChildLink",
        "required": [
          "childNodeId",
          "onSuccess",
          "criteria"
        ],
        "type": "object",
        "properties": {
          "childNodeId": {
            "type": "string"
          },
          "onSuccess": {
            "type": "boolean"
          },
          "criteria": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "childNodeId": "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7",
          "onSuccess": true,
          "criteria": []
        }
      },
      "Nodes": {
        "title": "Nodes",
        "required": [
          "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7",
          "recordNode_e41-625f-4695-9811-2c4f5d658473",
          "routerNode_22e-45d2-4155-a9ab-0c3db0abc485",
          "menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc",
          "hangupNode_035-d4dd-4995-98fd-3888b1665f67",
          "gatherNode_247-b0ca-4446-9eda-1906948cf8d5",
          "hangupNode_3d0-291a-43a2-81dc-f9d3a85007e9"
        ],
        "type": "object",
        "properties": {
          "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7": {
            "$ref": "#/components/schemas/HoursOfOperationNode3c608194e02AbcbB9c684fa83e7"
          },
          "recordNode_e41-625f-4695-9811-2c4f5d658473": {
            "$ref": "#/components/schemas/RecordNodeE41625f469598112c4f5d658473"
          },
          "routerNode_22e-45d2-4155-a9ab-0c3db0abc485": {
            "$ref": "#/components/schemas/RouterNode22e45d24155A9ab0c3db0abc485"
          },
          "menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc": {
            "$ref": "#/components/schemas/MenuNode9b1C8b041858fa76c6631b178cc"
          },
          "hangupNode_035-d4dd-4995-98fd-3888b1665f67": {
            "$ref": "#/components/schemas/HangupNode035D4dd499598fd3888b1665f67"
          },
          "gatherNode_247-b0ca-4446-9eda-1906948cf8d5": {
            "$ref": "#/components/schemas/GatherNode247B0ca44469eda1906948cf8d5"
          },
          "hangupNode_3d0-291a-43a2-81dc-f9d3a85007e9": {
            "$ref": "#/components/schemas/HangupNode3d0291a43a281dcF9d3a85007e9"
          }
        }
      },
      "HoursOfOperationNode3c608194e02AbcbB9c684fa83e7": {
        "title": "HoursOfOperationNode3c608194e02AbcbB9c684fa83e7",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildLink1"
            },
            "description": ""
          }
        },
        "example": {
          "node": {
            "isValid": true,
            "id": "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7",
            "stepName": "Hours Filter",
            "nodeTypeId": "HoursOfOperationNode",
            "settings": {
              "timeZoneId": "Mountain Standard Time",
              "hourseOfOperationSetting": [
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "isClosed": true
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "isClosed": true
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "isClosed": true
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "isClosed": true
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "isClosed": true
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "isClosed": true
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "isClosed": true
                }
              ]
            }
          },
          "childLinks": [
            {
              "name": "Closed",
              "childNodeId": "recordNode_e41-625f-4695-9811-2c4f5d658473",
              "onSuccess": false,
              "criteria": []
            },
            {
              "name": "Open",
              "childNodeId": "routerNode_22e-45d2-4155-a9ab-0c3db0abc485",
              "onSuccess": true,
              "criteria": []
            }
          ]
        }
      },
      "Node": {
        "title": "Node",
        "required": [
          "isValid",
          "id",
          "stepName",
          "nodeTypeId",
          "settings"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "nodeTypeId": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          }
        },
        "example": {
          "isValid": true,
          "id": "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7",
          "stepName": "Hours Filter",
          "nodeTypeId": "HoursOfOperationNode",
          "settings": {
            "timeZoneId": "Mountain Standard Time",
            "hourseOfOperationSetting": [
              {
                "openTime": {
                  "hour": 9,
                  "minute": 0
                },
                "closeTime": {
                  "hour": 17,
                  "minute": 0
                },
                "isClosed": true
              },
              {
                "openTime": {
                  "hour": 9,
                  "minute": 0
                },
                "closeTime": {
                  "hour": 17,
                  "minute": 0
                },
                "isClosed": true
              },
              {
                "openTime": {
                  "hour": 9,
                  "minute": 0
                },
                "closeTime": {
                  "hour": 17,
                  "minute": 0
                },
                "isClosed": true
              },
              {
                "openTime": {
                  "hour": 9,
                  "minute": 0
                },
                "closeTime": {
                  "hour": 17,
                  "minute": 0
                },
                "isClosed": true
              },
              {
                "openTime": {
                  "hour": 9,
                  "minute": 0
                },
                "closeTime": {
                  "hour": 17,
                  "minute": 0
                },
                "isClosed": true
              },
              {
                "openTime": {
                  "hour": 9,
                  "minute": 0
                },
                "closeTime": {
                  "hour": 17,
                  "minute": 0
                },
                "isClosed": true
              },
              {
                "openTime": {
                  "hour": 9,
                  "minute": 0
                },
                "closeTime": {
                  "hour": 17,
                  "minute": 0
                },
                "isClosed": true
              }
            ]
          }
        }
      },
      "Settings": {
        "title": "Settings",
        "required": [
          "timeZoneId",
          "hourseOfOperationSetting"
        ],
        "type": "object",
        "properties": {
          "timeZoneId": {
            "type": "string"
          },
          "hourseOfOperationSetting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HourseOfOperationSetting"
            },
            "description": ""
          }
        },
        "example": {
          "timeZoneId": "Mountain Standard Time",
          "hourseOfOperationSetting": [
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "isClosed": true
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "isClosed": true
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "isClosed": true
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "isClosed": true
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "isClosed": true
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "isClosed": true
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "isClosed": true
            }
          ]
        }
      },
      "HourseOfOperationSetting": {
        "title": "HourseOfOperationSetting",
        "required": [
          "openTime",
          "closeTime",
          "isClosed"
        ],
        "type": "object",
        "properties": {
          "openTime": {
            "$ref": "#/components/schemas/OpenTime"
          },
          "closeTime": {
            "$ref": "#/components/schemas/CloseTime"
          },
          "isClosed": {
            "type": "boolean"
          }
        },
        "example": {
          "openTime": {
            "hour": 9,
            "minute": 0
          },
          "closeTime": {
            "hour": 17,
            "minute": 0
          },
          "isClosed": true
        }
      },
      "ChildLink1": {
        "title": "ChildLink1",
        "required": [
          "name",
          "childNodeId",
          "onSuccess",
          "criteria"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "childNodeId": {
            "type": "string"
          },
          "onSuccess": {
            "type": "boolean"
          },
          "criteria": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "name": "Closed",
          "childNodeId": "recordNode_e41-625f-4695-9811-2c4f5d658473",
          "onSuccess": false,
          "criteria": []
        }
      },
      "RecordNodeE41625f469598112c4f5d658473": {
        "title": "RecordNodeE41625f469598112c4f5d658473",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node1"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "node": {
            "isValid": true,
            "id": "recordNode_e41-625f-4695-9811-2c4f5d658473",
            "stepName": "Closed: Voice Mail",
            "nodeTypeId": "RecordNode",
            "settings": {
              "timeOutInSeconds": 5,
              "maxLength": 240
            }
          },
          "childLinks": []
        }
      },
      "Node1": {
        "title": "Node1",
        "required": [
          "isValid",
          "id",
          "stepName",
          "nodeTypeId",
          "settings"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "nodeTypeId": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings1"
          }
        },
        "example": {
          "isValid": true,
          "id": "recordNode_e41-625f-4695-9811-2c4f5d658473",
          "stepName": "Closed: Voice Mail",
          "nodeTypeId": "RecordNode",
          "settings": {
            "timeOutInSeconds": 5,
            "maxLength": 240
          }
        }
      },
      "Settings1": {
        "title": "Settings1",
        "required": [
          "timeOutInSeconds",
          "maxLength"
        ],
        "type": "object",
        "properties": {
          "timeOutInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "timeOutInSeconds": 5,
          "maxLength": 240
        }
      },
      "RouterNode22e45d24155A9ab0c3db0abc485": {
        "title": "RouterNode22e45d24155A9ab0c3db0abc485",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node2"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildLink1"
            },
            "description": ""
          }
        },
        "example": {
          "node": {
            "isValid": true,
            "id": "routerNode_22e-45d2-4155-a9ab-0c3db0abc485",
            "stepName": "Open: Router",
            "nodeTypeId": "RouterNode",
            "settings": {}
          },
          "childLinks": [
            {
              "name": "Route 1",
              "childNodeId": "menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc",
              "onSuccess": true,
              "criteria": []
            }
          ]
        }
      },
      "Node2": {
        "title": "Node2",
        "required": [
          "isValid",
          "id",
          "stepName",
          "nodeTypeId",
          "settings"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "nodeTypeId": {
            "type": "string"
          },
          "settings": {
            "type": "object"
          }
        },
        "example": {
          "isValid": true,
          "id": "routerNode_22e-45d2-4155-a9ab-0c3db0abc485",
          "stepName": "Open: Router",
          "nodeTypeId": "RouterNode",
          "settings": {}
        }
      },
      "MenuNode9b1C8b041858fa76c6631b178cc": {
        "title": "MenuNode9b1C8b041858fa76c6631b178cc",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node3"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildLink3"
            },
            "description": ""
          }
        }
      },
      "Node3": {
        "title": "Node3",
        "required": [
          "isValid",
          "id",
          "stepName",
          "nodeTypeId",
          "settings"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "nodeTypeId": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings2"
          }
        },
        "example": {
          "isValid": true,
          "id": "menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc",
          "stepName": "Route 1: Menu",
          "nodeTypeId": "MenuNode",
          "settings": {
            "menuPrompt": {
              "say": {
                "text": "This is a prompt",
                "groupName": "Message"
              }
            },
            "menuTagName": "IVR Menu",
            "menuItems": "1"
          }
        }
      },
      "Settings2": {
        "title": "Settings2",
        "required": [
          "menuPrompt",
          "menuTagName",
          "menuItems"
        ],
        "type": "object",
        "properties": {
          "menuPrompt": {
            "$ref": "#/components/schemas/MenuPrompt"
          },
          "menuTagName": {
            "type": "string"
          },
          "menuItems": {
            "type": "string"
          }
        },
        "example": {
          "menuPrompt": {
            "say": {
              "text": "This is a prompt",
              "groupName": "Message"
            }
          },
          "menuTagName": "IVR Menu",
          "menuItems": "1"
        }
      },
      "MenuPrompt": {
        "title": "MenuPrompt",
        "required": [
          "say"
        ],
        "type": "object",
        "properties": {
          "say": {
            "$ref": "#/components/schemas/Say"
          }
        },
        "example": {
          "say": {
            "text": "This is a prompt",
            "groupName": "Message"
          }
        }
      },
      "Say": {
        "title": "Say",
        "required": [
          "text",
          "groupName"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        },
        "example": {
          "text": "This is a prompt",
          "groupName": "Message"
        }
      },
      "ChildLink3": {
        "title": "ChildLink3",
        "required": [
          "name",
          "childNodeId",
          "onSuccess",
          "criteria"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "childNodeId": {
            "type": "string"
          },
          "onSuccess": {
            "type": "boolean"
          },
          "criteria": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Criterion"
                },
                {
                  "$ref": "#/components/schemas/Criterion1"
                }
              ]
            },
            "description": ""
          }
        },
        "example": {
          "name": "OnFailure",
          "childNodeId": "hangupNode_035-d4dd-4995-98fd-3888b1665f67",
          "onSuccess": false,
          "criteria": []
        }
      },
      "Criterion": {
        "title": "Criterion",
        "type": "object",
        "properties": {
          "tagCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagCriterion"
            },
            "description": ""
          }
        }
      },
      "TagCriterion": {
        "title": "TagCriterion",
        "required": [
          "tagIds",
          "comparisonType",
          "value",
          "isNegativeMatch",
          "isNumber"
        ],
        "type": "object",
        "properties": {
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "comparisonType": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "isNegativeMatch": {
            "type": "boolean"
          },
          "isNumber": {
            "type": "boolean"
          }
        },
        "example": {
          "tagIds": [
            "menu:menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc"
          ],
          "comparisonType": "EQUALS",
          "value": "1",
          "isNegativeMatch": false,
          "isNumber": false
        }
      },
      "Criterion1": {
        "title": "Criterion1",
        "required": [
          "tagCriteria"
        ],
        "type": "object",
        "properties": {
          "tagCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagCriterion"
            },
            "description": ""
          }
        },
        "example": {
          "tagCriteria": [
            {
              "tagIds": [
                "menu:menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc"
              ],
              "comparisonType": "EQUALS",
              "value": "1",
              "isNegativeMatch": false,
              "isNumber": false
            }
          ]
        }
      },
      "HangupNode035D4dd499598fd3888b1665f67": {
        "title": "HangupNode035D4dd499598fd3888b1665f67",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node2"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "node": {
            "isValid": true,
            "id": "hangupNode_035-d4dd-4995-98fd-3888b1665f67",
            "stepName": "On Failure: Hangup",
            "nodeTypeId": "HangupNode",
            "settings": {}
          },
          "childLinks": []
        }
      },
      "GatherNode247B0ca44469eda1906948cf8d5": {
        "title": "GatherNode247B0ca44469eda1906948cf8d5",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node5"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildLink1"
            },
            "description": ""
          }
        },
        "example": {
          "node": {
            "isValid": true,
            "id": "gatherNode_247-b0ca-4446-9eda-1906948cf8d5",
            "stepName": "Press 1: Gather",
            "nodeTypeId": "GatherNode",
            "settings": {
              "prompt": {
                "say": {
                  "text": "Gather message",
                  "groupName": "Message"
                }
              },
              "gatherTagName": "Gather"
            }
          },
          "childLinks": [
            {
              "name": "OnFailure",
              "childNodeId": "hangupNode_3d0-291a-43a2-81dc-f9d3a85007e9",
              "onSuccess": false,
              "criteria": []
            }
          ]
        }
      },
      "Node5": {
        "title": "Node5",
        "required": [
          "isValid",
          "id",
          "stepName",
          "nodeTypeId",
          "settings"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "nodeTypeId": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings3"
          }
        },
        "example": {
          "isValid": true,
          "id": "gatherNode_247-b0ca-4446-9eda-1906948cf8d5",
          "stepName": "Press 1: Gather",
          "nodeTypeId": "GatherNode",
          "settings": {
            "prompt": {
              "say": {
                "text": "Gather message",
                "groupName": "Message"
              }
            },
            "gatherTagName": "Gather"
          }
        }
      },
      "Settings3": {
        "title": "Settings3",
        "required": [
          "prompt",
          "gatherTagName"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/Prompt"
          },
          "gatherTagName": {
            "type": "string"
          }
        },
        "example": {
          "prompt": {
            "say": {
              "text": "Gather message",
              "groupName": "Message"
            }
          },
          "gatherTagName": "Gather"
        }
      },
      "Prompt": {
        "title": "Prompt",
        "required": [
          "say"
        ],
        "type": "object",
        "properties": {
          "say": {
            "$ref": "#/components/schemas/Say"
          }
        },
        "example": {
          "say": {
            "text": "Gather message",
            "groupName": "Message"
          }
        }
      },
      "HangupNode3d0291a43a281dcF9d3a85007e9": {
        "title": "HangupNode3d0291a43a281dcF9d3a85007e9",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node2"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "node": {
            "isValid": true,
            "id": "hangupNode_3d0-291a-43a2-81dc-f9d3a85007e9",
            "stepName": "On Failure: Hangup",
            "nodeTypeId": "HangupNode",
            "settings": {}
          },
          "childLinks": []
        }
      },
      "Affiliate17": {
        "title": "Affiliate17",
        "required": [
          "payoutConversionSettings",
          "createNumbers",
          "isSelf",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "payoutConversionSettings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "subId": {
            "type": "string"
          }
        },
        "example": {
          "payoutConversionSettings": [],
          "createNumbers": false,
          "isSelf": false,
          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
          "name": "You",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "JsTags1": {
        "title": "JsTags1",
        "required": [
          "jSa2b90017a080483990caef061b03c370"
        ],
        "type": "object",
        "properties": {
          "jSa2b90017a080483990caef061b03c370": {
            "$ref": "#/components/schemas/JSa2b90017a080483990caef061b03c370"
          }
        },
        "example": {
          "jSa2b90017a080483990caef061b03c370": {
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "numberId": "PNZFWQO0",
            "previousNumber": {
              "e164Number": "+18885551234",
              "countryCode": "1",
              "formatedNumber": "(888) 555-1234",
              "numberParts": [
                "(888)",
                "555",
                "1234"
              ]
            },
            "id": "JSa2b90017a080483990caef061b03c370",
            "name": "Example Tag",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 2
          }
        }
      },
      "JSa2b90017a080483990caef061b03c370": {
        "title": "JSa2b90017a080483990caef061b03c370",
        "required": [
          "campaignId",
          "publisherId",
          "numberId",
          "previousNumber",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "publisherId": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "previousNumber": {
            "$ref": "#/components/schemas/PreviousNumber"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "numberId": "PNZFWQO0",
          "previousNumber": {
            "e164Number": "+18885551234",
            "countryCode": "1",
            "formatedNumber": "(888) 555-1234",
            "numberParts": [
              "(888)",
              "555",
              "1234"
            ]
          },
          "id": "JSa2b90017a080483990caef061b03c370",
          "name": "Example Tag",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 2
        }
      },
      "ModifyJsTagforaNumberRequest": {
        "title": "ModifyJsTagforaNumberRequest",
        "required": [
          "name",
          "e164ExistingNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "e164ExistingNumber": {
            "type": "string"
          }
        },
        "example": {
          "name": "New Name",
          "e164ExistingNumber": "+18885559876"
        }
      },
      "ModifyJsTagforaNumber": {
        "title": "ModifyJsTagforaNumber",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign11"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags1"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "RemoveaJsTagfromaNumber": {
        "title": "RemoveaJsTagfromaNumber",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign11"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "AddTargetRoutetoaCampaignRequest": {
        "title": "AddTargetRoutetoaCampaignRequest",
        "required": [
          "targetid",
          "priority",
          "callConversion"
        ],
        "type": "object",
        "properties": {
          "targetid": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "callConversion": {
            "$ref": "#/components/schemas/CallConversion"
          }
        },
        "example": {
          "targetid": "{{targetId}}",
          "priority": {
            "priority": 2,
            "weight": 2
          },
          "callConversion": {
            "conversionType": "callLength",
            "conversionValue": 0,
            "conversionArgs": {
              "startTimerEvent": "OnConnectedCall",
              "callLengthInSeconds": 30
            }
          }
        }
      },
      "CallConversion": {
        "title": "CallConversion",
        "required": [
          "conversionType",
          "conversionValue",
          "conversionArgs"
        ],
        "type": "object",
        "properties": {
          "conversionType": {
            "type": "string"
          },
          "conversionValue": {
            "type": "integer",
            "format": "int32"
          },
          "conversionArgs": {
            "$ref": "#/components/schemas/ConversionArgs1"
          }
        },
        "example": {
          "conversionType": "callLength",
          "conversionValue": 0,
          "conversionArgs": {
            "startTimerEvent": "OnConnectedCall",
            "callLengthInSeconds": 30
          }
        }
      },
      "ConversionArgs1": {
        "title": "ConversionArgs1",
        "required": [
          "startTimerEvent",
          "callLengthInSeconds"
        ],
        "type": "object",
        "properties": {
          "startTimerEvent": {
            "type": "string"
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "startTimerEvent": "OnConnectedCall",
          "callLengthInSeconds": 30
        }
      },
      "AddTargetRoutetoaCampaignwithdefaulttargetsettings": {
        "title": "AddTargetRoutetoaCampaignwithdefaulttargetsettings",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign14"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls7"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TRa8b74eb5-5c70-4b95-bcaa-862d42fda9d1",
          "campaign": {
            "defaultPayout": {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PS72474b39788e4c0084d5306418f55d50",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18334013665",
                "displayNumber": "+18334013665",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18334013665",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "allocationDT": "2021-02-01T17:20:22.1504921Z",
                "lastBillDT": "2021-02-01T00:00:00Z",
                "nextChargeDT": "2021-02-27T00:00:00Z",
                "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "CLAOGNEH",
                "affiliate": {
                  "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                  "createNumbers": false,
                  "isSelf": true,
                  "name": "You",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "id": "CLAOGNEH",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR7492a41e3ba7453e809a9d7523307918",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Romance Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CRc9021a8fdee04af483097efc76c2ef88",
                "priority": {
                  "priority": 3,
                  "weight": 3
                },
                "callTarget": {
                  "id": "TAdef30c972ca149468e618900de78906f",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17205551235"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Phone Number Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed",
                    "conversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    }
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CRa815dd9785234d88a3ed50d808f40497",
                "priority": {
                  "priority": 2,
                  "weight": 2
                },
                "callTarget": {
                  "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17605550149"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "New Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSettings": [],
                "createNumbers": false,
                "isSelf": false,
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
            "name": "API Test",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_CLAOGNEH": "https://display.ringba.com/enrich/CLAOGNEH?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": false,
            "enabled": false
          }
        }
      },
      "Campaign14": {
        "title": "Campaign14",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber11"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route8"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate2"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PS72474b39788e4c0084d5306418f55d50",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18334013665",
              "displayNumber": "+18334013665",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18334013665",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "allocationDT": "2021-02-01T17:20:22.1504921Z",
              "lastBillDT": "2021-02-01T00:00:00Z",
              "nextChargeDT": "2021-02-27T00:00:00Z",
              "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "CLAOGNEH",
              "affiliate": {
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "createNumbers": false,
                "isSelf": true,
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "id": "CLAOGNEH",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR7492a41e3ba7453e809a9d7523307918",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Romance Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRc9021a8fdee04af483097efc76c2ef88",
              "priority": {
                "priority": 3,
                "weight": 3
              },
              "callTarget": {
                "id": "TAdef30c972ca149468e618900de78906f",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17205551235"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Phone Number Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRa815dd9785234d88a3ed50d808f40497",
              "priority": {
                "priority": 2,
                "weight": 2
              },
              "callTarget": {
                "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17605550149"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "New Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSettings": [],
              "createNumbers": false,
              "isSelf": false,
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "name": "API Test",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "AffiliateNumber11": {
        "title": "AffiliateNumber11",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "campaignId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "affiliate",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18334013665",
          "displayNumber": "+18334013665",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18334013665",
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "allocationDT": "2021-02-01T17:20:22.1504921Z",
          "lastBillDT": "2021-02-01T00:00:00Z",
          "nextChargeDT": "2021-02-27T00:00:00Z",
          "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 1,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": true
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "CLAOGNEH",
          "affiliate": {
            "id": "AFbd21c4a3274c4382aa98919d5149baf3",
            "createNumbers": false,
            "isSelf": true,
            "name": "You",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "id": "CLAOGNEH",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "Route8": {
        "title": "Route8",
        "required": [
          "id",
          "priority",
          "callTarget",
          "conversionSettings",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "callTarget": {
            "$ref": "#/components/schemas/CallTarget8"
          },
          "conversionSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversionSetting8"
            },
            "description": ""
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "CR7492a41e3ba7453e809a9d7523307918",
          "priority": {
            "priority": 1,
            "weight": 1
          },
          "callTarget": {
            "id": "TA2f6961e921ef4b92b7304dd76db8336f",
            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+18885852294"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "owner": {
              "userIds": [
                "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
              ],
              "canPauseTargets": true,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": true,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "id": "BUec50e9c7fa294283ba10a35893b13198",
              "name": "Example Buyer Co.",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Romance Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Ringba Test Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionSettings": [
            {
              "conversionValue": 0,
              "payoutValue": 0,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              },
              "conversionType": "dialed"
            }
          ],
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "CallTarget8": {
        "title": "CallTarget8",
        "required": [
          "id",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner1"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+18885852294"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "owner": {
            "userIds": [
              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
            ],
            "canPauseTargets": true,
            "canSetConcurrencyCaps": false,
            "canDisputeConversions": true,
            "capacity": {
              "timeZoneId": "UTC",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "id": "BUec50e9c7fa294283ba10a35893b13198",
            "name": "Example Buyer Co.",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Romance Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Ringba Test Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "ConversionSetting8": {
        "title": "ConversionSetting8",
        "required": [
          "conversionValue",
          "payoutValue",
          "conversionType"
        ],
        "type": "object",
        "properties": {
          "conversionValue": {
            "type": "integer",
            "format": "int32"
          },
          "payoutValue": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "conversionType": {
            "type": "string"
          },
          "conversionArgs": {
            "$ref": "#/components/schemas/ConversionArgs"
          }
        },
        "example": {
          "conversionValue": 0,
          "payoutValue": 0,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "conversionType": "dialed"
        }
      },
      "PubNumberEnrichmentUrls7": {
        "title": "PubNumberEnrichmentUrls7",
        "required": [
          "_CLAOGNEH"
        ],
        "type": "object",
        "properties": {
          "_CLAOGNEH": {
            "type": "string"
          }
        },
        "example": {
          "_CLAOGNEH": "https://display.ringba.com/enrich/CLAOGNEH?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
        }
      },
      "AddTargetRoutetoaCampaignconvertingoncalllength": {
        "title": "AddTargetRoutetoaCampaignconvertingoncalllength",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign15"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls7"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TR79d2f005-dc20-4c8e-a128-2e948c40a777",
          "campaign": {
            "defaultPayout": {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PS72474b39788e4c0084d5306418f55d50",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18334013665",
                "displayNumber": "+18334013665",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18334013665",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "allocationDT": "2021-02-01T17:20:22.1504921Z",
                "lastBillDT": "2021-02-01T00:00:00Z",
                "nextChargeDT": "2021-02-27T00:00:00Z",
                "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "CLAOGNEH",
                "affiliate": {
                  "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                  "createNumbers": false,
                  "isSelf": true,
                  "name": "You",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "id": "CLAOGNEH",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR7492a41e3ba7453e809a9d7523307918",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "name": "Example Buyer Co.",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Romance Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CRc9021a8fdee04af483097efc76c2ef88",
                "priority": {
                  "priority": 3,
                  "weight": 3
                },
                "callTarget": {
                  "id": "TAdef30c972ca149468e618900de78906f",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17205551235"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Phone Number Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed",
                    "conversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    }
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CRbd47e13f1a71409d88f5b5a9ce233b72",
                "priority": {
                  "priority": 2,
                  "weight": 2
                },
                "callTarget": {
                  "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17605550149"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "name": "Example Buyer Co.",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "New Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "conversionType": "callLength",
                    "conversionArgs": {
                      "startTimerEvent": "OnConnectedCall",
                      "callLengthInSeconds": 30
                    }
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSettings": [],
                "createNumbers": false,
                "isSelf": false,
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
            "name": "API Test",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_CLAOGNEH": "https://display.ringba.com/enrich/CLAOGNEH?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": false,
            "enabled": false
          }
        }
      },
      "Campaign15": {
        "title": "Campaign15",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber11"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route9"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate2"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PS72474b39788e4c0084d5306418f55d50",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18334013665",
              "displayNumber": "+18334013665",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18334013665",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "allocationDT": "2021-02-01T17:20:22.1504921Z",
              "lastBillDT": "2021-02-01T00:00:00Z",
              "nextChargeDT": "2021-02-27T00:00:00Z",
              "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "CLAOGNEH",
              "affiliate": {
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "createNumbers": false,
                "isSelf": true,
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "id": "CLAOGNEH",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR7492a41e3ba7453e809a9d7523307918",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Romance Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRc9021a8fdee04af483097efc76c2ef88",
              "priority": {
                "priority": 3,
                "weight": 3
              },
              "callTarget": {
                "id": "TAdef30c972ca149468e618900de78906f",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17205551235"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Phone Number Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRbd47e13f1a71409d88f5b5a9ce233b72",
              "priority": {
                "priority": 2,
                "weight": 2
              },
              "callTarget": {
                "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17605550149"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "New Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "conversionType": "callLength",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall",
                    "callLengthInSeconds": 30
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSettings": [],
              "createNumbers": false,
              "isSelf": false,
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "name": "API Test",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "Route9": {
        "title": "Route9",
        "required": [
          "id",
          "priority",
          "callTarget",
          "conversionSettings",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "callTarget": {
            "$ref": "#/components/schemas/CallTarget8"
          },
          "conversionSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversionSetting9"
            },
            "description": ""
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "CR7492a41e3ba7453e809a9d7523307918",
          "priority": {
            "priority": 1,
            "weight": 1
          },
          "callTarget": {
            "id": "TA2f6961e921ef4b92b7304dd76db8336f",
            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+18885852294"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "owner": {
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "id": "BUec50e9c7fa294283ba10a35893b13198",
              "userIds": [
                "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
              ],
              "canPauseTargets": true,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": true,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "name": "Example Buyer Co.",
              "enabled": true,
              "version": 1
            },
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Romance Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Ringba Test Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionSettings": [
            {
              "conversionValue": 0,
              "payoutValue": 0,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              },
              "conversionType": "dialed"
            }
          ],
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "ConversionSetting9": {
        "title": "ConversionSetting9",
        "required": [
          "conversionValue",
          "payoutValue",
          "conversionType"
        ],
        "type": "object",
        "properties": {
          "conversionValue": {
            "type": "integer",
            "format": "int32"
          },
          "payoutValue": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "conversionType": {
            "type": "string"
          },
          "conversionArgs": {
            "$ref": "#/components/schemas/ConversionArgs3"
          }
        },
        "example": {
          "conversionValue": 0,
          "payoutValue": 0,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "conversionType": "dialed"
        }
      },
      "ConversionArgs3": {
        "title": "ConversionArgs3",
        "required": [
          "startTimerEvent"
        ],
        "type": "object",
        "properties": {
          "startTimerEvent": {
            "type": "string"
          },
          "callLengthInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "startTimerEvent": "OnConnectedCall"
        }
      },
      "AddTargetGroupRoutetoaCampaignRequest": {
        "title": "AddTargetGroupRoutetoaCampaignRequest",
        "required": [
          "targetGroupId",
          "priority",
          "callConversion"
        ],
        "type": "object",
        "properties": {
          "targetGroupId": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "callConversion": {
            "$ref": "#/components/schemas/CallConversion"
          }
        },
        "example": {
          "targetGroupId": "{{targetGroupId}}",
          "priority": {
            "priority": 2,
            "weight": 2
          },
          "callConversion": {
            "conversionType": "dialed",
            "conversionValue": 0,
            "conversionArgs": {
              "startTimerEvent": "OnConnectedCall",
              "callLengthInSeconds": 30
            }
          }
        }
      },
      "AddTargetGroupRoutetoaCampaignconvertingoncalllength": {
        "title": "AddTargetGroupRoutetoaCampaignconvertingoncalllength",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign16"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls7"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TR608f6a3b-3820-4130-a350-5ed8bddf6749",
          "campaign": {
            "defaultPayout": {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PS72474b39788e4c0084d5306418f55d50",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18334013665",
                "displayNumber": "+18334013665",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18334013665",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "allocationDT": "2021-02-01T17:20:22.1504921Z",
                "lastBillDT": "2021-02-01T00:00:00Z",
                "nextChargeDT": "2021-02-27T00:00:00Z",
                "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "CLAOGNEH",
                "affiliate": {
                  "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                  "createNumbers": false,
                  "isSelf": true,
                  "name": "You",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "id": "CLAOGNEH",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CRc9021a8fdee04af483097efc76c2ef88",
                "priority": {
                  "priority": 3,
                  "weight": 3
                },
                "callTarget": {
                  "id": "TAdef30c972ca149468e618900de78906f",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17205551235"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Phone Number Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed",
                    "conversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    }
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CRbd47e13f1a71409d88f5b5a9ce233b72",
                "priority": {
                  "priority": 2,
                  "weight": 2
                },
                "callTarget": {
                  "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17605550149"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "name": "Example Buyer Co.",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "New Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "conversionType": "callLength",
                    "conversionArgs": {
                      "startTimerEvent": "OnConnectedCall",
                      "callLengthInSeconds": 30
                    }
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CRcf4326d208d14859a8bd8030c3bfacfc",
                "priority": {
                  "priority": 2,
                  "weight": 2
                },
                "callTargetGroup": {
                  "id": "TA6bd8e3e01cc0492b9427e04f0312fa98",
                  "isSimalDial": false,
                  "oRouteSettings": {
                    "campaignOverride": false,
                    "globalOverride": false,
                    "waterFallOverride": false
                  },
                  "oCapacity": {
                    "campaignOverride": false,
                    "globalOverride": false,
                    "waterFallOverride": false
                  },
                  "oConcurrency": {
                    "campaignOverride": false,
                    "globalOverride": false,
                    "waterFallOverride": false
                  },
                  "oSchedule": {
                    "campaignOverride": false,
                    "globalOverride": false,
                    "waterFallOverride": false
                  },
                  "targets": [],
                  "disableTargets": false,
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Pacific Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Example Target Group",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "conversionType": "dialed",
                    "conversionArgs": {
                      "startTimerEvent": "OnConnectedCall",
                      "callLengthInSeconds": 30
                    }
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSettings": [],
                "createNumbers": false,
                "isSelf": false,
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
            "name": "API Test",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_CLAOGNEH": "https://display.ringba.com/enrich/CLAOGNEH?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": false,
            "enabled": false
          }
        }
      },
      "Campaign16": {
        "title": "Campaign16",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber11"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route10"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate2"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PS72474b39788e4c0084d5306418f55d50",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18334013665",
              "displayNumber": "+18334013665",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18334013665",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "allocationDT": "2021-02-01T17:20:22.1504921Z",
              "lastBillDT": "2021-02-01T00:00:00Z",
              "nextChargeDT": "2021-02-27T00:00:00Z",
              "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "CLAOGNEH",
              "affiliate": {
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "createNumbers": false,
                "isSelf": true,
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "id": "CLAOGNEH",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CRc9021a8fdee04af483097efc76c2ef88",
              "priority": {
                "priority": 3,
                "weight": 3
              },
              "callTarget": {
                "id": "TAdef30c972ca149468e618900de78906f",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17205551235"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Phone Number Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall"
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRbd47e13f1a71409d88f5b5a9ce233b72",
              "priority": {
                "priority": 2,
                "weight": 2
              },
              "callTarget": {
                "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17605550149"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "New Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "conversionType": "callLength",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall",
                    "callLengthInSeconds": 30
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "CRcf4326d208d14859a8bd8030c3bfacfc",
              "priority": {
                "priority": 2,
                "weight": 2
              },
              "callTargetGroup": {
                "id": "TA6bd8e3e01cc0492b9427e04f0312fa98",
                "isSimalDial": false,
                "oRouteSettings": {
                  "campaignOverride": false,
                  "globalOverride": false,
                  "waterFallOverride": false
                },
                "oCapacity": {
                  "campaignOverride": false,
                  "globalOverride": false,
                  "waterFallOverride": false
                },
                "oConcurrency": {
                  "campaignOverride": false,
                  "globalOverride": false,
                  "waterFallOverride": false
                },
                "oSchedule": {
                  "campaignOverride": false,
                  "globalOverride": false,
                  "waterFallOverride": false
                },
                "targets": [],
                "disableTargets": false,
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Example Target Group",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "conversionType": "dialed",
                  "conversionArgs": {
                    "startTimerEvent": "OnConnectedCall",
                    "callLengthInSeconds": 30
                  }
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSettings": [],
              "createNumbers": false,
              "isSelf": false,
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "name": "API Test",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "Route10": {
        "title": "Route10",
        "required": [
          "id",
          "priority",
          "conversionSettings",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "callTarget": {
            "$ref": "#/components/schemas/CallTarget8"
          },
          "conversionSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversionSetting10"
            },
            "description": ""
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "callTargetGroup": {
            "$ref": "#/components/schemas/CallTargetGroup"
          }
        },
        "example": {
          "id": "CRc9021a8fdee04af483097efc76c2ef88",
          "priority": {
            "priority": 3,
            "weight": 3
          },
          "callTarget": {
            "id": "TAdef30c972ca149468e618900de78906f",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+17205551235"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Mountain Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Phone Number Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionSettings": [
            {
              "conversionValue": 0,
              "payoutValue": 0,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              },
              "conversionType": "dialed",
              "conversionArgs": {
                "startTimerEvent": "OnConnectedCall"
              }
            }
          ],
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "ConversionSetting10": {
        "title": "ConversionSetting10",
        "required": [
          "conversionValue",
          "payoutValue",
          "conversionType",
          "conversionArgs"
        ],
        "type": "object",
        "properties": {
          "conversionValue": {
            "type": "integer",
            "format": "int32"
          },
          "payoutValue": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "conversionType": {
            "type": "string"
          },
          "conversionArgs": {
            "$ref": "#/components/schemas/ConversionArgs3"
          }
        },
        "example": {
          "conversionValue": 0,
          "payoutValue": 0,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "conversionType": "dialed",
          "conversionArgs": {
            "startTimerEvent": "OnConnectedCall"
          }
        }
      },
      "CallTargetGroup": {
        "title": "CallTargetGroup",
        "required": [
          "id",
          "isSimalDial",
          "oRouteSettings",
          "oCapacity",
          "oConcurrency",
          "oSchedule",
          "targets",
          "disableTargets",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isSimalDial": {
            "type": "boolean"
          },
          "oRouteSettings": {
            "$ref": "#/components/schemas/ORouteSettings"
          },
          "oCapacity": {
            "$ref": "#/components/schemas/OCapacity"
          },
          "oConcurrency": {
            "$ref": "#/components/schemas/OConcurrency"
          },
          "oSchedule": {
            "$ref": "#/components/schemas/OSchedule"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "disableTargets": {
            "type": "boolean"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA6bd8e3e01cc0492b9427e04f0312fa98",
          "isSimalDial": false,
          "oRouteSettings": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oCapacity": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oConcurrency": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oSchedule": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "targets": [],
          "disableTargets": false,
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Pacific Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Example Target Group",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "ORouteSettings": {
        "title": "ORouteSettings",
        "required": [
          "campaignOverride",
          "globalOverride",
          "waterFallOverride"
        ],
        "type": "object",
        "properties": {
          "campaignOverride": {
            "type": "boolean"
          },
          "globalOverride": {
            "type": "boolean"
          },
          "waterFallOverride": {
            "type": "boolean"
          }
        },
        "example": {
          "campaignOverride": false,
          "globalOverride": false,
          "waterFallOverride": false
        }
      },
      "OCapacity": {
        "title": "OCapacity",
        "required": [
          "campaignOverride",
          "globalOverride",
          "waterFallOverride"
        ],
        "type": "object",
        "properties": {
          "campaignOverride": {
            "type": "boolean"
          },
          "globalOverride": {
            "type": "boolean"
          },
          "waterFallOverride": {
            "type": "boolean"
          }
        },
        "example": {
          "campaignOverride": false,
          "globalOverride": false,
          "waterFallOverride": false
        }
      },
      "OConcurrency": {
        "title": "OConcurrency",
        "required": [
          "campaignOverride",
          "globalOverride",
          "waterFallOverride"
        ],
        "type": "object",
        "properties": {
          "campaignOverride": {
            "type": "boolean"
          },
          "globalOverride": {
            "type": "boolean"
          },
          "waterFallOverride": {
            "type": "boolean"
          }
        },
        "example": {
          "campaignOverride": false,
          "globalOverride": false,
          "waterFallOverride": false
        }
      },
      "OSchedule": {
        "title": "OSchedule",
        "required": [
          "campaignOverride",
          "globalOverride",
          "waterFallOverride"
        ],
        "type": "object",
        "properties": {
          "campaignOverride": {
            "type": "boolean"
          },
          "globalOverride": {
            "type": "boolean"
          },
          "waterFallOverride": {
            "type": "boolean"
          }
        },
        "example": {
          "campaignOverride": false,
          "globalOverride": false,
          "waterFallOverride": false
        }
      },
      "RemoveTargetRoutefromaCampaignRequest": {
        "title": "RemoveTargetRoutefromaCampaignRequest",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "{{campaignRouteId}}"
        }
      },
      "RemoveTargetRoutefromaCampaign": {
        "title": "RemoveTargetRoutefromaCampaign",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign14"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls7"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TR56ed1085-6181-42b3-b416-a165f8d4419c",
          "campaign": {
            "defaultPayout": {
              "id": "PS72474b39788e4c0084d5306418f55d50",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PS72474b39788e4c0084d5306418f55d50",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18334013665",
                "displayNumber": "+18334013665",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18334013665",
                "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "allocationDT": "2021-02-01T17:20:22.1504921Z",
                "lastBillDT": "2021-02-01T00:00:00Z",
                "nextChargeDT": "2021-02-27T00:00:00Z",
                "lastChargeDT": "2021-02-01T17:20:22.1504921Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "CLAOGNEH",
                "affiliate": {
                  "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                  "createNumbers": false,
                  "isSelf": true,
                  "name": "You",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "id": "CLAOGNEH",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR7492a41e3ba7453e809a9d7523307918",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Romance Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CRc9021a8fdee04af483097efc76c2ef88",
                "priority": {
                  "priority": 3,
                  "weight": 3
                },
                "callTarget": {
                  "id": "TAdef30c972ca149468e618900de78906f",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17205551235"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Phone Number Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed",
                    "conversionArgs": {
                      "startTimerEvent": "OnConnectedCall"
                    }
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "CR3797704eadf24e1ebb0e05ebcb19c355",
                "priority": {
                  "priority": 2,
                  "weight": 2
                },
                "callTarget": {
                  "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17605550149"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "New Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "conversionType": "connectedCall"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSettings": [],
                "createNumbers": false,
                "isSelf": false,
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA74c0b7f1f3824246b73e72a9238b4bfc",
            "name": "API Test",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_CLAOGNEH": "https://display.ringba.com/enrich/CLAOGNEH?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": false,
            "enabled": false
          }
        }
      },
      "GetAllOffersforaCampaign": {
        "title": "GetAllOffersforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful",
          "offers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "offers": {
            "$ref": "#/components/schemas/Offers"
          }
        },
        "example": {
          "transactionId": "TRcd29a1f0-9624-4c52-aa6c-2638930f35fe",
          "isSuccessful": true,
          "offers": {
            "draft": {
              "revision": 0,
              "notes": "These notes can only be seen in the detail view",
              "category": "Automotive\\Engine Repair",
              "languageCodes": [
                "EN"
              ],
              "numberRestrictions": {
                "maxNumbersPerPublisher": 1,
                "allowTF": false,
                "allowDID": true
              },
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "name": "Second Offer",
              "description": "This is a draft offer to demonstrate having a published and a draft offer for a campaign",
              "offerState": "draft",
              "offerVisibility": "account",
              "requireApproval": true,
              "expiration": "2021-03-21T15:48:00",
              "timeZoneId": "Mountain Standard Time",
              "publisherHasNumber": false
            },
            "published": {
              "revision": 1,
              "notes": "These notes can only be seen in the detail view",
              "category": "Home Services\\Tree Removal",
              "languageCodes": [
                "EN"
              ],
              "numberRestrictions": {
                "maxNumbersPerPublisher": 1,
                "allowTF": true,
                "allowDID": true
              },
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "name": "New new Offer",
              "description": "This is an offer to be sent to publishers",
              "offerState": "enabled",
              "offerVisibility": "private",
              "requireApproval": false,
              "expiration": "2021-03-10T15:48:00",
              "timeZoneId": "Mountain Standard Time",
              "publisherHasNumber": false
            }
          }
        }
      },
      "Offers": {
        "title": "Offers",
        "required": [
          "draft",
          "published"
        ],
        "type": "object",
        "properties": {
          "draft": {
            "$ref": "#/components/schemas/Draft"
          },
          "published": {
            "$ref": "#/components/schemas/Published"
          }
        },
        "example": {
          "draft": {
            "revision": 0,
            "notes": "These notes can only be seen in the detail view",
            "category": "Automotive\\Engine Repair",
            "languageCodes": [
              "EN"
            ],
            "numberRestrictions": {
              "maxNumbersPerPublisher": 1,
              "allowTF": false,
              "allowDID": true
            },
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "Second Offer",
            "description": "This is a draft offer to demonstrate having a published and a draft offer for a campaign",
            "offerState": "draft",
            "offerVisibility": "account",
            "requireApproval": true,
            "expiration": "2021-03-21T15:48:00",
            "timeZoneId": "Mountain Standard Time",
            "publisherHasNumber": false
          },
          "published": {
            "revision": 1,
            "notes": "These notes can only be seen in the detail view",
            "category": "Home Services\\Tree Removal",
            "languageCodes": [
              "EN"
            ],
            "numberRestrictions": {
              "maxNumbersPerPublisher": 1,
              "allowTF": true,
              "allowDID": true
            },
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "New new Offer",
            "description": "This is an offer to be sent to publishers",
            "offerState": "enabled",
            "offerVisibility": "private",
            "requireApproval": false,
            "expiration": "2021-03-10T15:48:00",
            "timeZoneId": "Mountain Standard Time",
            "publisherHasNumber": false
          }
        }
      },
      "Draft": {
        "title": "Draft",
        "required": [
          "revision",
          "notes",
          "category",
          "languageCodes",
          "numberRestrictions",
          "campaignId",
          "name",
          "description",
          "offerState",
          "offerVisibility",
          "requireApproval",
          "expiration",
          "timeZoneId",
          "publisherHasNumber"
        ],
        "type": "object",
        "properties": {
          "revision": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "languageCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "numberRestrictions": {
            "$ref": "#/components/schemas/NumberRestrictions"
          },
          "campaignId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "offerState": {
            "type": "string"
          },
          "offerVisibility": {
            "type": "string"
          },
          "requireApproval": {
            "type": "boolean"
          },
          "expiration": {
            "type": "string"
          },
          "timeZoneId": {
            "type": "string"
          },
          "publisherHasNumber": {
            "type": "boolean"
          }
        },
        "example": {
          "revision": 0,
          "notes": "These notes can only be seen in the detail view",
          "category": "Automotive\\Engine Repair",
          "languageCodes": [
            "EN"
          ],
          "numberRestrictions": {
            "maxNumbersPerPublisher": 1,
            "allowTF": false,
            "allowDID": true
          },
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "Second Offer",
          "description": "This is a draft offer to demonstrate having a published and a draft offer for a campaign",
          "offerState": "draft",
          "offerVisibility": "account",
          "requireApproval": true,
          "expiration": "2021-03-21T15:48:00",
          "timeZoneId": "Mountain Standard Time",
          "publisherHasNumber": false
        }
      },
      "NumberRestrictions": {
        "title": "NumberRestrictions",
        "required": [
          "maxNumbersPerPublisher",
          "allowTF",
          "allowDID"
        ],
        "type": "object",
        "properties": {
          "maxNumbersPerPublisher": {
            "type": "integer",
            "format": "int32"
          },
          "allowTF": {
            "type": "boolean"
          },
          "allowDID": {
            "type": "boolean"
          }
        },
        "example": {
          "maxNumbersPerPublisher": 1,
          "allowTF": false,
          "allowDID": true
        }
      },
      "Published": {
        "title": "Published",
        "required": [
          "revision",
          "notes",
          "category",
          "languageCodes",
          "numberRestrictions",
          "campaignId",
          "name",
          "description",
          "offerState",
          "offerVisibility",
          "requireApproval",
          "expiration",
          "timeZoneId",
          "publisherHasNumber"
        ],
        "type": "object",
        "properties": {
          "revision": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "languageCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "numberRestrictions": {
            "$ref": "#/components/schemas/NumberRestrictions"
          },
          "campaignId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "offerState": {
            "type": "string"
          },
          "offerVisibility": {
            "type": "string"
          },
          "requireApproval": {
            "type": "boolean"
          },
          "expiration": {
            "type": "string"
          },
          "timeZoneId": {
            "type": "string"
          },
          "publisherHasNumber": {
            "type": "boolean"
          }
        },
        "example": {
          "revision": 1,
          "notes": "These notes can only be seen in the detail view",
          "category": "Home Services\\Tree Removal",
          "languageCodes": [
            "EN"
          ],
          "numberRestrictions": {
            "maxNumbersPerPublisher": 1,
            "allowTF": true,
            "allowDID": true
          },
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "New new Offer",
          "description": "This is an offer to be sent to publishers",
          "offerState": "enabled",
          "offerVisibility": "private",
          "requireApproval": false,
          "expiration": "2021-03-10T15:48:00",
          "timeZoneId": "Mountain Standard Time",
          "publisherHasNumber": false
        }
      },
      "GetDraftOffersforaCampaignwithnodraftoffersincampaign": {
        "title": "GetDraftOffersforaCampaignwithnodraftoffersincampaign",
        "required": [
          "transactionId",
          "isSuccessful",
          "draft"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "draft": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "transactionId": "TRcaa6b9b6-b910-4673-bfd4-9496479bb387",
          "isSuccessful": true,
          "draft": null
        }
      },
      "GetDraftOffersforaCampaign": {
        "title": "GetDraftOffersforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful",
          "draft"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "draft": {
            "$ref": "#/components/schemas/Draft"
          }
        },
        "example": {
          "transactionId": "TR6cd3a1ae-7dfc-4cf8-b1be-836c93c36cd9",
          "isSuccessful": true,
          "draft": {
            "revision": 0,
            "notes": "These notes can only be seen in the detail view",
            "category": "Cannabis (CBD)\\General",
            "languageCodes": [
              "EN"
            ],
            "numberRestrictions": {
              "maxNumbersPerPublisher": 1,
              "allowTF": true,
              "allowDID": true
            },
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "New Offer",
            "description": "This is an offer to be sent to publishers",
            "offerState": "draft",
            "offerVisibility": "private",
            "requireApproval": false,
            "expiration": "2021-03-10T15:48:00",
            "timeZoneId": "Mountain Standard Time",
            "publisherHasNumber": false
          }
        }
      },
      "GetPublishedOffersforaCampaign": {
        "title": "GetPublishedOffersforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful",
          "published"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "published": {
            "$ref": "#/components/schemas/Published"
          }
        },
        "example": {
          "transactionId": "TRd1443f4f-5ac7-4066-97e4-2c28365af970",
          "isSuccessful": true,
          "published": {
            "revision": 1,
            "notes": "These notes can only be seen in the detail view",
            "category": "Home Services\\Tree Removal",
            "languageCodes": [
              "EN"
            ],
            "numberRestrictions": {
              "maxNumbersPerPublisher": 1,
              "allowTF": true,
              "allowDID": true
            },
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "New new Offer",
            "description": "This is an offer to be sent to publishers",
            "offerState": "enabled",
            "offerVisibility": "private",
            "requireApproval": false,
            "expiration": "2021-03-10T15:48:00",
            "timeZoneId": "Mountain Standard Time",
            "publisherHasNumber": false
          }
        }
      },
      "ViewPublishersParticipatinginPublishedOffers": {
        "title": "ViewPublishersParticipatinginPublishedOffers",
        "required": [
          "transactionId",
          "isSuccessful",
          "participationRecords"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "participationRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipationRecord"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRe77b59e3-dfd7-4500-932a-4bbe93482ca0",
          "isSuccessful": true,
          "participationRecords": [
            {
              "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "offerParticipationStatus": "enrolled"
            }
          ]
        }
      },
      "ParticipationRecord": {
        "title": "ParticipationRecord",
        "required": [
          "publisherId",
          "offerParticipationStatus"
        ],
        "type": "object",
        "properties": {
          "publisherId": {
            "type": "string"
          },
          "offerParticipationStatus": {
            "type": "string"
          }
        },
        "example": {
          "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "offerParticipationStatus": "enrolled"
        }
      },
      "PublishDraftOffers": {
        "title": "PublishDraftOffers",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRc75dfd4d-db4d-4d56-94e5-ac13ac8b099b",
          "isSuccessful": true
        }
      },
      "PauseaPublishedOfferforaCampaign": {
        "title": "PauseaPublishedOfferforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR5c7c5340-56c2-4be3-84f9-00da71174278",
          "isSuccessful": true
        }
      },
      "PauseaPublishedOfferforaCampaignwhenthereisnoactiveoffertopause1": {
        "title": "PauseaPublishedOfferforaCampaignwhenthereisnoactiveoffertopause1",
        "required": [
          "transactionId",
          "message",
          "messageCode",
          "errors"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR65f5c8cb-c794-4570-b560-ff1360ab526e",
          "message": "Operation is not allowed",
          "messageCode": 0,
          "errors": []
        }
      },
      "ResumeaPausedOfferwhennopausedoffersarepresent1": {
        "title": "ResumeaPausedOfferwhennopausedoffersarepresent1",
        "required": [
          "transactionId",
          "message",
          "messageCode",
          "errors"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRd9ac5589-db89-4a40-9d85-2f8e0f54e3e8",
          "message": "Operation is not allowed",
          "messageCode": 0,
          "errors": []
        }
      },
      "ResumeaPausedOffer": {
        "title": "ResumeaPausedOffer",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR9b8f13fe-2007-45a6-b655-56e87d4d3196",
          "isSuccessful": true
        }
      },
      "InvitePublishertoParticipateinOfferRequest": {
        "title": "InvitePublishertoParticipateinOfferRequest",
        "required": [
          "publisherId",
          "message"
        ],
        "type": "object",
        "properties": {
          "publisherId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "publisherId": "{{publisherId}}",
          "message": "Please join my new offer"
        }
      },
      "InvitePublishertoParticipateinOffer": {
        "title": "InvitePublishertoParticipateinOffer",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR402494b5-84e0-4e96-96d5-d6aa92cd5360",
          "isSuccessful": true
        }
      },
      "CreateaDraftOfferforaCampaignRequest": {
        "title": "CreateaDraftOfferforaCampaignRequest",
        "required": [
          "numberRestrictions",
          "offerVisibility",
          "languageCodes",
          "requireApproval",
          "name",
          "description",
          "notes",
          "category",
          "expiration",
          "timeZoneId"
        ],
        "type": "object",
        "properties": {
          "numberRestrictions": {
            "$ref": "#/components/schemas/NumberRestrictions"
          },
          "offerVisibility": {
            "type": "string"
          },
          "languageCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "requireApproval": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "timeZoneId": {
            "type": "string"
          }
        },
        "example": {
          "numberRestrictions": {
            "allowTF": true,
            "allowDID": true,
            "maxNumbersPerPublisher": 1
          },
          "offerVisibility": "private",
          "languageCodes": [
            "EN"
          ],
          "requireApproval": false,
          "name": "New Offer",
          "description": "This is an offer to be sent to publishers",
          "notes": "These notes can only be seen in the detail view",
          "category": "Home Services\\Tree Removal",
          "expiration": "03/10/2021 03:48 PM",
          "timeZoneId": "Mountain Standard Time"
        }
      },
      "CreateaDraftOffer": {
        "title": "CreateaDraftOffer",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRcabb4379-ce2f-4ec4-9e5c-e75c0740b65b",
          "isSuccessful": true
        }
      },
      "DeleteaDraftOfferBeforePublishing": {
        "title": "DeleteaDraftOfferBeforePublishing",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRb7d32651-1769-40f3-be18-641810da72cc",
          "isSuccessful": true
        }
      },
      "DeletePublishedOfferforaCampaignwhennopublishedoffersarepresent1": {
        "title": "DeletePublishedOfferforaCampaignwhennopublishedoffersarepresent1",
        "required": [
          "transactionId",
          "message",
          "messageCode",
          "errors"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRf3d26752-cc2b-4d43-93d2-d5e0a3ac77bc",
          "message": "The campaign has no published offer",
          "messageCode": 0,
          "errors": []
        }
      },
      "DeletePublishedOfferforaCampaign": {
        "title": "DeletePublishedOfferforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR4788ff89-0804-44c7-8ae0-b4643021c855",
          "isSuccessful": true
        }
      },
      "AddNewDefaultPayoutforaCampaignRequest": {
        "title": "AddNewDefaultPayoutforaCampaignRequest",
        "required": [
          "isRevShare",
          "priority",
          "revSharePercentage",
          "revShareMinPayoutAmount",
          "revShareMaxPayoutAmount",
          "deDupeSetting",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "concurrencyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "payoutHours",
          "timeZoneId",
          "notUsedPayout",
          "sendNotifications"
        ],
        "type": "object",
        "properties": {
          "isRevShare": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          },
          "timeZoneId": {
            "type": "string"
          },
          "notUsedPayout": {
            "type": "boolean"
          },
          "sendNotifications": {
            "type": "boolean"
          }
        },
        "example": {
          "isRevShare": true,
          "priority": 1,
          "revSharePercentage": 90,
          "revShareMinPayoutAmount": 1,
          "revShareMaxPayoutAmount": 10,
          "deDupeSetting": {
            "secondsFromLastCall": -1
          },
          "allTimeCap": 100,
          "monthlyCap": 10,
          "dailyCap": -1,
          "hourlyCap": 2,
          "concurrencyCap": -1,
          "allTimeSumCap": 1000,
          "monthlySumCap": 100,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "payoutHours": [
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "inverted": false,
              "isClosed": true
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "hour": 9,
                "minute": 0
              },
              "closeTime": {
                "hour": 17,
                "minute": 0
              },
              "inverted": false,
              "isClosed": true
            }
          ],
          "timeZoneId": "Mountain Standard Time",
          "notUsedPayout": false,
          "sendNotifications": false
        }
      },
      "AddNewDefaultPayoutforaCampaignWithAllOptionalParametersSpecified": {
        "title": "AddNewDefaultPayoutforaCampaignWithAllOptionalParametersSpecified",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign1"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "AddNewDefaultPayoutforaCampaignwithRevenueSharewithrequiredparametersonly": {
        "title": "AddNewDefaultPayoutforaCampaignwithRevenueSharewithrequiredparametersonly",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign19"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "Campaign19": {
        "title": "Campaign19",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout2"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout2"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber2"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate4"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddNewDefaultPayoutforaCampaignwithFixedAmountwithrequiredparametersonly": {
        "title": "AddNewDefaultPayoutforaCampaignwithFixedAmountwithrequiredparametersonly",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign19"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "UpdateALLDefaultPayoutSettingsforaCampaignRequest": {
        "title": "UpdateALLDefaultPayoutSettingsforaCampaignRequest",
        "required": [
          "allPayouts",
          "sendNotifications"
        ],
        "type": "object",
        "properties": {
          "allPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllPayout"
            },
            "description": ""
          },
          "sendNotifications": {
            "type": "boolean"
          }
        }
      },
      "AllPayout": {
        "title": "AllPayout",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "type": "number"
              }
            ]
          },
          "revSharePercentage": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "type": "number"
              }
            ]
          },
          "revShareMaxPayoutAmount": {
            "type": "number"
          },
          "revShareMinPayoutAmount": {
            "type": "number"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "integer",
                "format": "int32"
              }
            ]
          },
          "monthlySumCap": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "integer",
                "format": "int32"
              }
            ]
          },
          "dailySumCap": {
            "type": "number"
          },
          "hourlySumCap": {
            "type": "number"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "timeZoneId": {
            "type": "string"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          }
        }
      },
      "UpdateAllDefaultPayoutSettingsforaCampaign": {
        "title": "UpdateAllDefaultPayoutSettingsforaCampaign",
        "required": [
          "transactionId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign1"
          }
        }
      },
      "UpdateSingleDefaultPayoutSettingsRequest": {
        "title": "UpdateSingleDefaultPayoutSettingsRequest",
        "required": [
          "priority",
          "isRevShare",
          "payoutAmount",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting",
          "notUsedPayout",
          "sendNotifications"
        ],
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "notUsedPayout": {
            "type": "boolean"
          },
          "sendNotifications": {
            "type": "boolean"
          }
        },
        "example": {
          "priority": 1,
          "isRevShare": false,
          "payoutAmount": 10,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "incomingCall",
          "isGlobal": false,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "notUsedPayout": false,
          "sendNotifications": false
        }
      },
      "UpdateSingleDefaultPayoutSettingswithonlyonechange": {
        "title": "UpdateSingleDefaultPayoutSettingswithonlyonechange",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign22"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags1"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "Campaign22": {
        "title": "Campaign22",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "callIVRTree",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout40"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout3"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber2"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "callIVRTree": {
            "$ref": "#/components/schemas/CallIVRTree"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate17"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DefaultPayout40": {
        "title": "DefaultPayout40",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "timeZoneId",
          "payoutHours",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        },
        "example": {
          "id": "PA80711eb520684fccbfdab8eb1227f9b9",
          "priority": 0,
          "isRevShare": true,
          "payoutAmount": -1,
          "revSharePercentage": 90,
          "revShareMaxPayoutAmount": 10,
          "revShareMinPayoutAmount": 1,
          "payoutConversionType": "convertedCall",
          "isGlobal": false,
          "allTimeCap": 100,
          "monthlyCap": 10,
          "dailyCap": -1,
          "hourlyCap": 2,
          "allTimeSumCap": 1000,
          "monthlySumCap": 100,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "timeZoneId": "Mountain Standard Time",
          "payoutHours": [
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            }
          ],
          "deDupeSetting": {
            "secondsFromLastCall": -1
          }
        }
      },
      "UpdateSingleDefaultPayoutSettings": {
        "title": "UpdateSingleDefaultPayoutSettings",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign22"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags1"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "RemoveDefaultPayoutSettingformaCampaign": {
        "title": "RemoveDefaultPayoutSettingformaCampaign",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRc6fdff87-fdf8-457a-9923-812629f1b53e",
          "isSuccessful": true
        }
      },
      "CreateNewPublisherPayoutOverrideRequest": {
        "title": "CreateNewPublisherPayoutOverrideRequest",
        "required": [
          "deDupeSetting",
          "isRevShare",
          "priority",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "concurrencyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "payoutConversionType",
          "payoutAmount",
          "notUsedPayout",
          "sendNotifications"
        ],
        "type": "object",
        "properties": {
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "notUsedPayout": {
            "type": "boolean"
          },
          "sendNotifications": {
            "type": "boolean"
          }
        },
        "example": {
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "isRevShare": false,
          "priority": 0,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "concurrencyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "payoutConversionType": "connectedCall",
          "payoutAmount": 12,
          "notUsedPayout": false,
          "sendNotifications": false
        }
      },
      "CreateNewPublisherPayoutOverride": {
        "title": "CreateNewPublisherPayoutOverride",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign24"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags1"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "Campaign24": {
        "title": "Campaign24",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "callIVRTree",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout40"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout3"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber2"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "callIVRTree": {
            "$ref": "#/components/schemas/CallIVRTree"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate43"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Affiliate43": {
        "title": "Affiliate43",
        "required": [
          "payoutConversionSettings",
          "createNumbers",
          "isSelf",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "payoutConversionSettings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PayoutConversionSetting22"
                },
                {
                  "$ref": "#/components/schemas/PayoutConversionSetting221"
                }
              ]
            },
            "description": ""
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionSetting": {
            "$ref": "#/components/schemas/PayoutConversionSetting23"
          },
          "subId": {
            "type": "string"
          }
        },
        "example": {
          "payoutConversionSettings": [],
          "createNumbers": false,
          "isSelf": false,
          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
          "name": "You",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "PayoutConversionSetting22": {
        "title": "PayoutConversionSetting22",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        }
      },
      "PayoutConversionSetting221": {
        "title": "PayoutConversionSetting221",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        },
        "example": {
          "id": "PA78445e21cc79408886e9dc123d36d128",
          "priority": 0,
          "isRevShare": false,
          "payoutAmount": 95,
          "revSharePercentage": -1,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "convertedCall",
          "isGlobal": false,
          "allTimeCap": 10,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": 2000,
          "monthlySumCap": -1,
          "dailySumCap": 200,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "timeZoneId": "Mountain Standard Time",
          "payoutHours": [
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            }
          ],
          "deDupeSetting": {
            "secondsFromLastCall": 21600
          }
        }
      },
      "PayoutConversionSetting23": {
        "title": "PayoutConversionSetting23",
        "required": [
          "id",
          "priority",
          "isRevShare",
          "payoutAmount",
          "revSharePercentage",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "timeZoneId",
          "payoutHours",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        },
        "example": {
          "id": "PA78445e21cc79408886e9dc123d36d128",
          "priority": 0,
          "isRevShare": false,
          "payoutAmount": 95,
          "revSharePercentage": -1,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "convertedCall",
          "isGlobal": false,
          "allTimeCap": 10,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": 2000,
          "monthlySumCap": -1,
          "dailySumCap": 200,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "timeZoneId": "Mountain Standard Time",
          "payoutHours": [
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            }
          ],
          "deDupeSetting": {
            "secondsFromLastCall": 21600
          }
        }
      },
      "UpdateALLPublisherPayoutOverridesRequest": {
        "title": "UpdateALLPublisherPayoutOverridesRequest",
        "required": [
          "allPayouts",
          "sendNotifications"
        ],
        "type": "object",
        "properties": {
          "allPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllPayout1"
            },
            "description": ""
          },
          "sendNotifications": {
            "type": "boolean"
          }
        },
        "example": {
          "allPayouts": [
            {
              "deDupeSetting": {
                "secondsFromLastCall": 0
              },
              "isRevShare": false,
              "priority": 0,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "concurrencyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "payoutConversionType": "connectedCall",
              "payoutAmount": 12,
              "notUsedPayout": false
            },
            {
              "deDupeSetting": {
                "secondsFromLastCall": 21600
              },
              "isRevShare": true,
              "priority": 1,
              "revSharePercentage": 95,
              "allTimeCap": 10,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "concurrencyCap": -1,
              "allTimeSumCap": 2000,
              "monthlySumCap": -1,
              "dailySumCap": 200,
              "hourlySumCap": -1,
              "payoutConversionType": "convertedCall",
              "payoutAmount": -1,
              "payoutHours": [
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "hour": 9,
                    "minute": 0
                  },
                  "closeTime": {
                    "hour": 17,
                    "minute": 0
                  },
                  "inverted": false,
                  "isClosed": false
                }
              ],
              "timeZoneId": "Mountain Standard Time",
              "notUsedPayout": false
            }
          ],
          "sendNotifications": false
        }
      },
      "AllPayout1": {
        "title": "AllPayout1",
        "required": [
          "deDupeSetting",
          "isRevShare",
          "priority",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "concurrencyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "payoutConversionType",
          "payoutAmount",
          "notUsedPayout"
        ],
        "type": "object",
        "properties": {
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "notUsedPayout": {
            "type": "boolean"
          },
          "revSharePercentage": {
            "type": "integer",
            "format": "int32"
          },
          "payoutHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutHour"
            },
            "description": ""
          },
          "timeZoneId": {
            "type": "string"
          }
        },
        "example": {
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "isRevShare": false,
          "priority": 0,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "concurrencyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "payoutConversionType": "connectedCall",
          "payoutAmount": 12,
          "notUsedPayout": false
        }
      },
      "UpdateALLPublisherPayoutOverrides": {
        "title": "UpdateALLPublisherPayoutOverrides",
        "required": [
          "transactionId",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign25"
          }
        }
      },
      "Campaign25": {
        "title": "Campaign25",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout2"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout3"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber2"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate45"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Affiliate45": {
        "title": "Affiliate45",
        "required": [
          "payoutConversionSettings",
          "createNumbers",
          "isSelf",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "payoutConversionSettings": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PayoutConversionSetting22"
                },
                {
                  "$ref": "#/components/schemas/PayoutConversionSetting221"
                }
              ]
            },
            "description": ""
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionSetting": {
            "$ref": "#/components/schemas/PayoutConversionSetting1"
          },
          "subId": {
            "type": "string"
          }
        },
        "example": {
          "payoutConversionSettings": [],
          "createNumbers": false,
          "isSelf": false,
          "id": "AFbd21c4a3274c4382aa98919d5149baf3",
          "name": "You",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "UpdateSinglePublisherPayoutOverrideRequest": {
        "title": "UpdateSinglePublisherPayoutOverrideRequest",
        "required": [
          "priority",
          "isRevShare",
          "payoutAmount",
          "revShareMaxPayoutAmount",
          "revShareMinPayoutAmount",
          "payoutConversionType",
          "isGlobal",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "concurrencyCap",
          "deDupeSetting",
          "notUsedPayout",
          "sendNotifications"
        ],
        "type": "object",
        "properties": {
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isRevShare": {
            "type": "boolean"
          },
          "payoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMaxPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "revShareMinPayoutAmount": {
            "type": "integer",
            "format": "int32"
          },
          "payoutConversionType": {
            "type": "string"
          },
          "isGlobal": {
            "type": "boolean"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "notUsedPayout": {
            "type": "boolean"
          },
          "sendNotifications": {
            "type": "boolean"
          }
        },
        "example": {
          "priority": 1,
          "isRevShare": false,
          "payoutAmount": 7,
          "revShareMaxPayoutAmount": -1,
          "revShareMinPayoutAmount": -1,
          "payoutConversionType": "incomingCall",
          "isGlobal": false,
          "allTimeCap": 100,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1,
          "allTimeSumCap": -1,
          "monthlySumCap": 700,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "concurrencyCap": -1,
          "deDupeSetting": {
            "secondsFromLastCall": 0
          },
          "notUsedPayout": false,
          "sendNotifications": false
        }
      },
      "UpdateSinglePublisherPayoutOverride": {
        "title": "UpdateSinglePublisherPayoutOverride",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign1"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "UpdateSinglePublisherPayoutOverridewithonlyonechange": {
        "title": "UpdateSinglePublisherPayoutOverridewithonlyonechange",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign1"
          },
          "jsTags": {
            "$ref": "#/components/schemas/JsTags"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "RemoveaPublisherPayoutOverride": {
        "title": "RemoveaPublisherPayoutOverride",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR3364b9fd-b3bf-4c35-bcda-1090bcba25ca",
          "isSuccessful": true
        }
      },
      "GetRTBforCampaignwithRTBenabled": {
        "title": "GetRTBforCampaignwithRTBenabled",
        "required": [
          "transactionId",
          "isSuccessful",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb19"
          }
        },
        "example": {
          "transactionId": "TR1802dc94-5cd2-41a3-ba09-0ae19ff30cc0",
          "isSuccessful": true,
          "rtb": {
            "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
            "enabled": true,
            "sipOnly": false,
            "icp": "Off",
            "customIntegrations": {
              "journayaTCPA": {
                "state": "Off"
              }
            },
            "callerIdRequired": false,
            "bidExpirationPolicy": {
              "bidExpirationInSeconds": 20,
              "routeCallsForStaleBids": true,
              "honorExpiredBid": false
            },
            "rateLimit": {
              "maxRequests": 10,
              "perSeconds": 60
            },
            "bidAdjustments": [],
            "bidSettings": {
              "baseBidAmount": 10,
              "maxBidAmount": 25,
              "deDupeSetting": {
                "secondsFromLastCall": -1
              },
              "conversionType": "incomingCall",
              "conversionArgs": {
                "callLengthInSeconds": 30,
                "startTimerEvent": "OnIncomingCall"
              }
            },
            "tags": []
          }
        }
      },
      "Rtb19": {
        "title": "Rtb19",
        "required": [
          "campaignId",
          "enabled",
          "sipOnly",
          "icp",
          "customIntegrations",
          "callerIdRequired",
          "bidExpirationPolicy",
          "rateLimit",
          "bidAdjustments",
          "bidSettings",
          "tags"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "sipOnly": {
            "type": "boolean"
          },
          "icp": {
            "type": "string"
          },
          "customIntegrations": {
            "$ref": "#/components/schemas/CustomIntegrations"
          },
          "callerIdRequired": {
            "type": "boolean"
          },
          "bidExpirationPolicy": {
            "$ref": "#/components/schemas/BidExpirationPolicy"
          },
          "rateLimit": {
            "$ref": "#/components/schemas/RateLimit"
          },
          "bidAdjustments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "bidSettings": {
            "$ref": "#/components/schemas/BidSettings"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "enabled": true,
          "sipOnly": false,
          "icp": "Off",
          "customIntegrations": {
            "journayaTCPA": {
              "state": "Off"
            }
          },
          "callerIdRequired": false,
          "bidExpirationPolicy": {
            "bidExpirationInSeconds": 20,
            "routeCallsForStaleBids": true,
            "honorExpiredBid": false
          },
          "rateLimit": {
            "maxRequests": 10,
            "perSeconds": 60
          },
          "bidAdjustments": [],
          "bidSettings": {
            "baseBidAmount": 10,
            "maxBidAmount": 25,
            "deDupeSetting": {
              "secondsFromLastCall": -1
            },
            "conversionType": "incomingCall",
            "conversionArgs": {
              "callLengthInSeconds": 30,
              "startTimerEvent": "OnIncomingCall"
            }
          },
          "tags": []
        }
      },
      "CustomIntegrations": {
        "title": "CustomIntegrations",
        "required": [
          "journayaTCPA"
        ],
        "type": "object",
        "properties": {
          "journayaTCPA": {
            "$ref": "#/components/schemas/JournayaTCPA"
          }
        },
        "example": {
          "journayaTCPA": {
            "state": "Off"
          }
        }
      },
      "JournayaTCPA": {
        "title": "JournayaTCPA",
        "required": [
          "state"
        ],
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          }
        },
        "example": {
          "state": "Off"
        }
      },
      "BidExpirationPolicy": {
        "title": "BidExpirationPolicy",
        "required": [
          "bidExpirationInSeconds",
          "routeCallsForStaleBids",
          "honorExpiredBid"
        ],
        "type": "object",
        "properties": {
          "bidExpirationInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "routeCallsForStaleBids": {
            "type": "boolean"
          },
          "honorExpiredBid": {
            "type": "boolean"
          }
        },
        "example": {
          "bidExpirationInSeconds": 20,
          "routeCallsForStaleBids": true,
          "honorExpiredBid": false
        }
      },
      "RateLimit": {
        "title": "RateLimit",
        "required": [
          "maxRequests",
          "perSeconds"
        ],
        "type": "object",
        "properties": {
          "maxRequests": {
            "type": "integer",
            "format": "int32"
          },
          "perSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "maxRequests": 10,
          "perSeconds": 60
        }
      },
      "BidSettings": {
        "title": "BidSettings",
        "required": [
          "baseBidAmount",
          "maxBidAmount",
          "deDupeSetting",
          "conversionType",
          "conversionArgs"
        ],
        "type": "object",
        "properties": {
          "baseBidAmount": {
            "type": "integer",
            "format": "int32"
          },
          "maxBidAmount": {
            "type": "integer",
            "format": "int32"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          },
          "conversionType": {
            "type": "string"
          },
          "conversionArgs": {
            "$ref": "#/components/schemas/ConversionArgs1"
          }
        },
        "example": {
          "baseBidAmount": 10,
          "maxBidAmount": 25,
          "deDupeSetting": {
            "secondsFromLastCall": -1
          },
          "conversionType": "incomingCall",
          "conversionArgs": {
            "callLengthInSeconds": 30,
            "startTimerEvent": "OnIncomingCall"
          }
        }
      },
      "GetRTBforCampaignwithoutRTBenabled1": {
        "title": "GetRTBforCampaignwithoutRTBenabled1",
        "required": [
          "message",
          "errors",
          "messageCode",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "messageCode": {
            "type": "integer",
            "format": "int32"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "example": {
          "message": "CAf36c8dcd536349bd9114d27618eefb97 is not found",
          "errors": [
            "CAf36c8dcd536349bd9114d27618eefb97 is not found"
          ],
          "messageCode": 101,
          "transactionId": "TR96011b4f-ae14-48c2-b815-8894476efb54"
        }
      },
      "EnableRTBforaCampaignRequest": {
        "title": "EnableRTBforaCampaignRequest",
        "required": [
          "enabled",
          "sipOnly",
          "callerIdRequired",
          "icp",
          "customIntegrations",
          "bidExpirationPolicy",
          "rateLimit",
          "bidSettings",
          "bidAdjustments"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "sipOnly": {
            "type": "boolean"
          },
          "callerIdRequired": {
            "type": "boolean"
          },
          "icp": {
            "type": "string"
          },
          "customIntegrations": {
            "$ref": "#/components/schemas/CustomIntegrations"
          },
          "bidExpirationPolicy": {
            "$ref": "#/components/schemas/BidExpirationPolicy1"
          },
          "rateLimit": {
            "$ref": "#/components/schemas/RateLimit"
          },
          "bidSettings": {
            "$ref": "#/components/schemas/BidSettings"
          },
          "bidAdjustments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "enabled": true,
          "sipOnly": false,
          "callerIdRequired": false,
          "icp": "Off",
          "customIntegrations": {
            "journayaTCPA": {
              "state": "Off"
            }
          },
          "bidExpirationPolicy": {
            "bidExpirationInSeconds": 20,
            "routeCallsForStaleBids": false
          },
          "rateLimit": {
            "maxRequests": 10,
            "perSeconds": 60
          },
          "bidSettings": {
            "baseBidAmount": 10,
            "maxBidAmount": 25,
            "conversionType": "incomingCall",
            "conversionArgs": {
              "callLengthInSeconds": 30,
              "startTimerEvent": "OnIncomingCall"
            },
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "bidAdjustments": []
        }
      },
      "BidExpirationPolicy1": {
        "title": "BidExpirationPolicy1",
        "required": [
          "bidExpirationInSeconds",
          "routeCallsForStaleBids"
        ],
        "type": "object",
        "properties": {
          "bidExpirationInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "routeCallsForStaleBids": {
            "type": "boolean"
          }
        },
        "example": {
          "bidExpirationInSeconds": 20,
          "routeCallsForStaleBids": false
        }
      },
      "EnableRTBforaCampaign": {
        "title": "EnableRTBforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb20"
          }
        },
        "example": {
          "transactionId": "TRb8d4701c-ec01-4a50-ba35-11b69c16316b",
          "isSuccessful": true,
          "rtb": {
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "enabled": true,
            "sipOnly": false,
            "icp": "Off",
            "customIntegrations": null,
            "callerIdRequired": false,
            "bidExpirationPolicy": {
              "bidExpirationInSeconds": 20,
              "routeCallsForStaleBids": false,
              "honorExpiredBid": false
            },
            "rateLimit": {
              "maxRequests": 10,
              "perSeconds": 60
            },
            "bidAdjustments": [],
            "bidSettings": {
              "baseBidAmount": 10,
              "maxBidAmount": 25,
              "deDupeSetting": {
                "secondsFromLastCall": 0
              },
              "conversionType": "incomingCall",
              "conversionArgs": {
                "callLengthInSeconds": 30,
                "startTimerEvent": "OnIncomingCall"
              }
            },
            "tags": []
          }
        }
      },
      "Rtb20": {
        "title": "Rtb20",
        "required": [
          "campaignId",
          "enabled",
          "sipOnly",
          "icp",
          "customIntegrations",
          "callerIdRequired",
          "bidExpirationPolicy",
          "rateLimit",
          "bidAdjustments",
          "bidSettings",
          "tags"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "sipOnly": {
            "type": "boolean"
          },
          "icp": {
            "type": "string"
          },
          "customIntegrations": {
            "type": "string",
            "nullable": true
          },
          "callerIdRequired": {
            "type": "boolean"
          },
          "bidExpirationPolicy": {
            "$ref": "#/components/schemas/BidExpirationPolicy"
          },
          "rateLimit": {
            "$ref": "#/components/schemas/RateLimit"
          },
          "bidAdjustments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "bidSettings": {
            "$ref": "#/components/schemas/BidSettings"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "enabled": true,
          "sipOnly": false,
          "icp": "Off",
          "customIntegrations": null,
          "callerIdRequired": false,
          "bidExpirationPolicy": {
            "bidExpirationInSeconds": 20,
            "routeCallsForStaleBids": false,
            "honorExpiredBid": false
          },
          "rateLimit": {
            "maxRequests": 10,
            "perSeconds": 60
          },
          "bidAdjustments": [],
          "bidSettings": {
            "baseBidAmount": 10,
            "maxBidAmount": 25,
            "deDupeSetting": {
              "secondsFromLastCall": 0
            },
            "conversionType": "incomingCall",
            "conversionArgs": {
              "callLengthInSeconds": 30,
              "startTimerEvent": "OnIncomingCall"
            }
          },
          "tags": []
        }
      },
      "EnableRTBforaCampaignwithadjustments": {
        "title": "EnableRTBforaCampaignwithadjustments",
        "required": [
          "transactionId",
          "isSuccessful",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb21"
          }
        }
      },
      "Rtb21": {
        "title": "Rtb21",
        "required": [
          "campaignId",
          "enabled",
          "sipOnly",
          "icp",
          "customIntegrations",
          "callerIdRequired",
          "bidExpirationPolicy",
          "rateLimit",
          "bidAdjustments",
          "bidSettings",
          "tags"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "sipOnly": {
            "type": "boolean"
          },
          "icp": {
            "type": "string"
          },
          "customIntegrations": {
            "type": "string",
            "nullable": true
          },
          "callerIdRequired": {
            "type": "boolean"
          },
          "bidExpirationPolicy": {
            "$ref": "#/components/schemas/BidExpirationPolicy"
          },
          "rateLimit": {
            "$ref": "#/components/schemas/RateLimit"
          },
          "bidAdjustments": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BidAdjustment"
              }
            }
          },
          "bidSettings": {
            "$ref": "#/components/schemas/BidSettings"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag2"
            },
            "description": ""
          }
        }
      },
      "BidAdjustment": {
        "title": "BidAdjustment",
        "required": [
          "criteria"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/Criteria"
          },
          "adjustmentType": {
            "type": "string"
          },
          "adjustmentValue": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "type": "number"
              }
            ]
          },
          "bulkListId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Criteria": {
        "title": "Criteria",
        "required": [
          "tagId",
          "comparisonType",
          "value",
          "isNegativeMatch"
        ],
        "type": "object",
        "properties": {
          "tagId": {
            "type": "string"
          },
          "comparisonType": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "isNegativeMatch": {
            "type": "boolean"
          }
        },
        "example": {
          "tagId": "some tag",
          "comparisonType": "EQUALS",
          "value": "1",
          "isNegativeMatch": false
        }
      },
      "Tag2": {
        "title": "Tag2",
        "required": [
          "tag",
          "required"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        },
        "example": {
          "tag": "tag five",
          "required": true
        }
      },
      "EditRTBSettingsforaCampaignRequest": {
        "title": "EditRTBSettingsforaCampaignRequest",
        "required": [
          "bidAdjustments"
        ],
        "type": "object",
        "properties": {
          "bidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidAdjustment1"
            },
            "description": ""
          }
        },
        "example": {
          "bidAdjustments": [
            {
              "criteria": {
                "tagId": "{Demographics:Age}",
                "comparisonType": "BULK",
                "value": "1",
                "isNegativeMatch": false
              },
              "adjustmentType": "Multiply",
              "adjustmentValue": 1.0,
              "bulkListId": "RTBLISTc5de66696f8142448b0f0de930c35acb"
            }
          ]
        }
      },
      "BidAdjustment1": {
        "title": "BidAdjustment1",
        "required": [
          "criteria",
          "adjustmentType",
          "adjustmentValue",
          "bulkListId"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/Criteria"
          },
          "adjustmentType": {
            "type": "string"
          },
          "adjustmentValue": {
            "type": "number"
          },
          "bulkListId": {
            "type": "string"
          }
        },
        "example": {
          "criteria": {
            "tagId": "{Demographics:Age}",
            "comparisonType": "BULK",
            "value": "1",
            "isNegativeMatch": false
          },
          "adjustmentType": "Multiply",
          "adjustmentValue": 1.0,
          "bulkListId": "RTBLISTc5de66696f8142448b0f0de930c35acb"
        }
      },
      "AddBulkModifiertoaCampaign": {
        "title": "AddBulkModifiertoaCampaign",
        "required": [
          "transactionId",
          "isSuccessful",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb22"
          }
        },
        "example": {
          "transactionId": "TR588d2288-ad33-4e77-99a5-309d0ea08f90",
          "isSuccessful": true,
          "rtb": {
            "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
            "enabled": true,
            "sipOnly": false,
            "icp": "Off",
            "customIntegrations": {
              "journayaTCPA": {
                "state": "Off"
              }
            },
            "callerIdRequired": false,
            "bidExpirationPolicy": {
              "bidExpirationInSeconds": 20,
              "routeCallsForStaleBids": true,
              "honorExpiredBid": false
            },
            "rateLimit": {
              "maxRequests": 10,
              "perSeconds": 86400
            },
            "bidAdjustments": [
              {
                "criteria": {
                  "tagId": "{Demographics:Age}",
                  "comparisonType": "BULK",
                  "value": "1",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Multiply",
                "adjustmentValue": 1,
                "bulkListId": "RTBLISTc5de66696f8142448b0f0de930c35acb"
              }
            ],
            "bidSettings": {
              "baseBidAmount": 10,
              "maxBidAmount": 25,
              "deDupeSetting": {
                "secondsFromLastCall": 3600
              },
              "conversionType": "callLength",
              "conversionArgs": {
                "callLengthInSeconds": 30,
                "startTimerEvent": "OnCallConnected"
              }
            },
            "tags": [
              {
                "tag": "Age Bulk Modifier",
                "required": false
              }
            ]
          }
        }
      },
      "Rtb22": {
        "title": "Rtb22",
        "required": [
          "campaignId",
          "enabled",
          "sipOnly",
          "icp",
          "customIntegrations",
          "callerIdRequired",
          "bidExpirationPolicy",
          "rateLimit",
          "bidAdjustments",
          "bidSettings",
          "tags"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "sipOnly": {
            "type": "boolean"
          },
          "icp": {
            "type": "string"
          },
          "customIntegrations": {
            "$ref": "#/components/schemas/CustomIntegrations"
          },
          "callerIdRequired": {
            "type": "boolean"
          },
          "bidExpirationPolicy": {
            "$ref": "#/components/schemas/BidExpirationPolicy"
          },
          "rateLimit": {
            "$ref": "#/components/schemas/RateLimit"
          },
          "bidAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidAdjustment2"
            },
            "description": ""
          },
          "bidSettings": {
            "$ref": "#/components/schemas/BidSettings"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag2"
            },
            "description": ""
          }
        },
        "example": {
          "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
          "enabled": true,
          "sipOnly": false,
          "icp": "Off",
          "customIntegrations": {
            "journayaTCPA": {
              "state": "Off"
            }
          },
          "callerIdRequired": false,
          "bidExpirationPolicy": {
            "bidExpirationInSeconds": 20,
            "routeCallsForStaleBids": true,
            "honorExpiredBid": false
          },
          "rateLimit": {
            "maxRequests": 10,
            "perSeconds": 86400
          },
          "bidAdjustments": [
            {
              "criteria": {
                "tagId": "{Demographics:Age}",
                "comparisonType": "BULK",
                "value": "1",
                "isNegativeMatch": false
              },
              "adjustmentType": "Multiply",
              "adjustmentValue": 1,
              "bulkListId": "RTBLISTc5de66696f8142448b0f0de930c35acb"
            }
          ],
          "bidSettings": {
            "baseBidAmount": 10,
            "maxBidAmount": 25,
            "deDupeSetting": {
              "secondsFromLastCall": 3600
            },
            "conversionType": "callLength",
            "conversionArgs": {
              "callLengthInSeconds": 30,
              "startTimerEvent": "OnCallConnected"
            }
          },
          "tags": [
            {
              "tag": "Age Bulk Modifier",
              "required": false
            }
          ]
        }
      },
      "BidAdjustment2": {
        "title": "BidAdjustment2",
        "required": [
          "criteria",
          "adjustmentType",
          "adjustmentValue",
          "bulkListId"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/Criteria"
          },
          "adjustmentType": {
            "type": "string"
          },
          "adjustmentValue": {
            "type": "integer",
            "format": "int32"
          },
          "bulkListId": {
            "type": "string"
          }
        },
        "example": {
          "criteria": {
            "tagId": "{Demographics:Age}",
            "comparisonType": "BULK",
            "value": "1",
            "isNegativeMatch": false
          },
          "adjustmentType": "Multiply",
          "adjustmentValue": 1,
          "bulkListId": "RTBLISTc5de66696f8142448b0f0de930c35acb"
        }
      },
      "PauseRTBforaCampaign": {
        "title": "PauseRTBforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb19"
          }
        },
        "example": {
          "transactionId": "TR2cce414e-a385-492b-8c9d-44694198b18b",
          "isSuccessful": true,
          "rtb": {
            "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
            "enabled": false,
            "sipOnly": false,
            "icp": "Off",
            "customIntegrations": {
              "journayaTCPA": {
                "state": "Off"
              }
            },
            "callerIdRequired": false,
            "bidExpirationPolicy": {
              "bidExpirationInSeconds": 20,
              "routeCallsForStaleBids": true,
              "honorExpiredBid": false
            },
            "rateLimit": {
              "maxRequests": 10,
              "perSeconds": 60
            },
            "bidAdjustments": [],
            "bidSettings": {
              "baseBidAmount": 10,
              "maxBidAmount": 25,
              "deDupeSetting": {
                "secondsFromLastCall": -1
              },
              "conversionType": "incomingCall",
              "conversionArgs": {
                "callLengthInSeconds": 30,
                "startTimerEvent": "OnIncomingCall"
              }
            },
            "tags": []
          }
        }
      },
      "DisableRTBforaCampaign": {
        "title": "DisableRTBforaCampaign",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRd76c8435-6e8e-42e7-9bc2-14707d782974",
          "isSuccessful": true
        }
      },
      "GetRTBURLsforaPublisher": {
        "title": "GetRTBURLsforaPublisher",
        "required": [
          "transactionId",
          "isSuccessful",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb24"
          }
        },
        "example": {
          "transactionId": "TR265361bf-b398-42fa-bb4e-2ff2cc3212fd",
          "isSuccessful": true,
          "rtb": {
            "urls": {
              "json": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.json",
              "xml": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.xml"
            }
          }
        }
      },
      "Rtb24": {
        "title": "Rtb24",
        "required": [
          "urls"
        ],
        "type": "object",
        "properties": {
          "urls": {
            "$ref": "#/components/schemas/Urls"
          }
        },
        "example": {
          "urls": {
            "json": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.json",
            "xml": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.xml"
          }
        }
      },
      "Urls": {
        "title": "Urls",
        "required": [
          "json",
          "xml"
        ],
        "type": "object",
        "properties": {
          "json": {
            "type": "string"
          },
          "xml": {
            "type": "string"
          }
        },
        "example": {
          "json": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.json",
          "xml": "https://rtb.ringba.com/v1/production/b106b4d2a6f843bc94dd2c0f030570e5.xml"
        }
      },
      "OverrideRTBSettingsforaPublisherRequest": {
        "title": "OverrideRTBSettingsforaPublisherRequest",
        "required": [
          "enabled",
          "callerIdRequiredOverride",
          "rateLimitOverride",
          "bidSettingsOverride",
          "bidAdjustmentsOverride"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "callerIdRequiredOverride": {
            "type": "boolean"
          },
          "rateLimitOverride": {
            "$ref": "#/components/schemas/RateLimitOverride"
          },
          "bidSettingsOverride": {
            "$ref": "#/components/schemas/BidSettingsOverride"
          },
          "bidAdjustmentsOverride": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidAdjustmentsOverride"
            },
            "description": ""
          }
        },
        "example": {
          "enabled": true,
          "callerIdRequiredOverride": false,
          "rateLimitOverride": {
            "maxRequests": 12,
            "perSeconds": 86400
          },
          "bidSettingsOverride": {
            "baseBidAmount": 9,
            "maxBidAmount": 21,
            "conversionType": "callLength",
            "conversionArgs": {
              "callLengthInSeconds": 30,
              "startTimerEvent": "OnCallConnected"
            },
            "deDupeSetting": {
              "secondsFromLastCall": 3600
            }
          },
          "bidAdjustmentsOverride": [
            {
              "criteria": {
                "tagId": "some tag",
                "comparisonType": "EQUALS",
                "value": "1",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 2,
              "bulkListId": null
            },
            {
              "criteria": {
                "tagId": "tag one",
                "comparisonType": "BULK",
                "value": "",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 2
            },
            {
              "criteria": {
                "tagId": "tag two",
                "comparisonType": "CONTAINS",
                "value": "value",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": -2,
              "bulkListId": null
            },
            {
              "criteria": {
                "tagId": "tag three",
                "comparisonType": "GREATER_THAN",
                "value": "3",
                "isNegativeMatch": false
              },
              "adjustmentType": "Multiply",
              "adjustmentValue": 2,
              "bulkListId": null
            },
            {
              "criteria": {
                "tagId": "tag four",
                "comparisonType": "MATCH",
                "value": "?*",
                "isNegativeMatch": true
              },
              "adjustmentType": "Override",
              "adjustmentValue": 5,
              "bulkListId": null
            },
            {
              "criteria": {
                "tagId": "tag five",
                "comparisonType": "REQUIRED",
                "value": "",
                "isNegativeMatch": false
              }
            },
            {
              "criteria": {
                "tagId": "ip address",
                "comparisonType": "REGEX",
                "value": "201\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 10,
              "bulkListId": null
            },
            {
              "criteria": {
                "tagId": "full name",
                "comparisonType": "MATCH",
                "value": "*Smith*",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 12,
              "bulkListId": null
            }
          ]
        }
      },
      "RateLimitOverride": {
        "title": "RateLimitOverride",
        "required": [
          "maxRequests",
          "perSeconds"
        ],
        "type": "object",
        "properties": {
          "maxRequests": {
            "type": "integer",
            "format": "int32"
          },
          "perSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "maxRequests": 12,
          "perSeconds": 86400
        }
      },
      "BidSettingsOverride": {
        "title": "BidSettingsOverride",
        "required": [
          "baseBidAmount",
          "maxBidAmount",
          "conversionType",
          "conversionArgs",
          "deDupeSetting"
        ],
        "type": "object",
        "properties": {
          "baseBidAmount": {
            "type": "integer",
            "format": "int32"
          },
          "maxBidAmount": {
            "type": "integer",
            "format": "int32"
          },
          "conversionType": {
            "type": "string"
          },
          "conversionArgs": {
            "$ref": "#/components/schemas/ConversionArgs1"
          },
          "deDupeSetting": {
            "$ref": "#/components/schemas/DeDupeSetting"
          }
        },
        "example": {
          "baseBidAmount": 9,
          "maxBidAmount": 21,
          "conversionType": "callLength",
          "conversionArgs": {
            "callLengthInSeconds": 30,
            "startTimerEvent": "OnCallConnected"
          },
          "deDupeSetting": {
            "secondsFromLastCall": 3600
          }
        }
      },
      "BidAdjustmentsOverride": {
        "title": "BidAdjustmentsOverride",
        "required": [
          "criteria"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/Criteria"
          },
          "adjustmentType": {
            "type": "string"
          },
          "adjustmentValue": {
            "type": "integer",
            "format": "int32"
          },
          "bulkListId": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "criteria": {
            "tagId": "some tag",
            "comparisonType": "EQUALS",
            "value": "1",
            "isNegativeMatch": false
          },
          "adjustmentType": "Add",
          "adjustmentValue": 2,
          "bulkListId": null
        }
      },
      "OverrideRTBSettingsforaPublisher": {
        "title": "OverrideRTBSettingsforaPublisher",
        "required": [
          "transactionId",
          "isSuccessful",
          "publisher-rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "publisher-rtb": {
            "$ref": "#/components/schemas/PublisherRtb"
          }
        },
        "example": {
          "transactionId": "TRde65ebd3-d6b2-47c4-afb3-88f134cd7ede",
          "isSuccessful": true,
          "publisher-rtb": {
            "id": "b106b4d2a6f843bc94dd2c0f030570e5",
            "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
            "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "enabled": true,
            "bidAdjustmentsOverride": [
              {
                "criteria": {
                  "tagId": "some tag",
                  "comparisonType": "EQUALS",
                  "value": "1",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Add",
                "adjustmentValue": 2
              },
              {
                "criteria": {
                  "tagId": "tag one",
                  "comparisonType": "BULK",
                  "value": "",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Add",
                "adjustmentValue": 2
              },
              {
                "criteria": {
                  "tagId": "tag two",
                  "comparisonType": "CONTAINS",
                  "value": "value",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Add",
                "adjustmentValue": -2
              },
              {
                "criteria": {
                  "tagId": "tag three",
                  "comparisonType": "GREATER_THAN",
                  "value": "3",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Multiply",
                "adjustmentValue": 2
              },
              {
                "criteria": {
                  "tagId": "tag four",
                  "comparisonType": "MATCH",
                  "value": "?*",
                  "isNegativeMatch": true
                },
                "adjustmentType": "Override",
                "adjustmentValue": 5
              },
              {
                "criteria": {
                  "tagId": "tag five",
                  "comparisonType": "REQUIRED",
                  "value": "",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Multiply",
                "adjustmentValue": 0
              },
              {
                "criteria": {
                  "tagId": "ip address",
                  "comparisonType": "REGEX",
                  "value": "201\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Add",
                "adjustmentValue": 10
              },
              {
                "criteria": {
                  "tagId": "full name",
                  "comparisonType": "MATCH",
                  "value": "*Smith*",
                  "isNegativeMatch": false
                },
                "adjustmentType": "Add",
                "adjustmentValue": 12
              }
            ],
            "bidExpirationPolicyOverride": null,
            "bidSettingsOverride": {
              "baseBidAmount": 9,
              "maxBidAmount": 21,
              "deDupeSetting": {
                "secondsFromLastCall": 3600
              },
              "conversionType": "callLength",
              "conversionArgs": {
                "callLengthInSeconds": 30,
                "startTimerEvent": "OnCallConnected"
              }
            },
            "rateLimitOverride": {
              "maxRequests": 12,
              "perSeconds": 86400
            },
            "callerIdRequiredOverride": false,
            "tags": [
              {
                "tag": "tag five",
                "required": true
              },
              {
                "tag": "some tag",
                "required": false
              },
              {
                "tag": "tag one",
                "required": false
              },
              {
                "tag": "tag two",
                "required": false
              },
              {
                "tag": "tag three",
                "required": false
              },
              {
                "tag": "tag four",
                "required": false
              },
              {
                "tag": "ip address",
                "required": false
              },
              {
                "tag": "full name",
                "required": false
              }
            ]
          }
        }
      },
      "PublisherRtb": {
        "title": "PublisherRtb",
        "required": [
          "id",
          "campaignId",
          "publisherId",
          "enabled",
          "bidAdjustmentsOverride",
          "bidExpirationPolicyOverride",
          "bidSettingsOverride",
          "rateLimitOverride",
          "callerIdRequiredOverride",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "publisherId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "bidAdjustmentsOverride": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidAdjustmentsOverride1"
            },
            "description": ""
          },
          "bidExpirationPolicyOverride": {
            "type": "string",
            "nullable": true
          },
          "bidSettingsOverride": {
            "$ref": "#/components/schemas/BidSettingsOverride"
          },
          "rateLimitOverride": {
            "$ref": "#/components/schemas/RateLimitOverride"
          },
          "callerIdRequiredOverride": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag2"
            },
            "description": ""
          }
        },
        "example": {
          "id": "b106b4d2a6f843bc94dd2c0f030570e5",
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "publisherId": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "enabled": true,
          "bidAdjustmentsOverride": [
            {
              "criteria": {
                "tagId": "some tag",
                "comparisonType": "EQUALS",
                "value": "1",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 2
            },
            {
              "criteria": {
                "tagId": "tag one",
                "comparisonType": "BULK",
                "value": "",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 2
            },
            {
              "criteria": {
                "tagId": "tag two",
                "comparisonType": "CONTAINS",
                "value": "value",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": -2
            },
            {
              "criteria": {
                "tagId": "tag three",
                "comparisonType": "GREATER_THAN",
                "value": "3",
                "isNegativeMatch": false
              },
              "adjustmentType": "Multiply",
              "adjustmentValue": 2
            },
            {
              "criteria": {
                "tagId": "tag four",
                "comparisonType": "MATCH",
                "value": "?*",
                "isNegativeMatch": true
              },
              "adjustmentType": "Override",
              "adjustmentValue": 5
            },
            {
              "criteria": {
                "tagId": "tag five",
                "comparisonType": "REQUIRED",
                "value": "",
                "isNegativeMatch": false
              },
              "adjustmentType": "Multiply",
              "adjustmentValue": 0
            },
            {
              "criteria": {
                "tagId": "ip address",
                "comparisonType": "REGEX",
                "value": "201\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 10
            },
            {
              "criteria": {
                "tagId": "full name",
                "comparisonType": "MATCH",
                "value": "*Smith*",
                "isNegativeMatch": false
              },
              "adjustmentType": "Add",
              "adjustmentValue": 12
            }
          ],
          "bidExpirationPolicyOverride": null,
          "bidSettingsOverride": {
            "baseBidAmount": 9,
            "maxBidAmount": 21,
            "deDupeSetting": {
              "secondsFromLastCall": 3600
            },
            "conversionType": "callLength",
            "conversionArgs": {
              "callLengthInSeconds": 30,
              "startTimerEvent": "OnCallConnected"
            }
          },
          "rateLimitOverride": {
            "maxRequests": 12,
            "perSeconds": 86400
          },
          "callerIdRequiredOverride": false,
          "tags": [
            {
              "tag": "tag five",
              "required": true
            },
            {
              "tag": "some tag",
              "required": false
            },
            {
              "tag": "tag one",
              "required": false
            },
            {
              "tag": "tag two",
              "required": false
            },
            {
              "tag": "tag three",
              "required": false
            },
            {
              "tag": "tag four",
              "required": false
            },
            {
              "tag": "ip address",
              "required": false
            },
            {
              "tag": "full name",
              "required": false
            }
          ]
        }
      },
      "BidAdjustmentsOverride1": {
        "title": "BidAdjustmentsOverride1",
        "required": [
          "criteria",
          "adjustmentType",
          "adjustmentValue"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/Criteria"
          },
          "adjustmentType": {
            "type": "string"
          },
          "adjustmentValue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "criteria": {
            "tagId": "some tag",
            "comparisonType": "EQUALS",
            "value": "1",
            "isNegativeMatch": false
          },
          "adjustmentType": "Add",
          "adjustmentValue": 2
        }
      },
      "AddIVRTreetoaCampaignRequest": {
        "title": "AddIVRTreetoaCampaignRequest",
        "required": [
          "ivrTreeId"
        ],
        "type": "object",
        "properties": {
          "ivrTreeId": {
            "type": "string"
          }
        },
        "example": {
          "ivrTreeId": "{{IVRTreeId}}"
        }
      },
      "AddIVRTreetoaCampaign": {
        "title": "AddIVRTreetoaCampaign",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign28"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        }
      },
      "Campaign28": {
        "title": "Campaign28",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "callIVRTree",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber25"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "callIVRTree": {
            "$ref": "#/components/schemas/CallIVRTree6"
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate17"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AffiliateNumber25": {
        "title": "AffiliateNumber25",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "campaignId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18885852294",
          "displayNumber": "+18885852294",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18885852294",
          "campaignId": "",
          "allocationDT": "2021-02-08T23:56:26.0457102Z",
          "lastBillDT": "2021-03-08T00:00:00Z",
          "nextChargeDT": "2021-04-06T00:00:00Z",
          "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 8,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "888",
            "isTollFree": true
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "PNZFWQO0",
          "id": "PNZFWQO0",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "CallIVRTree6": {
        "title": "CallIVRTree6",
        "required": [
          "root",
          "isFinalized",
          "nodes",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "root": {
            "$ref": "#/components/schemas/Root"
          },
          "isFinalized": {
            "type": "boolean"
          },
          "nodes": {
            "$ref": "#/components/schemas/Nodes6"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Nodes6": {
        "title": "Nodes6",
        "required": [
          "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7",
          "recordNode_e41-625f-4695-9811-2c4f5d658473",
          "routerNode_22e-45d2-4155-a9ab-0c3db0abc485",
          "menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc",
          "hangupNode_035-d4dd-4995-98fd-3888b1665f67",
          "gatherNode_247-b0ca-4446-9eda-1906948cf8d5",
          "hangupNode_3d0-291a-43a2-81dc-f9d3a85007e9"
        ],
        "type": "object",
        "properties": {
          "hoursOfOperationNode_3c6-0819-4e02-abcb-b9c684fa83e7": {
            "$ref": "#/components/schemas/HoursOfOperationNode3c608194e02AbcbB9c684fa83e7"
          },
          "recordNode_e41-625f-4695-9811-2c4f5d658473": {
            "$ref": "#/components/schemas/RecordNodeE41625f469598112c4f5d658473"
          },
          "routerNode_22e-45d2-4155-a9ab-0c3db0abc485": {
            "$ref": "#/components/schemas/RouterNode22e45d24155A9ab0c3db0abc485"
          },
          "menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc": {
            "$ref": "#/components/schemas/MenuNode9b1C8b041858fa76c6631b178cc6"
          },
          "hangupNode_035-d4dd-4995-98fd-3888b1665f67": {
            "$ref": "#/components/schemas/HangupNode035D4dd499598fd3888b1665f67"
          },
          "gatherNode_247-b0ca-4446-9eda-1906948cf8d5": {
            "$ref": "#/components/schemas/GatherNode247B0ca44469eda1906948cf8d5"
          },
          "hangupNode_3d0-291a-43a2-81dc-f9d3a85007e9": {
            "$ref": "#/components/schemas/HangupNode3d0291a43a281dcF9d3a85007e9"
          }
        }
      },
      "MenuNode9b1C8b041858fa76c6631b178cc6": {
        "title": "MenuNode9b1C8b041858fa76c6631b178cc6",
        "required": [
          "node",
          "childLinks"
        ],
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/Node3"
          },
          "childLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildLink33"
            },
            "description": ""
          }
        }
      },
      "ChildLink33": {
        "title": "ChildLink33",
        "required": [
          "name",
          "childNodeId",
          "onSuccess",
          "criteria"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "childNodeId": {
            "type": "string"
          },
          "onSuccess": {
            "type": "boolean"
          },
          "criteria": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Criteria5"
                },
                {
                  "$ref": "#/components/schemas/Criteria51"
                }
              ]
            },
            "description": ""
          }
        },
        "example": {
          "name": "OnFailure",
          "childNodeId": "hangupNode_035-d4dd-4995-98fd-3888b1665f67",
          "onSuccess": false,
          "criteria": []
        }
      },
      "Criteria5": {
        "title": "Criteria5",
        "type": "object",
        "properties": {
          "tagCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagCriterion"
            },
            "description": ""
          }
        }
      },
      "Criteria51": {
        "title": "Criteria51",
        "required": [
          "tagCriteria"
        ],
        "type": "object",
        "properties": {
          "tagCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagCriterion"
            },
            "description": ""
          }
        },
        "example": {
          "tagCriteria": [
            {
              "tagIds": [
                "menu:menuNode_9b1-c8b0-4185-8fa7-6c6631b178cc"
              ],
              "comparisonType": "EQUALS",
              "value": "1",
              "isNegativeMatch": false,
              "isNumber": false
            }
          ]
        }
      },
      "RemoveIVRTreefromaCampaign": {
        "title": "RemoveIVRTreefromaCampaign",
        "required": [
          "transactionId",
          "campaign",
          "jsTags",
          "pubNumberEnrichmentUrls",
          "rtb"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign29"
          },
          "jsTags": {
            "type": "object"
          },
          "pubNumberEnrichmentUrls": {
            "$ref": "#/components/schemas/PubNumberEnrichmentUrls"
          },
          "rtb": {
            "$ref": "#/components/schemas/Rtb"
          }
        },
        "example": {
          "transactionId": "TRc8957c5a-76bc-4bf6-bc55-bbc21a4471ba",
          "campaign": {
            "defaultPayout": {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            },
            "defaultPayouts": [
              {
                "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
                "name": "Campaign Default",
                "priority": 0,
                "isRevShare": false,
                "payoutAmount": 0,
                "revSharePercentage": -1,
                "revShareMaxPayoutAmount": -1,
                "revShareMinPayoutAmount": -1,
                "payoutConversionType": "incomingCall",
                "isGlobal": false,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1,
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "concurrencyCap": -1,
                "timeZoneId": "UTC",
                "deDupeSetting": {
                  "secondsFromLastCall": 0
                }
              }
            ],
            "ivrEnabled": true,
            "userCampaignId": "",
            "countryCode": "US",
            "completed": true,
            "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
            "offerId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
            "evalAnonymDuplication": true,
            "payoutDupesGlobal": false,
            "affiliateNumbers": [
              {
                "phoneNumber": "+18885852294",
                "displayNumber": "+18885852294",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+18885852294",
                "campaignId": "",
                "allocationDT": "2021-02-08T23:56:26.0457102Z",
                "lastBillDT": "2021-03-08T00:00:00Z",
                "nextChargeDT": "2021-04-06T00:00:00Z",
                "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 8,
                "isTollFree": true,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "areaCode": "888",
                  "isTollFree": true
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "PNZFWQO0",
                "id": "PNZFWQO0",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "deDupeSettings": {
              "routeToOriginal": false,
              "routeToDifferent": false,
              "strict": true
            },
            "routes": [
              {
                "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
                "priority": {
                  "priority": 1,
                  "weight": 1
                },
                "callTarget": {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+18885852294"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "userIds": [
                      "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                    ],
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": true,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "name": "Example Buyer Co.",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Pacific Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionSettings": [
                  {
                    "conversionValue": 0,
                    "payoutValue": 0,
                    "deDupeSetting": {
                      "secondsFromLastCall": 0
                    },
                    "conversionType": "dialed"
                  }
                ],
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "duplicateSettings": {
              "duplicateSetting": "ON_CONNECT",
              "callLengthInSeconds": 0
            },
            "dialSettings": {
              "dialAttempts": 3
            },
            "recordSetting": {
              "record": true,
              "recordFromAnswer": true,
              "trimSilence": false,
              "dualChannelRecording": true
            },
            "affiliates": [
              {
                "payoutConversionSettings": [],
                "createNumbers": false,
                "isSelf": false,
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "name": "You",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "payoutConversionSettings": [],
                "subId": "",
                "createNumbers": true,
                "isSelf": false,
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "name": "Example Publisher",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "id": "CA7c2b799310f0453982d366cc09488a6a",
            "name": "Example Campaign",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          },
          "jsTags": {},
          "pubNumberEnrichmentUrls": {
            "_PNZFWQO0": "https://display.ringba.com/enrich/PNZFWQO0?callerid=<<E.164-CALLER-NUMBER>>&key1=value1&key2=value2"
          },
          "rtb": {
            "setup": true,
            "enabled": true
          }
        }
      },
      "Campaign29": {
        "title": "Campaign29",
        "required": [
          "defaultPayout",
          "defaultPayouts",
          "ivrEnabled",
          "userCampaignId",
          "countryCode",
          "completed",
          "distributionSetting",
          "offerId",
          "evalAnonymDuplication",
          "payoutDupesGlobal",
          "affiliateNumbers",
          "deDupeSettings",
          "routes",
          "duplicateSettings",
          "dialSettings",
          "recordSetting",
          "affiliates",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "defaultPayout": {
            "$ref": "#/components/schemas/DefaultPayout"
          },
          "defaultPayouts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultPayout"
            },
            "description": ""
          },
          "ivrEnabled": {
            "type": "boolean"
          },
          "userCampaignId": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "distributionSetting": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          },
          "evalAnonymDuplication": {
            "type": "boolean"
          },
          "payoutDupesGlobal": {
            "type": "boolean"
          },
          "affiliateNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateNumber25"
            },
            "description": ""
          },
          "deDupeSettings": {
            "$ref": "#/components/schemas/DeDupeSettings"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Route1"
            },
            "description": ""
          },
          "duplicateSettings": {
            "$ref": "#/components/schemas/DuplicateSettings"
          },
          "dialSettings": {
            "$ref": "#/components/schemas/DialSettings"
          },
          "recordSetting": {
            "$ref": "#/components/schemas/RecordSetting"
          },
          "affiliates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Affiliate17"
            },
            "description": ""
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "defaultPayout": {
            "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
            "name": "Campaign Default",
            "priority": 0,
            "isRevShare": false,
            "payoutAmount": 0,
            "revSharePercentage": -1,
            "revShareMaxPayoutAmount": -1,
            "revShareMinPayoutAmount": -1,
            "payoutConversionType": "incomingCall",
            "isGlobal": false,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1,
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "concurrencyCap": -1,
            "timeZoneId": "UTC",
            "deDupeSetting": {
              "secondsFromLastCall": 0
            }
          },
          "defaultPayouts": [
            {
              "id": "PSe8e59bdb7d6c43fcbef3de970bc63e8b",
              "name": "Campaign Default",
              "priority": 0,
              "isRevShare": false,
              "payoutAmount": 0,
              "revSharePercentage": -1,
              "revShareMaxPayoutAmount": -1,
              "revShareMinPayoutAmount": -1,
              "payoutConversionType": "incomingCall",
              "isGlobal": false,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1,
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "concurrencyCap": -1,
              "timeZoneId": "UTC",
              "deDupeSetting": {
                "secondsFromLastCall": 0
              }
            }
          ],
          "ivrEnabled": true,
          "userCampaignId": "",
          "countryCode": "US",
          "completed": true,
          "distributionSetting": "WEIGHT_BY_TARGETS_AVAILABLE",
          "offerId": "OFR2d0710dd15934dccb9f3e284e8f0dbfc",
          "evalAnonymDuplication": true,
          "payoutDupesGlobal": false,
          "affiliateNumbers": [
            {
              "phoneNumber": "+18885852294",
              "displayNumber": "+18885852294",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18885852294",
              "campaignId": "",
              "allocationDT": "2021-02-08T23:56:26.0457102Z",
              "lastBillDT": "2021-03-08T00:00:00Z",
              "nextChargeDT": "2021-04-06T00:00:00Z",
              "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "888",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "PNZFWQO0",
              "id": "PNZFWQO0",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "deDupeSettings": {
            "routeToOriginal": false,
            "routeToDifferent": false,
            "strict": true
          },
          "routes": [
            {
              "id": "CR1a328af02ed749e6b0bc8ca50bec6fc5",
              "priority": {
                "priority": 1,
                "weight": 1
              },
              "callTarget": {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+18885852294"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "userIds": [
                    "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
                  ],
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": true,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "name": "Example Buyer Co.",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Pacific Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionSettings": [
                {
                  "conversionValue": 0,
                  "payoutValue": 0,
                  "deDupeSetting": {
                    "secondsFromLastCall": 0
                  },
                  "conversionType": "dialed"
                }
              ],
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "duplicateSettings": {
            "duplicateSetting": "ON_CONNECT",
            "callLengthInSeconds": 0
          },
          "dialSettings": {
            "dialAttempts": 3
          },
          "recordSetting": {
            "record": true,
            "recordFromAnswer": true,
            "trimSilence": false,
            "dualChannelRecording": true
          },
          "affiliates": [
            {
              "payoutConversionSettings": [],
              "createNumbers": false,
              "isSelf": false,
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "payoutConversionSettings": [],
              "subId": "",
              "createNumbers": true,
              "isSelf": false,
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "id": "CA7c2b799310f0453982d366cc09488a6a",
          "name": "Example Campaign",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "GetPublishers": {
        "title": "GetPublishers",
        "required": [
          "transactionId",
          "publishers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "publishers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Publisher"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR407cb7bd-d591-4f84-9e9a-6732ed10cf8d",
          "publishers": [
            {
              "id": "AF8df87f01adff4a35a1835394493dbcfe",
              "subId": "pubSubId",
              "createNumbers": true,
              "isSelf": false,
              "name": "New Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "createNumbers": false,
              "isSelf": true,
              "name": "You",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "subId": "",
              "createNumbers": true,
              "accessToRecordings": true,
              "userIds": [
                "8dc1930d-2dd8-4556-ae40-1620f8091e17"
              ],
              "isSelf": false,
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "Publisher": {
        "title": "Publisher",
        "required": [
          "id",
          "createNumbers",
          "isSelf",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "accessToRecordings": {
            "type": "boolean"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "AF8df87f01adff4a35a1835394493dbcfe",
          "subId": "pubSubId",
          "createNumbers": true,
          "isSelf": false,
          "name": "New Publisher",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetCallStatisticsforPublishers": {
        "title": "GetCallStatisticsforPublishers",
        "required": [
          "transactionId",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats1"
          }
        },
        "example": {
          "transactionId": "TR16733af1-7fd0-4182-b905-cf5b43d88704",
          "stats": {
            "aFbd21c4a3274c4382aa98919d5149baf3": {
              "total": 18,
              "currentMonth": 5,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "aFb7d373dc873c4792b3b3e27dd9317a73": {
              "total": 1,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "Stats1": {
        "title": "Stats1",
        "required": [
          "aFbd21c4a3274c4382aa98919d5149baf3",
          "aFb7d373dc873c4792b3b3e27dd9317a73"
        ],
        "type": "object",
        "properties": {
          "aFbd21c4a3274c4382aa98919d5149baf3": {
            "$ref": "#/components/schemas/AFbd21c4a3274c4382aa98919d5149baf3"
          },
          "aFb7d373dc873c4792b3b3e27dd9317a73": {
            "$ref": "#/components/schemas/AFb7d373dc873c4792b3b3e27dd9317a73"
          }
        },
        "example": {
          "aFbd21c4a3274c4382aa98919d5149baf3": {
            "total": 18,
            "currentMonth": 5,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "aFb7d373dc873c4792b3b3e27dd9317a73": {
            "total": 1,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "AFbd21c4a3274c4382aa98919d5149baf3": {
        "title": "AFbd21c4a3274c4382aa98919d5149baf3",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 18,
          "currentMonth": 5,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "AFb7d373dc873c4792b3b3e27dd9317a73": {
        "title": "AFb7d373dc873c4792b3b3e27dd9317a73",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 1,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "GetDetailsAboutSinglePublisher": {
        "title": "GetDetailsAboutSinglePublisher",
        "required": [
          "transactionId",
          "publisher"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "publisher": {
            "$ref": "#/components/schemas/Publisher1"
          }
        },
        "example": {
          "transactionId": "TR5b5e58b6-1d95-46d0-a43f-498eb7719acf",
          "publisher": {
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Publisher1": {
        "title": "Publisher1",
        "required": [
          "id",
          "subId",
          "createNumbers",
          "accessToRecordings",
          "userIds",
          "isSelf",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "accessToRecordings": {
            "type": "boolean"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "isSelf": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "subId": "",
          "createNumbers": true,
          "accessToRecordings": true,
          "userIds": [
            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
          ],
          "isSelf": false,
          "name": "Example Publisher",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetPhoneNumbersforaSinglePublisher": {
        "title": "GetPhoneNumbersforaSinglePublisher",
        "required": [
          "transactionId",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number1"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR35f32c98-ca7f-4293-baba-7ee9b508921b",
          "numbers": [
            {
              "phoneNumber": "+12133572711",
              "displayNumber": "+12133572711",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12133572711",
              "allocationDT": "2021-03-31T14:37:32.9854543Z",
              "lastBillDT": "2021-03-31T00:00:00Z",
              "nextChargeDT": "2021-04-28T00:00:00Z",
              "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 31,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "213",
                "isTollFree": false
              },
              "tags": [
                {
                  "tagType": "DialedNumber",
                  "tagValue": "TagValue",
                  "tagName": "TagName",
                  "tagSource": "Call"
                }
              ],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "UCLTDOMQ",
              "id": "UCLTDOMQ",
              "name": "New Name",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+12132622999",
              "displayNumber": "+12132622999",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12132622999",
              "allocationDT": "2021-03-31T14:29:56.1782423Z",
              "lastBillDT": "2021-03-31T00:00:00Z",
              "nextChargeDT": "2021-04-28T00:00:00Z",
              "lastChargeDT": "2021-03-31T14:29:56.1782423Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 31,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": false
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "MVECPLSM",
              "id": "MVECPLSM",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18336371466",
              "localNumber": "(833) 637-1466",
              "displayNumber": "18336371466",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362385882509739900",
              "campaignId": "",
              "allocationDT": "2020-05-01T17:37:35.3481506Z",
              "lastBillDT": "2021-04-01T00:00:00Z",
              "nextChargeDT": "2021-04-29T00:00:00Z",
              "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "id": "1362385882509739900",
              "name": "Skype3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18885852294",
              "displayNumber": "+18885852294",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18885852294",
              "campaignId": "",
              "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
              "allocationDT": "2021-02-08T23:56:26.0457102Z",
              "lastBillDT": "2021-04-08T00:00:00Z",
              "nextChargeDT": "2021-05-06T00:00:00Z",
              "lastChargeDT": "2021-04-06T23:00:12.4694324Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "888",
                "isTollFree": true
              },
              "tags": [
                {
                  "tagType": "DialedNumber",
                  "tagValue": "NewTagValue",
                  "tagName": "NewTagName",
                  "tagSource": "Call"
                }
              ],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "PNZFWQO0",
              "id": "PNZFWQO0",
              "name": "New Name",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ]
        }
      },
      "Number1": {
        "title": "Number1",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings4"
          },
          "tags": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Tag5"
                },
                {
                  "type": "string"
                }
              ]
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "localNumber": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "jsTagId": {
            "type": "string"
          }
        },
        "example": {
          "phoneNumber": "+12133572711",
          "displayNumber": "+12133572711",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+12133572711",
          "allocationDT": "2021-03-31T14:37:32.9854543Z",
          "lastBillDT": "2021-03-31T00:00:00Z",
          "nextChargeDT": "2021-04-28T00:00:00Z",
          "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 31,
          "isTollFree": false,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "213",
            "isTollFree": false
          },
          "tags": [
            {
              "tagType": "DialedNumber",
              "tagValue": "TagValue",
              "tagName": "TagName",
              "tagSource": "Call"
            }
          ],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "UCLTDOMQ",
          "id": "UCLTDOMQ",
          "name": "New Name",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "Tag5": {
        "title": "Tag5",
        "type": "object",
        "properties": {
          "tagType": {
            "type": "string"
          },
          "tagValue": {
            "type": "string"
          },
          "tagName": {
            "type": "string"
          },
          "tagSource": {
            "type": "string"
          }
        },
        "example": {
          "tagType": "DialedNumber",
          "tagValue": "TagValue",
          "tagName": "TagName",
          "tagSource": "Call"
        }
      },
      "GetUserDetailsforaPublisher": {
        "title": "GetUserDetailsforaPublisher",
        "required": [
          "transactionId",
          "users"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRfc8f0772-7aa6-4555-be34-46c9797972d1",
          "users": [
            {
              "email": "publisher.name@email.com",
              "accounts": [
                {
                  "ringbaAccountId": "RA25107ee2411049989cd8672852278bdb",
                  "roles": [
                    "affiliate"
                  ],
                  "itemAccess": [
                    {
                      "type": "Number",
                      "ids": [
                        "PNZFWQO0",
                        "1362385882509739900",
                        "UCLTDOMQ",
                        "MVECPLSM"
                      ],
                      "permissions": "READ, CREATE, UPDATE, LIST",
                      "fullAccess": false
                    },
                    {
                      "type": "Campaign",
                      "ids": [
                        "CA74c0b7f1f3824246b73e72a9238b4bfc",
                        "CA7c2b799310f0453982d366cc09488a6a"
                      ],
                      "permissions": "READ, LIST",
                      "fullAccess": false
                    },
                    {
                      "type": "Integration",
                      "ids": [],
                      "permissions": "READ, CREATE, UPDATE, LIST, DELETE",
                      "fullAccess": false
                    }
                  ]
                }
              ],
              "uiJsonValues": "{\"settings\":{\"defaultAccount\":{\"accountCreationEpoch\":1528057838387,\"timeZoneId\":\"Pacific Standard Time\",\"accountAddress\":{\"streetAddress\":\"123 Main St\",\"city\":\"San Diego\",\"region\":\"California\",\"postalCode\":\"92101\",\"countryName\":\"United States\",\"countryCode\":\"US\"},\"id\":\"RA25107ee2411049989cd8672852278bdb\",\"name\":\"Ringba\",\"accountId\":\"RA25107ee2411049989cd8672852278bdb\",\"enabled\":true,\"version\":1},\"quickInsightsSettings\":{\"publisher\":{\"selectTabGrouping\":\"campaignName\",\"columnState\":[{\"colId\":\"campaignName\",\"width\":140,\"hide\":false,\"pinned\":\"left\",\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":null}]}},\"callLogsDefaultGridSettings\":{\"publisher\":{\"filterModel\":{},\"columnState\":[{\"colId\":\"callDt\",\"width\":150,\"hide\":false,\"pinned\":\"left\",\"sort\":\"desc\",\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"campaignName\",\"width\":175,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":3},{\"colId\":\"inboundPhoneNumber\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"number\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"numberPoolName\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"isDuplicate\",\"width\":58,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"timeToCallInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"timeToConnectInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"connectedCallLengthInSeconds\",\"width\":57,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"payoutAmount\",\"width\":65,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"callLengthInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1}],\"id\":8095752.5749998167}},\"showCallLogsTour\":\"no\",\"campaigns\":{\"tableState\":{\"sort\":{\"predicate\":\"name\",\"reverse\":false}}},\"apiTokens\":{\"tableState\":{\"sort\":{\"predicate\":\"name\",\"reverse\":false}}}}}",
              "firstName": "Publisher",
              "lastName": "Name",
              "affiliateCombinedIDs": [
                "RA25107ee2411049989cd8672852278bdb-AFb7d373dc873c4792b3b3e27dd9317a73"
              ],
              "invalidatePreviousTokensUtc": "0001-01-01T00:00:00",
              "id": "8dc1930d-2dd8-4556-ae40-1620f8091e17",
              "name": "Publisher Name",
              "accountId": "empty",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "User": {
        "title": "User",
        "required": [
          "email",
          "accounts",
          "uiJsonValues",
          "firstName",
          "lastName",
          "affiliateCombinedIDs",
          "invalidatePreviousTokensUtc",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account1"
            },
            "description": ""
          },
          "uiJsonValues": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "affiliateCombinedIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "invalidatePreviousTokensUtc": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "email": "publisher.name@email.com",
          "accounts": [
            {
              "ringbaAccountId": "RA25107ee2411049989cd8672852278bdb",
              "roles": [
                "affiliate"
              ],
              "itemAccess": [
                {
                  "type": "Number",
                  "ids": [
                    "PNZFWQO0",
                    "1362385882509739900",
                    "UCLTDOMQ",
                    "MVECPLSM"
                  ],
                  "permissions": "READ, CREATE, UPDATE, LIST",
                  "fullAccess": false
                },
                {
                  "type": "Campaign",
                  "ids": [
                    "CA74c0b7f1f3824246b73e72a9238b4bfc",
                    "CA7c2b799310f0453982d366cc09488a6a"
                  ],
                  "permissions": "READ, LIST",
                  "fullAccess": false
                },
                {
                  "type": "Integration",
                  "ids": [],
                  "permissions": "READ, CREATE, UPDATE, LIST, DELETE",
                  "fullAccess": false
                }
              ]
            }
          ],
          "uiJsonValues": "{\"settings\":{\"defaultAccount\":{\"accountCreationEpoch\":1528057838387,\"timeZoneId\":\"Pacific Standard Time\",\"accountAddress\":{\"streetAddress\":\"123 Main St\",\"city\":\"San Diego\",\"region\":\"California\",\"postalCode\":\"92101\",\"countryName\":\"United States\",\"countryCode\":\"US\"},\"id\":\"RA25107ee2411049989cd8672852278bdb\",\"name\":\"Ringba\",\"accountId\":\"RA25107ee2411049989cd8672852278bdb\",\"enabled\":true,\"version\":1},\"quickInsightsSettings\":{\"publisher\":{\"selectTabGrouping\":\"campaignName\",\"columnState\":[{\"colId\":\"campaignName\",\"width\":140,\"hide\":false,\"pinned\":\"left\",\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":null}]}},\"callLogsDefaultGridSettings\":{\"publisher\":{\"filterModel\":{},\"columnState\":[{\"colId\":\"callDt\",\"width\":150,\"hide\":false,\"pinned\":\"left\",\"sort\":\"desc\",\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"campaignName\",\"width\":175,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":3},{\"colId\":\"inboundPhoneNumber\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"number\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"numberPoolName\",\"width\":117,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":2},{\"colId\":\"isDuplicate\",\"width\":58,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"timeToCallInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"timeToConnectInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"connectedCallLengthInSeconds\",\"width\":57,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"payoutAmount\",\"width\":65,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1},{\"colId\":\"callLengthInSeconds\",\"width\":70,\"hide\":false,\"pinned\":null,\"sort\":null,\"sortIndex\":null,\"aggFunc\":null,\"rowGroup\":false,\"rowGroupIndex\":null,\"pivot\":false,\"pivotIndex\":null,\"flex\":1}],\"id\":8095752.5749998167}},\"showCallLogsTour\":\"no\",\"campaigns\":{\"tableState\":{\"sort\":{\"predicate\":\"name\",\"reverse\":false}}},\"apiTokens\":{\"tableState\":{\"sort\":{\"predicate\":\"name\",\"reverse\":false}}}}}",
          "firstName": "Publisher",
          "lastName": "Name",
          "affiliateCombinedIDs": [
            "RA25107ee2411049989cd8672852278bdb-AFb7d373dc873c4792b3b3e27dd9317a73"
          ],
          "invalidatePreviousTokensUtc": "0001-01-01T00:00:00",
          "id": "8dc1930d-2dd8-4556-ae40-1620f8091e17",
          "name": "Publisher Name",
          "accountId": "empty",
          "enabled": true,
          "version": 1
        }
      },
      "Account1": {
        "title": "Account1",
        "required": [
          "ringbaAccountId",
          "roles",
          "itemAccess"
        ],
        "type": "object",
        "properties": {
          "ringbaAccountId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "itemAccess": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemAccess"
            },
            "description": ""
          }
        },
        "example": {
          "ringbaAccountId": "RA25107ee2411049989cd8672852278bdb",
          "roles": [
            "affiliate"
          ],
          "itemAccess": [
            {
              "type": "Number",
              "ids": [
                "PNZFWQO0",
                "1362385882509739900",
                "UCLTDOMQ",
                "MVECPLSM"
              ],
              "permissions": "READ, CREATE, UPDATE, LIST",
              "fullAccess": false
            },
            {
              "type": "Campaign",
              "ids": [
                "CA74c0b7f1f3824246b73e72a9238b4bfc",
                "CA7c2b799310f0453982d366cc09488a6a"
              ],
              "permissions": "READ, LIST",
              "fullAccess": false
            },
            {
              "type": "Integration",
              "ids": [],
              "permissions": "READ, CREATE, UPDATE, LIST, DELETE",
              "fullAccess": false
            }
          ]
        }
      },
      "ItemAccess": {
        "title": "ItemAccess",
        "required": [
          "type",
          "ids",
          "permissions",
          "fullAccess"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "permissions": {
            "type": "string"
          },
          "fullAccess": {
            "type": "boolean"
          }
        },
        "example": {
          "type": "Number",
          "ids": [
            "PNZFWQO0",
            "1362385882509739900",
            "UCLTDOMQ",
            "MVECPLSM"
          ],
          "permissions": "READ, CREATE, UPDATE, LIST",
          "fullAccess": false
        }
      },
      "GetInboundReferencesforaPublisher": {
        "title": "GetInboundReferencesforaPublisher",
        "required": [
          "transactionId",
          "id",
          "hasReferences",
          "refByAccount",
          "campaigns",
          "numbers",
          "ringbausers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          },
          "refByAccount": {
            "type": "boolean"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign30"
            },
            "description": ""
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number"
            },
            "description": ""
          },
          "ringbausers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ringbauser"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR6f142813-4737-4da3-ac0e-8a8b5bd09a2f",
          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "hasReferences": true,
          "refByAccount": true,
          "campaigns": [
            {
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "campaignName": "API Test"
            },
            {
              "campaignId": "CA7c2b799310f0453982d366cc09488a6a",
              "campaignName": "New Name"
            }
          ],
          "numbers": [
            {
              "numberId": "PNZFWQO0",
              "numberName": "+18885852294",
              "numberPhoneNumber": "+18885852294"
            },
            {
              "numberId": "1362385882509739900",
              "numberName": "18336371466",
              "numberPhoneNumber": "+18336371466"
            },
            {
              "numberId": "UCLTDOMQ",
              "numberName": "+12133572711",
              "numberPhoneNumber": "+12133572711"
            },
            {
              "numberId": "MVECPLSM",
              "numberName": "+12132622999",
              "numberPhoneNumber": "+12132622999"
            }
          ],
          "ringbausers": [
            {
              "ringbauserId": "8dc1930d-2dd8-4556-ae40-1620f8091e17",
              "ringbauserName": "Publisher Name"
            }
          ]
        }
      },
      "Campaign30": {
        "title": "Campaign30",
        "required": [
          "campaignId",
          "campaignName"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "campaignName": {
            "type": "string"
          }
        },
        "example": {
          "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
          "campaignName": "API Test"
        }
      },
      "Ringbauser": {
        "title": "Ringbauser",
        "required": [
          "ringbauserId",
          "ringbauserName"
        ],
        "type": "object",
        "properties": {
          "ringbauserId": {
            "type": "string"
          },
          "ringbauserName": {
            "type": "string"
          }
        },
        "example": {
          "ringbauserId": "8dc1930d-2dd8-4556-ae40-1620f8091e17",
          "ringbauserName": "Publisher Name"
        }
      },
      "CreateNewPublisherRequest": {
        "title": "CreateNewPublisherRequest",
        "required": [
          "name",
          "subId",
          "createNumbers",
          "doNotCreateUser",
          "blockCallsIfCapped",
          "accessToRecordings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "doNotCreateUser": {
            "type": "boolean"
          },
          "blockCallsIfCapped": {
            "type": "boolean"
          },
          "accessToRecordings": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "New Publisher",
          "subId": "pubSubId",
          "createNumbers": true,
          "doNotCreateUser": true,
          "blockCallsIfCapped": false,
          "accessToRecordings": true
        }
      },
      "CreateNewPublisher": {
        "title": "CreateNewPublisher",
        "required": [
          "transactionId",
          "publishers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "publishers": {
            "$ref": "#/components/schemas/Publishers"
          }
        },
        "example": {
          "transactionId": "TR4537e9a7-8868-4981-a03e-b6f3d63ba072",
          "publishers": {
            "id": "AFad1ada6acc6e43a68f18c31ec54bef19",
            "subId": "pubSubId",
            "createNumbers": true,
            "accessToRecordings": true,
            "isSelf": false,
            "blockCallsIfCapped": false,
            "name": "New Publisher",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Publishers": {
        "title": "Publishers",
        "required": [
          "id",
          "subId",
          "createNumbers",
          "accessToRecordings",
          "isSelf",
          "blockCallsIfCapped",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "accessToRecordings": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "blockCallsIfCapped": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "AFad1ada6acc6e43a68f18c31ec54bef19",
          "subId": "pubSubId",
          "createNumbers": true,
          "accessToRecordings": true,
          "isSelf": false,
          "blockCallsIfCapped": false,
          "name": "New Publisher",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "EditaPublisherRequest": {
        "title": "EditaPublisherRequest",
        "required": [
          "name",
          "subId",
          "enabled",
          "createNumbers",
          "blockCallsIfCapped",
          "accessToRecordings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "blockCallsIfCapped": {
            "type": "string",
            "nullable": true
          },
          "accessToRecordings": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "New Name",
          "subId": "newPubSubId",
          "enabled": true,
          "createNumbers": false,
          "blockCallsIfCapped": null,
          "accessToRecordings": false
        }
      },
      "EditaPublisher": {
        "title": "EditaPublisher",
        "required": [
          "transactionId",
          "publisher"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "publisher": {
            "$ref": "#/components/schemas/Publisher2"
          }
        },
        "example": {
          "transactionId": "TRd91f3944-3302-4bed-a4c3-efc4e4eb4f6e",
          "publisher": {
            "id": "AFad1ada6acc6e43a68f18c31ec54bef19",
            "subId": "newPubSubId",
            "createNumbers": false,
            "accessToRecordings": false,
            "isSelf": false,
            "name": "New Name",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Publisher2": {
        "title": "Publisher2",
        "required": [
          "id",
          "subId",
          "createNumbers",
          "accessToRecordings",
          "isSelf",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "accessToRecordings": {
            "type": "boolean"
          },
          "isSelf": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "AFad1ada6acc6e43a68f18c31ec54bef19",
          "subId": "newPubSubId",
          "createNumbers": false,
          "accessToRecordings": false,
          "isSelf": false,
          "name": "New Name",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "DeleteaPublisher": {
        "title": "DeleteaPublisher",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR7449b29a-46d2-4747-845b-a175a61bea82",
          "isSuccessful": true
        }
      },
      "GetInvitationsforaPublisher": {
        "title": "GetInvitationsforaPublisher",
        "required": [
          "transactionId",
          "userInvitations"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "userInvitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInvitation"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR3e3095ee-6b5f-4472-9d0c-947dbce25866",
          "userInvitations": [
            {
              "id": "INVfa0530130620440bb490a29a824c2859",
              "email": "new.publisher@email.com",
              "firstName": "New",
              "lastName": "Pub",
              "createdDate": "2021-04-09T16:15:00.0854868Z",
              "expirationDate": "2021-05-09T16:15:00.0854868Z",
              "role": "affiliate",
              "associatedRoleIds": [
                "AFad1ada6acc6e43a68f18c31ec54bef19"
              ],
              "isActive": true,
              "enabled": true,
              "url": "https://offers.ringba.com/domaintest/#/invite/INVfa0530130620440bb490a29a824c2859?fname=New&lname=Pub"
            }
          ]
        }
      },
      "UserInvitation": {
        "title": "UserInvitation",
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "createdDate",
          "expirationDate",
          "role",
          "associatedRoleIds",
          "isActive",
          "enabled",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "associatedRoleIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "isActive": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "id": "INVfa0530130620440bb490a29a824c2859",
          "email": "new.publisher@email.com",
          "firstName": "New",
          "lastName": "Pub",
          "createdDate": "2021-04-09T16:15:00.0854868Z",
          "expirationDate": "2021-05-09T16:15:00.0854868Z",
          "role": "affiliate",
          "associatedRoleIds": [
            "AFad1ada6acc6e43a68f18c31ec54bef19"
          ],
          "isActive": true,
          "enabled": true,
          "url": "https://offers.ringba.com/domaintest/#/invite/INVfa0530130620440bb490a29a824c2859?fname=New&lname=Pub"
        }
      },
      "GetDetailsAboutanInvitation": {
        "title": "GetDetailsAboutanInvitation",
        "required": [
          "transactionId",
          "userInvitation"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "userInvitation": {
            "$ref": "#/components/schemas/UserInvitation"
          }
        },
        "example": {
          "transactionId": "TRec557c13-3c01-4b4e-bb6e-037959f2bf46",
          "userInvitation": {
            "id": "INVfa0530130620440bb490a29a824c2859",
            "email": "new.publisher@email.com",
            "firstName": "New",
            "lastName": "Pub",
            "createdDate": "2021-04-09T16:15:00.0854868Z",
            "expirationDate": "2021-05-09T16:15:00.0854868Z",
            "role": "affiliate",
            "associatedRoleIds": [
              "AFad1ada6acc6e43a68f18c31ec54bef19"
            ],
            "isActive": true,
            "enabled": true,
            "url": "https://offers.ringba.com/domaintest/#/invite/INVfa0530130620440bb490a29a824c2859?fname=New&lname=Pub"
          }
        }
      },
      "InviteUsertoJoinPublisherRequest": {
        "title": "InviteUsertoJoinPublisherRequest",
        "required": [
          "email",
          "confirmEmail",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "confirmEmail": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "example": {
          "email": "new.publisher@email.com",
          "confirmEmail": "new.publisher@email.com",
          "firstName": "New",
          "lastName": "Pub"
        }
      },
      "InviteUser": {
        "title": "InviteUser",
        "required": [
          "transactionId",
          "userInvitation"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "userInvitation": {
            "$ref": "#/components/schemas/UserInvitation"
          }
        },
        "example": {
          "transactionId": "TRe4fe2d3e-b65f-4160-b7ad-865b66a11473",
          "userInvitation": {
            "id": "INVfa0530130620440bb490a29a824c2859",
            "email": "new.publisher@email.com",
            "firstName": "New",
            "lastName": "Pub",
            "createdDate": "2021-04-09T16:15:00.0854868Z",
            "expirationDate": "2021-05-09T16:15:00.0854868Z",
            "role": "affiliate",
            "associatedRoleIds": [
              "AFad1ada6acc6e43a68f18c31ec54bef19"
            ],
            "isActive": true,
            "enabled": true,
            "url": "https://offers.ringba.com/domaintest/#/invite/INVfa0530130620440bb490a29a824c2859?fname=New&lname=Pub"
          }
        }
      },
      "DeleteanInvitation": {
        "title": "DeleteanInvitation",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR0d732bd0-0dcf-40fd-9d94-b05b1a3a5020",
          "isSuccessful": true
        }
      },
      "GetNumbersAssociatedwithAccount": {
        "title": "GetNumbersAssociatedwithAccount",
        "required": [
          "transactionId",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number3"
            },
            "description": ""
          }
        }
      },
      "Number3": {
        "title": "Number3",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "jsTagId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings4"
          },
          "tags": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Tag5"
                },
                {
                  "$ref": "#/components/schemas/Tag61"
                }
              ]
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate52"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "localNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "numberPoolId": {
            "type": "string"
          }
        },
        "example": {
          "phoneNumber": "+18885852294",
          "displayNumber": "+18885852294",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18885852294",
          "campaignId": "",
          "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
          "allocationDT": "2021-02-08T23:56:26.0457102Z",
          "lastBillDT": "2021-03-08T00:00:00Z",
          "nextChargeDT": "2021-04-06T00:00:00Z",
          "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 8,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "888",
            "isTollFree": true
          },
          "tags": [],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "PNZFWQO0",
          "affiliate": {
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "id": "PNZFWQO0",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "Tag61": {
        "title": "Tag61",
        "required": [
          "tagType",
          "tagValue",
          "tagName",
          "tagSource"
        ],
        "type": "object",
        "properties": {
          "tagType": {
            "type": "string"
          },
          "tagValue": {
            "type": "string"
          },
          "tagName": {
            "type": "string"
          },
          "tagSource": {
            "type": "string"
          }
        },
        "example": {
          "tagType": "DialedNumber",
          "tagValue": "12345",
          "tagName": "testingtags",
          "tagSource": "Call"
        }
      },
      "Affiliate52": {
        "title": "Affiliate52",
        "required": [
          "id",
          "createNumbers",
          "isSelf",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "createNumbers": {
            "type": "boolean"
          },
          "accessToRecordings": {
            "type": "boolean"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "isSelf": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "subId": "",
          "createNumbers": true,
          "accessToRecordings": true,
          "userIds": [
            "8dc1930d-2dd8-4556-ae40-1620f8091e17"
          ],
          "isSelf": false,
          "name": "Example Publisher",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetDetailsAboutaSpecificNumber": {
        "title": "GetDetailsAboutaSpecificNumber",
        "required": [
          "transactionId",
          "number"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/Number4"
          }
        },
        "example": {
          "transactionId": "TR4af26d58-5172-4f98-806a-b7493f15ef96",
          "number": {
            "phoneNumber": "+18885852294",
            "displayNumber": "+18885852294",
            "provider": "callrSipForward",
            "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
            "providerId": "+18885852294",
            "campaignId": "",
            "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
            "allocationDT": "2021-02-08T23:56:26.0457102Z",
            "lastBillDT": "2021-03-08T00:00:00Z",
            "nextChargeDT": "2021-04-06T00:00:00Z",
            "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
            "deAllocationDT": "0001-01-01T00:00:00",
            "autoRenew": true,
            "renewDOM": 8,
            "isTollFree": true,
            "isActivated": false,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "888",
              "isTollFree": true
            },
            "tags": [],
            "deallocFlag": false,
            "failedRechargeAttempts": 0,
            "isCarrierNumber": true,
            "carrierNumberId": "PNZFWQO0",
            "affiliate": {
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "subId": "",
              "createNumbers": true,
              "accessToRecordings": true,
              "userIds": [
                "8dc1930d-2dd8-4556-ae40-1620f8091e17"
              ],
              "isSelf": false,
              "name": "Example Publisher",
              "enabled": true,
              "version": 1
            },
            "id": "PNZFWQO0",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Number4": {
        "title": "Number4",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "campaignId",
          "jsTagId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "tags",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "affiliate",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "jsTagId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate3"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18885852294",
          "displayNumber": "+18885852294",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18885852294",
          "campaignId": "",
          "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
          "allocationDT": "2021-02-08T23:56:26.0457102Z",
          "lastBillDT": "2021-03-08T00:00:00Z",
          "nextChargeDT": "2021-04-06T00:00:00Z",
          "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 8,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "888",
            "isTollFree": true
          },
          "tags": [],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "PNZFWQO0",
          "affiliate": {
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "enabled": true,
            "version": 1
          },
          "id": "PNZFWQO0",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "GetInboundReferencesforaSpecificNumberwithaJsTag": {
        "title": "GetInboundReferencesforaSpecificNumberwithaJsTag",
        "required": [
          "transactionId",
          "id",
          "hasReferences",
          "affiliateId",
          "affiliateName",
          "jstagId",
          "jstagName"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          },
          "affiliateId": {
            "type": "string"
          },
          "affiliateName": {
            "type": "string"
          },
          "jstagId": {
            "type": "string"
          },
          "jstagName": {
            "type": "string"
          }
        },
        "example": {
          "transactionId": "TRf3f64536-a9f7-4494-a635-d9d449dbeb93",
          "id": "PNZFWQO0",
          "hasReferences": true,
          "affiliateId": "AFb7d373dc873c4792b3b3e27dd9317a73",
          "affiliateName": "Example Publisher",
          "jstagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
          "jstagName": "Example Js Tag"
        }
      },
      "GetInboundReferencesforaSpecificNumberlinkedtoacampaign": {
        "title": "GetInboundReferencesforaSpecificNumberlinkedtoacampaign",
        "required": [
          "transactionId",
          "id",
          "hasReferences",
          "campaignId",
          "campaignName",
          "affiliateId",
          "affiliateName"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          },
          "campaignId": {
            "type": "string"
          },
          "campaignName": {
            "type": "string"
          },
          "affiliateId": {
            "type": "string"
          },
          "affiliateName": {
            "type": "string"
          }
        },
        "example": {
          "transactionId": "TR536276da-9d96-4e66-87d2-e0aca503f953",
          "id": "SRHBTMYV",
          "hasReferences": true,
          "campaignId": "CAf36c8dcd536349bd9114d27618eefb97",
          "campaignName": "Super Cool Campaign",
          "affiliateId": "AFbd21c4a3274c4382aa98919d5149baf3",
          "affiliateName": "You"
        }
      },
      "GetInboundReferencesforaSpecificNumberwithnoreferences": {
        "title": "GetInboundReferencesforaSpecificNumberwithnoreferences",
        "required": [
          "transactionId",
          "id",
          "hasReferences"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRb3250f2d-d343-4f24-9a05-51e4b91becf3",
          "id": "EBYVCMIC",
          "hasReferences": false
        }
      },
      "CreateNewNumberRequest": {
        "title": "CreateNewNumberRequest",
        "required": [
          "countryCode",
          "chargeAccountIfNeeded",
          "isTollFree",
          "areaCode"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "chargeAccountIfNeeded": {
            "type": "boolean"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "areaCode": {
            "type": "string"
          }
        },
        "example": {
          "countryCode": "US",
          "chargeAccountIfNeeded": true,
          "isTollFree": true,
          "areaCode": "877"
        }
      },
      "CreateNewNumberNotToll-Free": {
        "title": "CreateNewNumberNotToll-Free",
        "required": [
          "transactionId",
          "numberId",
          "number"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/Number5"
          }
        },
        "example": {
          "transactionId": "TR614af2ec-6900-4aa3-9518-28c48fcce131",
          "numberId": "EBYVCMIC",
          "number": {
            "phoneNumber": "+12133573490",
            "displayNumber": "+12133573490",
            "provider": "callrSipForward",
            "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
            "providerId": "+12133573490",
            "allocationDT": "2021-03-31T14:55:11.6286887Z",
            "lastBillDT": "2021-03-31T00:00:00Z",
            "nextChargeDT": "2021-04-28T00:00:00Z",
            "lastChargeDT": "2021-03-31T14:55:11.6286887Z",
            "deAllocationDT": "0001-01-01T00:00:00",
            "autoRenew": true,
            "renewDOM": 31,
            "isTollFree": false,
            "isActivated": false,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "213",
              "isTollFree": false
            },
            "deallocFlag": false,
            "failedRechargeAttempts": 0,
            "isCarrierNumber": true,
            "carrierNumberId": "EBYVCMIC",
            "id": "EBYVCMIC",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Number5": {
        "title": "Number5",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+12133573490",
          "displayNumber": "+12133573490",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+12133573490",
          "allocationDT": "2021-03-31T14:55:11.6286887Z",
          "lastBillDT": "2021-03-31T00:00:00Z",
          "nextChargeDT": "2021-04-28T00:00:00Z",
          "lastChargeDT": "2021-03-31T14:55:11.6286887Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 31,
          "isTollFree": false,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "213",
            "isTollFree": false
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "EBYVCMIC",
          "id": "EBYVCMIC",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "CreateNewNumberToll-Free": {
        "title": "CreateNewNumberToll-Free",
        "required": [
          "transactionId",
          "numberId",
          "number"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberId": {
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/Number5"
          }
        },
        "example": {
          "transactionId": "TR2281d3d2-c9e6-4baf-bd5b-91de042f0f25",
          "numberId": "DZLUDOMY",
          "number": {
            "phoneNumber": "+18883351832",
            "displayNumber": "+18883351832",
            "provider": "callrSipForward",
            "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
            "providerId": "+18883351832",
            "allocationDT": "2021-03-31T15:47:27.6863355Z",
            "lastBillDT": "2021-03-31T00:00:00Z",
            "nextChargeDT": "2021-04-28T00:00:00Z",
            "lastChargeDT": "2021-03-31T15:47:27.6863355Z",
            "deAllocationDT": "0001-01-01T00:00:00",
            "autoRenew": true,
            "renewDOM": 31,
            "isTollFree": true,
            "isActivated": false,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "888",
              "isTollFree": true
            },
            "deallocFlag": false,
            "failedRechargeAttempts": 0,
            "isCarrierNumber": true,
            "carrierNumberId": "DZLUDOMY",
            "id": "DZLUDOMY",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "CreateNewNumberfailedduetolackofinventory1": {
        "title": "CreateNewNumberfailedduetolackofinventory1",
        "required": [
          "transactionId",
          "message",
          "messageCode",
          "errors"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageCode": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR55e81b08-abf4-4e7e-9907-0d0812362c13",
          "message": "could not allocate new number from telco provider",
          "messageCode": 0,
          "errors": [
            "could not allocate new number from telco provider"
          ]
        }
      },
      "AddaPublishertoaNumberRequest": {
        "title": "AddaPublishertoaNumberRequest",
        "required": [
          "affiliateId"
        ],
        "type": "object",
        "properties": {
          "affiliateId": {
            "type": "string"
          }
        },
        "example": {
          "affiliateId": "{{publisherId}}"
        }
      },
      "AddaPublishertoaNumber": {
        "title": "AddaPublishertoaNumber",
        "required": [
          "transactionId",
          "number"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/Number7"
          }
        },
        "example": {
          "transactionId": "TRe26a4cf4-3049-4677-894e-efb74c7aa4fe",
          "number": {
            "phoneNumber": "+13125790806",
            "localNumber": "(312) 579-0806",
            "displayNumber": "13125790806",
            "provider": "telnyx",
            "providerAccountId": "1299489388324979809",
            "providerId": "1362389678229029900",
            "allocationDT": "2020-05-01T17:45:07.4999645Z",
            "lastBillDT": "2021-04-01T00:00:00Z",
            "nextChargeDT": "2021-04-29T00:00:00Z",
            "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
            "deAllocationDT": "0001-01-01T00:00:00",
            "autoRenew": true,
            "renewDOM": 1,
            "isTollFree": false,
            "isActivated": false,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "312",
              "isTollFree": false
            },
            "tags": [],
            "deallocFlag": false,
            "failedRechargeAttempts": 0,
            "isCarrierNumber": false,
            "carrierNumberId": "",
            "affiliate": {
              "id": "AFbd21c4a3274c4382aa98919d5149baf3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "createNumbers": false,
              "isSelf": true,
              "name": "You",
              "enabled": true,
              "version": 1
            },
            "id": "1362389678229029900",
            "name": "Skype1",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Number7": {
        "title": "Number7",
        "required": [
          "phoneNumber",
          "localNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "tags",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "affiliate",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "localNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+13125790806",
          "localNumber": "(312) 579-0806",
          "displayNumber": "13125790806",
          "provider": "telnyx",
          "providerAccountId": "1299489388324979809",
          "providerId": "1362389678229029900",
          "allocationDT": "2020-05-01T17:45:07.4999645Z",
          "lastBillDT": "2021-04-01T00:00:00Z",
          "nextChargeDT": "2021-04-29T00:00:00Z",
          "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 1,
          "isTollFree": false,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "312",
            "isTollFree": false
          },
          "tags": [],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": false,
          "carrierNumberId": "",
          "affiliate": {
            "id": "AFbd21c4a3274c4382aa98919d5149baf3",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "createNumbers": false,
            "isSelf": true,
            "name": "You",
            "enabled": true,
            "version": 1
          },
          "id": "1362389678229029900",
          "name": "Skype1",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "EditInformationAboutaNumberRequest": {
        "title": "EditInformationAboutaNumberRequest",
        "required": [
          "enabled",
          "name",
          "tags"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag7"
            },
            "description": ""
          }
        },
        "example": {
          "enabled": true,
          "name": "New Name",
          "tags": [
            {
              "tagName": "TagName",
              "tagValue": "TagValue"
            }
          ]
        }
      },
      "Tag7": {
        "title": "Tag7",
        "required": [
          "tagName",
          "tagValue"
        ],
        "type": "object",
        "properties": {
          "tagName": {
            "type": "string"
          },
          "tagValue": {
            "type": "string"
          }
        },
        "example": {
          "tagName": "TagName",
          "tagValue": "TagValue"
        }
      },
      "EditInformationAboutaNumber": {
        "title": "EditInformationAboutaNumber",
        "required": [
          "transactionId",
          "number"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/Number8"
          }
        },
        "example": {
          "transactionId": "TR9151e9e9-122e-4cd9-93a0-c7edf9a6411c",
          "number": {
            "phoneNumber": "+12133572711",
            "displayNumber": "+12133572711",
            "provider": "callrSipForward",
            "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
            "providerId": "+12133572711",
            "allocationDT": "2021-03-31T14:37:32.9854543Z",
            "lastBillDT": "2021-03-31T00:00:00Z",
            "nextChargeDT": "2021-04-28T00:00:00Z",
            "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
            "deAllocationDT": "0001-01-01T00:00:00",
            "autoRenew": true,
            "renewDOM": 31,
            "isTollFree": false,
            "isActivated": false,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "213",
              "isTollFree": false
            },
            "tags": [
              {
                "tagType": "DialedNumber",
                "tagValue": "TagValue",
                "tagName": "TagName",
                "tagSource": "Call"
              }
            ],
            "deallocFlag": false,
            "failedRechargeAttempts": 0,
            "isCarrierNumber": true,
            "carrierNumberId": "UCLTDOMQ",
            "affiliate": {
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "subId": "",
              "createNumbers": true,
              "accessToRecordings": true,
              "userIds": [
                "8dc1930d-2dd8-4556-ae40-1620f8091e17"
              ],
              "isSelf": false,
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            "id": "UCLTDOMQ",
            "name": "New Name",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Number8": {
        "title": "Number8",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "tags",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "affiliate",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag61"
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate3"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+12133572711",
          "displayNumber": "+12133572711",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+12133572711",
          "allocationDT": "2021-03-31T14:37:32.9854543Z",
          "lastBillDT": "2021-03-31T00:00:00Z",
          "nextChargeDT": "2021-04-28T00:00:00Z",
          "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 31,
          "isTollFree": false,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "213",
            "isTollFree": false
          },
          "tags": [
            {
              "tagType": "DialedNumber",
              "tagValue": "TagValue",
              "tagName": "TagName",
              "tagSource": "Call"
            }
          ],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "UCLTDOMQ",
          "affiliate": {
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "id": "UCLTDOMQ",
          "name": "New Name",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "DeleteaNumberFromYourAccountfailedrequest-tryingtodeleteanumberthatwasalreadydeleted1": {
        "title": "DeleteaNumberFromYourAccountfailedrequest-tryingtodeleteanumberthatwasalreadydeleted1",
        "required": [
          "message",
          "errors",
          "messageCode",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "messageCode": {
            "type": "integer",
            "format": "int32"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "example": {
          "message": "DZLUDOMY is not found",
          "errors": [
            "DZLUDOMY is not found"
          ],
          "messageCode": 101,
          "transactionId": "TR751b2a95-2992-40e3-b307-587425bd2403"
        }
      },
      "DeleteaNumberFromYourAccountwithunlinkqueryparameter": {
        "title": "DeleteaNumberFromYourAccountwithunlinkqueryparameter",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR7f25f75b-7dee-4a25-ba5b-4d4c5be06bec",
          "isSuccessful": true
        }
      },
      "DeleteaNumberFromYourAccount": {
        "title": "DeleteaNumberFromYourAccount",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR7c3b75b8-415b-47e2-b35c-55b1e4b4c59f",
          "isSuccessful": true
        }
      },
      "DeleteaNumberFromYourAccountfailedbecausenumberislinkedtootherobjects1": {
        "title": "DeleteaNumberFromYourAccountfailedbecausenumberislinkedtootherobjects1",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Please remove all references to this number"
        }
      },
      "DeleteUnusedNumbersFromYourAccount": {
        "title": "DeleteUnusedNumbersFromYourAccount",
        "required": [
          "transactionId",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number9"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRe8b36928-3a93-40ca-b49d-0aee4b37fc8f",
          "numbers": [
            {
              "phoneNumber": "+18885852294",
              "displayNumber": "+18885852294",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18885852294",
              "campaignId": "",
              "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
              "allocationDT": "2021-02-08T23:56:26.0457102Z",
              "lastBillDT": "2021-03-08T00:00:00Z",
              "nextChargeDT": "2021-04-06T00:00:00Z",
              "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "888",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "PNZFWQO0",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "enabled": true,
                "version": 1
              },
              "id": "PNZFWQO0",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18336371466",
              "localNumber": "(833) 637-1466",
              "displayNumber": "18336371466",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362385882509739900",
              "campaignId": "",
              "allocationDT": "2020-05-01T17:37:35.3481506Z",
              "lastBillDT": "2021-04-01T00:00:00Z",
              "nextChargeDT": "2021-04-29T00:00:00Z",
              "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "enabled": true,
                "version": 1
              },
              "id": "1362385882509739900",
              "name": "Skype3",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+13125790806",
              "localNumber": "(312) 579-0806",
              "displayNumber": "13125790806",
              "provider": "telnyx",
              "providerAccountId": "1299489388324979809",
              "providerId": "1362389678229029900",
              "campaignId": "CAce122d08eb104156a74b59788fc2b86c",
              "allocationDT": "2020-05-01T17:45:07.4999645Z",
              "lastBillDT": "2021-04-01T00:00:00Z",
              "nextChargeDT": "2021-04-29T00:00:00Z",
              "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "312",
                "isTollFree": false
              },
              "tags": [],
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": false,
              "carrierNumberId": "",
              "affiliate": {
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "createNumbers": false,
                "isSelf": true,
                "name": "You",
                "enabled": true,
                "version": 1
              },
              "id": "1362389678229029900",
              "name": "Skype1",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+12133573490",
              "displayNumber": "+12133573490",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12133573490",
              "allocationDT": "2021-03-31T14:55:11.6286887Z",
              "lastBillDT": "2021-03-31T00:00:00Z",
              "nextChargeDT": "2021-04-28T00:00:00Z",
              "lastChargeDT": "2021-03-31T14:55:11.6286887Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 31,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "213",
                "isTollFree": false
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "EBYVCMIC",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "enabled": true,
                "version": 1
              },
              "id": "EBYVCMIC",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18442757927",
              "displayNumber": "+18442757927",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18442757927",
              "campaignId": "CAf36c8dcd536349bd9114d27618eefb97",
              "allocationDT": "2021-02-08T16:28:48.5721619Z",
              "lastBillDT": "2021-03-08T00:00:00Z",
              "nextChargeDT": "2021-04-06T00:00:00Z",
              "lastChargeDT": "2021-03-06T23:00:11.711988Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 8,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "SRHBTMYV",
              "affiliate": {
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "createNumbers": false,
                "isSelf": true,
                "name": "You",
                "enabled": true,
                "version": 1
              },
              "id": "SRHBTMYV",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18334013665",
              "displayNumber": "+18334013665",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18334013665",
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "allocationDT": "2021-02-01T17:20:22.1504921Z",
              "lastBillDT": "2021-04-01T00:00:00Z",
              "nextChargeDT": "2021-04-29T00:00:00Z",
              "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "CLAOGNEH",
              "affiliate": {
                "id": "AFbd21c4a3274c4382aa98919d5149baf3",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "createNumbers": false,
                "isSelf": true,
                "name": "You",
                "enabled": true,
                "version": 1
              },
              "id": "CLAOGNEH",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+12133572711",
              "displayNumber": "+12133572711",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12133572711",
              "allocationDT": "2021-03-31T14:37:32.9854543Z",
              "lastBillDT": "2021-03-31T00:00:00Z",
              "nextChargeDT": "2021-04-28T00:00:00Z",
              "lastChargeDT": "2021-03-31T14:37:32.9854543Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 31,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "213",
                "isTollFree": false
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "UCLTDOMQ",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "enabled": true,
                "version": 1
              },
              "id": "UCLTDOMQ",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+12132622999",
              "displayNumber": "+12132622999",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12132622999",
              "allocationDT": "2021-03-31T14:29:56.1782423Z",
              "lastBillDT": "2021-03-31T00:00:00Z",
              "nextChargeDT": "2021-04-28T00:00:00Z",
              "lastChargeDT": "2021-03-31T14:29:56.1782423Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 31,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": false
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "MVECPLSM",
              "affiliate": {
                "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "subId": "",
                "createNumbers": true,
                "accessToRecordings": true,
                "userIds": [
                  "8dc1930d-2dd8-4556-ae40-1620f8091e17"
                ],
                "isSelf": false,
                "name": "Example Publisher",
                "enabled": true,
                "version": 1
              },
              "id": "MVECPLSM",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18332203609",
              "displayNumber": "+18332203609",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18332203609",
              "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
              "allocationDT": "2021-03-11T18:20:28.4097995Z",
              "lastBillDT": "2021-03-11T00:00:00Z",
              "nextChargeDT": "2021-04-09T00:00:00Z",
              "lastChargeDT": "2021-03-11T18:20:28.4097995Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 11,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "FDVCXRFW",
              "id": "FDVCXRFW",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+18332203925",
              "displayNumber": "+18332203925",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18332203925",
              "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
              "allocationDT": "2021-03-11T18:20:28.4097995Z",
              "lastBillDT": "2021-03-11T00:00:00Z",
              "nextChargeDT": "2021-04-09T00:00:00Z",
              "lastChargeDT": "2021-03-11T18:20:28.4097995Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 11,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "KIDBYXKG",
              "id": "KIDBYXKG",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ]
        }
      },
      "Number9": {
        "title": "Number9",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "jsTagId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings4"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate52"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "localNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "numberPoolId": {
            "type": "string"
          }
        },
        "example": {
          "phoneNumber": "+18885852294",
          "displayNumber": "+18885852294",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18885852294",
          "campaignId": "",
          "jsTagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
          "allocationDT": "2021-02-08T23:56:26.0457102Z",
          "lastBillDT": "2021-03-08T00:00:00Z",
          "nextChargeDT": "2021-04-06T00:00:00Z",
          "lastChargeDT": "2021-03-06T23:00:11.6807352Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 8,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "888",
            "isTollFree": true
          },
          "tags": [],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "PNZFWQO0",
          "affiliate": {
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "enabled": true,
            "version": 1
          },
          "id": "PNZFWQO0",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "RemoveaPublisherfromaNumber": {
        "title": "RemoveaPublisherfromaNumber",
        "required": [
          "transactionId",
          "number"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/Number10"
          }
        },
        "example": {
          "transactionId": "TR44587e5f-9249-45ab-bd8c-e41ac3a11668",
          "number": {
            "phoneNumber": "+13125790806",
            "localNumber": "(312) 579-0806",
            "displayNumber": "13125790806",
            "provider": "telnyx",
            "providerAccountId": "1299489388324979809",
            "providerId": "1362389678229029900",
            "allocationDT": "2020-05-01T17:45:07.4999645Z",
            "lastBillDT": "2021-04-01T00:00:00Z",
            "nextChargeDT": "2021-04-29T00:00:00Z",
            "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
            "deAllocationDT": "0001-01-01T00:00:00",
            "autoRenew": true,
            "renewDOM": 1,
            "isTollFree": false,
            "isActivated": false,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "312",
              "isTollFree": false
            },
            "tags": [],
            "deallocFlag": false,
            "failedRechargeAttempts": 0,
            "isCarrierNumber": false,
            "carrierNumberId": "",
            "id": "1362389678229029900",
            "name": "Skype1",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 3
          }
        }
      },
      "Number10": {
        "title": "Number10",
        "required": [
          "phoneNumber",
          "localNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "tags",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "localNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+13125790806",
          "localNumber": "(312) 579-0806",
          "displayNumber": "13125790806",
          "provider": "telnyx",
          "providerAccountId": "1299489388324979809",
          "providerId": "1362389678229029900",
          "allocationDT": "2020-05-01T17:45:07.4999645Z",
          "lastBillDT": "2021-04-01T00:00:00Z",
          "nextChargeDT": "2021-04-29T00:00:00Z",
          "lastChargeDT": "2021-03-30T18:20:49.1185133Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 1,
          "isTollFree": false,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "312",
            "isTollFree": false
          },
          "tags": [],
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": false,
          "carrierNumberId": "",
          "id": "1362389678229029900",
          "name": "Skype1",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "GetNumberPoolsAssociatedWithYourAccount": {
        "title": "GetNumberPoolsAssociatedWithYourAccount",
        "required": [
          "transactionId",
          "numberPools"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberPools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NumberPool"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR7de76f71-ff87-4746-a1d8-b11432901b71",
          "numberPools": [
            {
              "id": "NU66b2f8963c91470e837c6a72693834ac",
              "holdNumberOutOfPoolInSeconds": 60,
              "poolSize": 2,
              "sortByGeo": false,
              "totalTimeForNumberOutOfPoolInSeconds": 500,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "autoRotateNumbers": false,
              "name": "Example Number Pool",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "NumberPool": {
        "title": "NumberPool",
        "required": [
          "id",
          "holdNumberOutOfPoolInSeconds",
          "poolSize",
          "sortByGeo",
          "totalTimeForNumberOutOfPoolInSeconds",
          "assignmentSettings",
          "autoRotateNumbers",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "holdNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "poolSize": {
            "type": "integer",
            "format": "int32"
          },
          "sortByGeo": {
            "type": "boolean"
          },
          "totalTimeForNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings"
          },
          "autoRotateNumbers": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "NU66b2f8963c91470e837c6a72693834ac",
          "holdNumberOutOfPoolInSeconds": 60,
          "poolSize": 2,
          "sortByGeo": false,
          "totalTimeForNumberOutOfPoolInSeconds": 500,
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": true
          },
          "autoRotateNumbers": false,
          "name": "Example Number Pool",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetDetailsAboutaSingleNumberPool": {
        "title": "GetDetailsAboutaSingleNumberPool",
        "required": [
          "transactionId",
          "numberPool",
          "freeNumbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberPool": {
            "$ref": "#/components/schemas/NumberPool"
          },
          "freeNumbers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "transactionId": "TRff95277b-1950-431c-95b4-4adf761dd2a9",
          "numberPool": {
            "id": "NU66b2f8963c91470e837c6a72693834ac",
            "holdNumberOutOfPoolInSeconds": 60,
            "poolSize": 2,
            "sortByGeo": false,
            "totalTimeForNumberOutOfPoolInSeconds": 500,
            "assignmentSettings": {
              "countryCode": "US",
              "isTollFree": true
            },
            "autoRotateNumbers": false,
            "name": "Example Number Pool",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "freeNumbers": 2
        }
      },
      "GetNumbersforaNumberPool": {
        "title": "GetNumbersforaNumberPool",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result8"
          }
        },
        "example": {
          "transactionId": "TR2dd46208-49a4-42f7-9631-66160a904e8b",
          "result": {
            "numbers": [
              {
                "phoneNumber": "+12133575976",
                "displayNumber": "+12133575976",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+12133575976",
                "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                "allocationDT": "2021-04-01T21:34:16.6594196Z",
                "lastBillDT": "2021-04-01T00:00:00Z",
                "nextChargeDT": "2021-04-29T00:00:00Z",
                "lastChargeDT": "2021-04-01T21:34:16.6594196Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": false,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "areaCode": "213",
                  "isTollFree": false
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "QMMQKOEN",
                "id": "QMMQKOEN",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              },
              {
                "phoneNumber": "+12133710027",
                "displayNumber": "+12133710027",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+12133710027",
                "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                "allocationDT": "2021-04-01T21:37:55.0891443Z",
                "lastBillDT": "2021-04-01T00:00:00Z",
                "nextChargeDT": "2021-04-29T00:00:00Z",
                "lastChargeDT": "2021-04-01T21:37:55.0891443Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": false,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "areaCode": "213",
                  "isTollFree": false
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "OKVNWILO",
                "id": "OKVNWILO",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              },
              {
                "phoneNumber": "+12133572871",
                "displayNumber": "+12133572871",
                "provider": "callrSipForward",
                "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
                "providerId": "+12133572871",
                "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
                "allocationDT": "2021-04-01T21:40:58.3212871Z",
                "lastBillDT": "2021-04-01T00:00:00Z",
                "nextChargeDT": "2021-04-29T00:00:00Z",
                "lastChargeDT": "2021-04-01T21:40:58.3212871Z",
                "deAllocationDT": "0001-01-01T00:00:00",
                "autoRenew": true,
                "renewDOM": 1,
                "isTollFree": false,
                "isActivated": false,
                "assignmentSettings": {
                  "countryCode": "US",
                  "areaCode": "213",
                  "isTollFree": false
                },
                "deallocFlag": false,
                "failedRechargeAttempts": 0,
                "isCarrierNumber": true,
                "carrierNumberId": "WFUQFWCD",
                "id": "WFUQFWCD",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 3
              }
            ],
            "count": 3
          }
        }
      },
      "Result8": {
        "title": "Result8",
        "required": [
          "numbers",
          "count"
        ],
        "type": "object",
        "properties": {
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number11"
            },
            "description": ""
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "numbers": [
            {
              "phoneNumber": "+12133575976",
              "displayNumber": "+12133575976",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12133575976",
              "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
              "allocationDT": "2021-04-01T21:34:16.6594196Z",
              "lastBillDT": "2021-04-01T00:00:00Z",
              "nextChargeDT": "2021-04-29T00:00:00Z",
              "lastChargeDT": "2021-04-01T21:34:16.6594196Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "213",
                "isTollFree": false
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "QMMQKOEN",
              "id": "QMMQKOEN",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+12133710027",
              "displayNumber": "+12133710027",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12133710027",
              "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
              "allocationDT": "2021-04-01T21:37:55.0891443Z",
              "lastBillDT": "2021-04-01T00:00:00Z",
              "nextChargeDT": "2021-04-29T00:00:00Z",
              "lastChargeDT": "2021-04-01T21:37:55.0891443Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "213",
                "isTollFree": false
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "OKVNWILO",
              "id": "OKVNWILO",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            },
            {
              "phoneNumber": "+12133572871",
              "displayNumber": "+12133572871",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+12133572871",
              "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
              "allocationDT": "2021-04-01T21:40:58.3212871Z",
              "lastBillDT": "2021-04-01T00:00:00Z",
              "nextChargeDT": "2021-04-29T00:00:00Z",
              "lastChargeDT": "2021-04-01T21:40:58.3212871Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 1,
              "isTollFree": false,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "areaCode": "213",
                "isTollFree": false
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "WFUQFWCD",
              "id": "WFUQFWCD",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ],
          "count": 3
        }
      },
      "Number11": {
        "title": "Number11",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "numberPoolId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "numberPoolId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+12133575976",
          "displayNumber": "+12133575976",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+12133575976",
          "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
          "allocationDT": "2021-04-01T21:34:16.6594196Z",
          "lastBillDT": "2021-04-01T00:00:00Z",
          "nextChargeDT": "2021-04-29T00:00:00Z",
          "lastChargeDT": "2021-04-01T21:34:16.6594196Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 1,
          "isTollFree": false,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "213",
            "isTollFree": false
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "QMMQKOEN",
          "id": "QMMQKOEN",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "GetInboundReferencesforaNumberPool": {
        "title": "GetInboundReferencesforaNumberPool",
        "required": [
          "transactionId",
          "id",
          "hasReferences",
          "refByAccount",
          "jstags",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          },
          "refByAccount": {
            "type": "boolean"
          },
          "jstags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Jstags11"
            },
            "description": ""
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR8ef1fcaf-e87e-4ffd-a001-41c175612d19",
          "id": "NU66b2f8963c91470e837c6a72693834ac",
          "hasReferences": true,
          "refByAccount": true,
          "jstags": [
            {
              "jstagId": "JS2ab9c67491964761b7ef53494f178113",
              "jstagName": "NumPoolTag"
            },
            {
              "jstagId": "JSf208d4fa391d4a88b0120e1cad94ac98",
              "jstagName": "Example Js Tag"
            }
          ],
          "numbers": [
            {
              "numberId": "FDVCXRFW",
              "numberName": "+18332203609",
              "numberPhoneNumber": "+18332203609"
            },
            {
              "numberId": "KIDBYXKG",
              "numberName": "+18332203925",
              "numberPhoneNumber": "+18332203925"
            }
          ]
        }
      },
      "Jstags11": {
        "title": "Jstags11",
        "required": [
          "jstagId",
          "jstagName"
        ],
        "type": "object",
        "properties": {
          "jstagId": {
            "type": "string"
          },
          "jstagName": {
            "type": "string"
          }
        },
        "example": {
          "jstagId": "JS2ab9c67491964761b7ef53494f178113",
          "jstagName": "NumPoolTag"
        }
      },
      "GetAllocationJobs": {
        "title": "GetAllocationJobs",
        "required": [
          "transactionId",
          "allocationJobs"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "allocationJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllocationJob"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR87fe0621-9690-455a-b3de-583819cebc2b",
          "allocationJobs": [
            {
              "numberPoolId": "NUe1f3ea7e385844b78b695029d20e850a",
              "numberPoolName": "New Number Pool",
              "requestAmount": 3,
              "completedAmount": 0,
              "startTime": 0,
              "completeTime": 0,
              "completed": false,
              "chargeAccountToFill": false,
              "id": "PA530c25aceb284f2d8890023ff3801e0a",
              "name": "",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "AllocationJob": {
        "title": "AllocationJob",
        "required": [
          "numberPoolId",
          "numberPoolName",
          "requestAmount",
          "completedAmount",
          "startTime",
          "completeTime",
          "completed",
          "chargeAccountToFill",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "numberPoolId": {
            "type": "string"
          },
          "numberPoolName": {
            "type": "string"
          },
          "requestAmount": {
            "type": "integer",
            "format": "int32"
          },
          "completedAmount": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "integer",
            "format": "int32"
          },
          "completeTime": {
            "type": "integer",
            "format": "int32"
          },
          "completed": {
            "type": "boolean"
          },
          "chargeAccountToFill": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "numberPoolId": "NUe1f3ea7e385844b78b695029d20e850a",
          "numberPoolName": "New Number Pool",
          "requestAmount": 3,
          "completedAmount": 0,
          "startTime": 0,
          "completeTime": 0,
          "completed": false,
          "chargeAccountToFill": false,
          "id": "PA530c25aceb284f2d8890023ff3801e0a",
          "name": "",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetDetailsAboutanAllocationJob": {
        "title": "GetDetailsAboutanAllocationJob",
        "required": [
          "transactionId",
          "allocationJob"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "allocationJob": {
            "$ref": "#/components/schemas/AllocationJob"
          }
        },
        "example": {
          "transactionId": "TRdccd7a40-ac77-48d7-b498-915d4afeade1",
          "allocationJob": {
            "numberPoolId": "NUe1f3ea7e385844b78b695029d20e850a",
            "numberPoolName": "New Number Pool",
            "requestAmount": 3,
            "completedAmount": 0,
            "startTime": 0,
            "completeTime": 0,
            "completed": false,
            "chargeAccountToFill": false,
            "id": "PA530c25aceb284f2d8890023ff3801e0a",
            "name": "",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "GetCountofAvailableNumbersinaNumberPool": {
        "title": "GetCountofAvailableNumbersinaNumberPool",
        "required": [
          "transactionId",
          "poolSize"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "poolSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "transactionId": "TR2bc8a4c2-359c-44cc-8f0d-a4c295b13b0f",
          "poolSize": 3
        }
      },
      "GetNumbersCurrentlyInUse": {
        "title": "GetNumbersCurrentlyInUse",
        "required": [
          "transactionId",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number13"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR864b5798-cf35-4425-b265-79a3882e4c32",
          "numbers": [
            {
              "phoneNumber": "+18332203609",
              "displayNumber": "+18332203609",
              "provider": "callrSipForward",
              "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
              "providerId": "+18332203609",
              "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
              "allocationDT": "2021-03-11T18:20:28.4097995Z",
              "lastBillDT": "2021-03-11T00:00:00Z",
              "nextChargeDT": "2021-04-09T00:00:00Z",
              "lastChargeDT": "2021-03-11T18:20:28.4097995Z",
              "deAllocationDT": "0001-01-01T00:00:00",
              "autoRenew": true,
              "renewDOM": 11,
              "isTollFree": true,
              "isActivated": false,
              "assignmentSettings": {
                "countryCode": "US",
                "isTollFree": true
              },
              "deallocFlag": false,
              "failedRechargeAttempts": 0,
              "isCarrierNumber": true,
              "carrierNumberId": "FDVCXRFW",
              "id": "FDVCXRFW",
              "name": "58387",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 3
            }
          ]
        }
      },
      "Number13": {
        "title": "Number13",
        "required": [
          "phoneNumber",
          "displayNumber",
          "provider",
          "providerAccountId",
          "providerId",
          "numberPoolId",
          "allocationDT",
          "lastBillDT",
          "nextChargeDT",
          "lastChargeDT",
          "deAllocationDT",
          "autoRenew",
          "renewDOM",
          "isTollFree",
          "isActivated",
          "assignmentSettings",
          "deallocFlag",
          "failedRechargeAttempts",
          "isCarrierNumber",
          "carrierNumberId",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "displayNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "numberPoolId": {
            "type": "string"
          },
          "allocationDT": {
            "type": "string"
          },
          "lastBillDT": {
            "type": "string"
          },
          "nextChargeDT": {
            "type": "string"
          },
          "lastChargeDT": {
            "type": "string"
          },
          "deAllocationDT": {
            "type": "string"
          },
          "autoRenew": {
            "type": "boolean"
          },
          "renewDOM": {
            "type": "integer",
            "format": "int32"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "isActivated": {
            "type": "boolean"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings"
          },
          "deallocFlag": {
            "type": "boolean"
          },
          "failedRechargeAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isCarrierNumber": {
            "type": "boolean"
          },
          "carrierNumberId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+18332203609",
          "displayNumber": "+18332203609",
          "provider": "callrSipForward",
          "providerAccountId": "RA25107ee2411049989cd8672852278bdb",
          "providerId": "+18332203609",
          "numberPoolId": "NU66b2f8963c91470e837c6a72693834ac",
          "allocationDT": "2021-03-11T18:20:28.4097995Z",
          "lastBillDT": "2021-03-11T00:00:00Z",
          "nextChargeDT": "2021-04-09T00:00:00Z",
          "lastChargeDT": "2021-03-11T18:20:28.4097995Z",
          "deAllocationDT": "0001-01-01T00:00:00",
          "autoRenew": true,
          "renewDOM": 11,
          "isTollFree": true,
          "isActivated": false,
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": true
          },
          "deallocFlag": false,
          "failedRechargeAttempts": 0,
          "isCarrierNumber": true,
          "carrierNumberId": "FDVCXRFW",
          "id": "FDVCXRFW",
          "name": "58387",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 3
        }
      },
      "VerifyNumbersinNumberPool": {
        "title": "VerifyNumbersinNumberPool",
        "required": [
          "transactionId",
          "bad-numbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "bad-numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR1bba5b66-a689-44d2-b652-bc589306463c",
          "bad-numbers": []
        }
      },
      "Getnumberpoolwithmisses": {
        "title": "Getnumberpoolwithmisses",
        "required": [
          "transactionId",
          "values"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Value"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR5f809ba8-5424-48d7-8ee0-c6da00f3cdeb",
          "values": [
            {
              "numberPoolId": "NUa1b2c3d4e5f6a1b2c3d4e5f6a1b2c3d4",
              "values": [
                {
                  "messageName": "Impressions",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    2454,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 2454
                },
                {
                  "messageName": "Number Pool Misses",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "Incoming",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    186,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 186
                },
                {
                  "messageName": "Connected",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    169,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 169
                },
                {
                  "messageName": "No Connect",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    17,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 17
                },
                {
                  "messageName": "Completed",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    183,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 183
                },
                {
                  "messageName": "Converted",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    123,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 123
                },
                {
                  "messageName": "Avg Call Length",
                  "messageType": "TIME_IN_SECONDS",
                  "isWarning": false,
                  "values": [
                    0,
                    702,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 702
                },
                {
                  "messageName": "No Targets",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 5
                },
                {
                  "messageName": "Busy",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "Error",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "Error",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "Blocked",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "No Answer",
                  "messageType": "INT",
                  "isWarning": true,
                  "values": [
                    0,
                    12,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 12
                },
                {
                  "messageName": "Revenue",
                  "messageType": "CURRENCY",
                  "isWarning": false,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "Payout",
                  "messageType": "CURRENCY",
                  "isWarning": false,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "RTB Bids",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "RTB Winning Bids",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "RTB Rejected Requests",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                },
                {
                  "messageName": "RTB Rate-Limited Requests",
                  "messageType": "INT",
                  "isWarning": false,
                  "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "sum": 0
                }
              ]
            }
          ]
        }
      },
      "Value": {
        "title": "Value",
        "required": [
          "numberPoolId",
          "values"
        ],
        "type": "object",
        "properties": {
          "numberPoolId": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Value1"
            },
            "description": ""
          }
        },
        "example": {
          "numberPoolId": "NUa1b2c3d4e5f6a1b2c3d4e5f6a1b2c3d4",
          "values": [
            {
              "messageName": "Impressions",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                2454,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 2454
            },
            {
              "messageName": "Number Pool Misses",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "Incoming",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                186,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 186
            },
            {
              "messageName": "Connected",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                169,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 169
            },
            {
              "messageName": "No Connect",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                17,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 17
            },
            {
              "messageName": "Completed",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                183,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 183
            },
            {
              "messageName": "Converted",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                123,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 123
            },
            {
              "messageName": "Avg Call Length",
              "messageType": "TIME_IN_SECONDS",
              "isWarning": false,
              "values": [
                0,
                702,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 702
            },
            {
              "messageName": "No Targets",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 5
            },
            {
              "messageName": "Busy",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "Error",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "Error",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "Blocked",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "No Answer",
              "messageType": "INT",
              "isWarning": true,
              "values": [
                0,
                12,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 12
            },
            {
              "messageName": "Revenue",
              "messageType": "CURRENCY",
              "isWarning": false,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "Payout",
              "messageType": "CURRENCY",
              "isWarning": false,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "RTB Bids",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "RTB Winning Bids",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "RTB Rejected Requests",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            },
            {
              "messageName": "RTB Rate-Limited Requests",
              "messageType": "INT",
              "isWarning": false,
              "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "sum": 0
            }
          ]
        }
      },
      "Value1": {
        "title": "Value1",
        "required": [
          "messageName",
          "messageType",
          "isWarning",
          "values",
          "sum"
        ],
        "type": "object",
        "properties": {
          "messageName": {
            "type": "string"
          },
          "messageType": {
            "type": "string"
          },
          "isWarning": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "messageName": "Impressions",
          "messageType": "INT",
          "isWarning": false,
          "values": [
            0,
            2454,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          "sum": 2454
        }
      },
      "CreateNewNumberPoolRequest": {
        "title": "CreateNewNumberPoolRequest",
        "required": [
          "name",
          "assignmentSettings",
          "holdNumberOutOfPoolInSeconds",
          "totalTimeForNumberOutOfPoolInSeconds"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings41"
          },
          "holdNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "totalTimeForNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "name": "New new Number Pool",
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": false,
            "areaCode": "213",
            "chargeAccountIfNeeded": true
          },
          "holdNumberOutOfPoolInSeconds": 30,
          "totalTimeForNumberOutOfPoolInSeconds": 300
        }
      },
      "AssignmentSettings41": {
        "title": "AssignmentSettings41",
        "required": [
          "countryCode",
          "isTollFree",
          "areaCode",
          "chargeAccountIfNeeded"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "isTollFree": {
            "type": "boolean"
          },
          "areaCode": {
            "type": "string"
          },
          "chargeAccountIfNeeded": {
            "type": "boolean"
          }
        },
        "example": {
          "countryCode": "US",
          "isTollFree": false,
          "areaCode": "213",
          "chargeAccountIfNeeded": true
        }
      },
      "CreateNewNumberPool": {
        "title": "CreateNewNumberPool",
        "required": [
          "transactionId",
          "numberPool"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberPool": {
            "$ref": "#/components/schemas/NumberPool2"
          }
        },
        "example": {
          "transactionId": "TR13a95071-e07c-49a0-9ccd-4bceff2e6ecd",
          "numberPool": {
            "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
            "holdNumberOutOfPoolInSeconds": 30,
            "poolSize": 0,
            "sortByGeo": false,
            "totalTimeForNumberOutOfPoolInSeconds": 300,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "213",
              "isTollFree": false
            },
            "autoRotateNumbers": false,
            "name": "New Number Pool",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "NumberPool2": {
        "title": "NumberPool2",
        "required": [
          "id",
          "holdNumberOutOfPoolInSeconds",
          "poolSize",
          "sortByGeo",
          "totalTimeForNumberOutOfPoolInSeconds",
          "assignmentSettings",
          "autoRotateNumbers",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "holdNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "poolSize": {
            "type": "integer",
            "format": "int32"
          },
          "sortByGeo": {
            "type": "boolean"
          },
          "totalTimeForNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "autoRotateNumbers": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
          "holdNumberOutOfPoolInSeconds": 30,
          "poolSize": 0,
          "sortByGeo": false,
          "totalTimeForNumberOutOfPoolInSeconds": 300,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "213",
            "isTollFree": false
          },
          "autoRotateNumbers": false,
          "name": "New Number Pool",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "ReplaceNumbersInaNumberPoolRequest": {
        "title": "ReplaceNumbersInaNumberPoolRequest",
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "count": 2
        }
      },
      "ReplaceNumbersInaNumberPool": {
        "title": "ReplaceNumbersInaNumberPool",
        "required": [
          "countAdded",
          "countReleased"
        ],
        "type": "object",
        "properties": {
          "countAdded": {
            "type": "integer",
            "format": "int32"
          },
          "countReleased": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "countAdded": 2,
          "countReleased": 2
        }
      },
      "DecreaseSizeofaNumberPoolRequest": {
        "title": "DecreaseSizeofaNumberPoolRequest",
        "required": [
          "count",
          "keepNumbers"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "keepNumbers": {
            "type": "boolean"
          }
        },
        "example": {
          "count": 1,
          "keepNumbers": true
        }
      },
      "DecreaseSizeofaNumberPool": {
        "title": "DecreaseSizeofaNumberPool",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR9e934c85-8210-4eec-9d82-72a772f0d366",
          "isSuccessful": true
        }
      },
      "AllocateMoreNumberstoaNumberPoolRequest": {
        "title": "AllocateMoreNumberstoaNumberPoolRequest",
        "required": [
          "allocation",
          "chargeAccountIfNeeded"
        ],
        "type": "object",
        "properties": {
          "allocation": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAccountIfNeeded": {
            "type": "boolean"
          }
        },
        "example": {
          "allocation": 3,
          "chargeAccountIfNeeded": false
        }
      },
      "AllocateMoreNumbersFailed": {
        "title": "AllocateMoreNumbersFailed",
        "required": [
          "transactionId",
          "allocationJob"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "allocationJob": {
            "$ref": "#/components/schemas/AllocationJob"
          }
        },
        "example": {
          "transactionId": "TR3ff17a95-d9ac-49f5-a86e-fd7aa2031a1b",
          "allocationJob": {
            "numberPoolId": "NU72ecc45806d44c3884f3accc3490bb80",
            "numberPoolName": "New Number Pool",
            "requestAmount": 3,
            "completedAmount": 0,
            "startTime": 0,
            "completeTime": 0,
            "completed": false,
            "chargeAccountToFill": true,
            "id": "PA112473c51b894be19dde8894745b87c5",
            "name": "",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "AddaSpecificNumbertoaNumberPoolRequest": {
        "title": "AddaSpecificNumbertoaNumberPoolRequest",
        "required": [
          "numberId"
        ],
        "type": "object",
        "properties": {
          "numberId": {
            "type": "string"
          }
        },
        "example": {
          "numberId": "{{numberId}}"
        }
      },
      "AddaSpecificNumbertoaNumberPool": {
        "title": "AddaSpecificNumbertoaNumberPool",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR3f36f1bc-b90a-4df1-9cdc-d2fcf1bf820b",
          "isSuccessful": true
        }
      },
      "IncreaseSizeofaNumberPoolRequest": {
        "title": "IncreaseSizeofaNumberPoolRequest",
        "required": [
          "allocation",
          "chargeAccountIfNeeded"
        ],
        "type": "object",
        "properties": {
          "allocation": {
            "type": "integer",
            "format": "int32"
          },
          "chargeAccountIfNeeded": {
            "type": "boolean"
          }
        },
        "example": {
          "allocation": 1,
          "chargeAccountIfNeeded": false
        }
      },
      "IncreaseSizeofaNumberPool": {
        "title": "IncreaseSizeofaNumberPool",
        "required": [
          "transactionId",
          "allocationJob"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "allocationJob": {
            "$ref": "#/components/schemas/AllocationJob"
          }
        },
        "example": {
          "transactionId": "TR4d1fed2c-1115-4672-b8ea-3c2ae26b52c8",
          "allocationJob": {
            "numberPoolId": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
            "numberPoolName": "New Number Pool",
            "requestAmount": 1,
            "completedAmount": 0,
            "startTime": 0,
            "completeTime": 0,
            "completed": false,
            "chargeAccountToFill": false,
            "id": "PA2e51e5bdb2874b8dab47bec6e1510640",
            "name": "",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "AssignaPublishertoaNumberPoolRequest": {
        "title": "AssignaPublishertoaNumberPoolRequest",
        "required": [
          "affiliateId"
        ],
        "type": "object",
        "properties": {
          "affiliateId": {
            "type": "string"
          }
        },
        "example": {
          "affiliateId": "{{publisherId}}"
        }
      },
      "AssignaPublishertoaNumberPool": {
        "title": "AssignaPublishertoaNumberPool",
        "required": [
          "transactionId",
          "numberPool"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberPool": {
            "$ref": "#/components/schemas/NumberPool3"
          }
        },
        "example": {
          "transactionId": "TRcd977186-c0a0-45d0-90a0-0dab8bb68259",
          "numberPool": {
            "holdNumberOutOfPoolInSeconds": 30,
            "poolSize": 3,
            "sortByGeo": false,
            "totalTimeForNumberOutOfPoolInSeconds": 300,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "213",
              "isTollFree": false
            },
            "autoRotateNumbers": false,
            "affiliate": {
              "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
              "subId": "",
              "createNumbers": true,
              "accessToRecordings": true,
              "userIds": [
                "8dc1930d-2dd8-4556-ae40-1620f8091e17"
              ],
              "isSelf": false,
              "name": "Example Publisher",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
            "name": "New Number Pool",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "NumberPool3": {
        "title": "NumberPool3",
        "required": [
          "holdNumberOutOfPoolInSeconds",
          "poolSize",
          "sortByGeo",
          "totalTimeForNumberOutOfPoolInSeconds",
          "assignmentSettings",
          "autoRotateNumbers",
          "affiliate",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "holdNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "poolSize": {
            "type": "integer",
            "format": "int32"
          },
          "sortByGeo": {
            "type": "boolean"
          },
          "totalTimeForNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings2"
          },
          "autoRotateNumbers": {
            "type": "boolean"
          },
          "affiliate": {
            "$ref": "#/components/schemas/Affiliate3"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "holdNumberOutOfPoolInSeconds": 30,
          "poolSize": 3,
          "sortByGeo": false,
          "totalTimeForNumberOutOfPoolInSeconds": 300,
          "assignmentSettings": {
            "countryCode": "US",
            "areaCode": "213",
            "isTollFree": false
          },
          "autoRotateNumbers": false,
          "affiliate": {
            "id": "AFb7d373dc873c4792b3b3e27dd9317a73",
            "subId": "",
            "createNumbers": true,
            "accessToRecordings": true,
            "userIds": [
              "8dc1930d-2dd8-4556-ae40-1620f8091e17"
            ],
            "isSelf": false,
            "name": "Example Publisher",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
          "name": "New Number Pool",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "EditInformationforaNumberPoolRequest": {
        "title": "EditInformationforaNumberPoolRequest",
        "required": [
          "name",
          "holdNumberOutOfPoolInSeconds",
          "totalTimeForNumberOutOfPoolInSeconds",
          "poolSize",
          "assignmentSettings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "holdNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "totalTimeForNumberOutOfPoolInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "poolSize": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentSettings": {
            "$ref": "#/components/schemas/AssignmentSettings41"
          }
        },
        "example": {
          "name": "New Name",
          "holdNumberOutOfPoolInSeconds": 45,
          "totalTimeForNumberOutOfPoolInSeconds": 200,
          "poolSize": 1,
          "assignmentSettings": {
            "countryCode": "US",
            "isTollFree": false,
            "areaCode": "213",
            "chargeAccountIfNeeded": true
          }
        }
      },
      "EditInformationforaNumberPool": {
        "title": "EditInformationforaNumberPool",
        "required": [
          "transactionId",
          "numberPool"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberPool": {
            "$ref": "#/components/schemas/NumberPool2"
          }
        },
        "example": {
          "transactionId": "TR4f4d44ee-e22a-415a-bff1-d89a1c8c5d58",
          "numberPool": {
            "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
            "holdNumberOutOfPoolInSeconds": 45,
            "poolSize": 2,
            "sortByGeo": false,
            "totalTimeForNumberOutOfPoolInSeconds": 200,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "213",
              "isTollFree": false
            },
            "autoRotateNumbers": false,
            "name": "New Name",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "DeleteaNumberPool": {
        "title": "DeleteaNumberPool",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR64ec3a32-7a0b-4850-92b2-534fcc2e9dc4",
          "isSuccessful": true
        }
      },
      "DeleteaNumberPool2": {
        "title": "DeleteaNumberPool2",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Please remove all references to this number pool"
        }
      },
      "DeleteaSpecificNumberfromaNumberPool": {
        "title": "DeleteaSpecificNumberfromaNumberPool",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR102b93a2-2c45-4010-8c49-aa6f61f6dda2",
          "isSuccessful": true
        }
      },
      "RemoveaPublisherfromaNumberPool": {
        "title": "RemoveaPublisherfromaNumberPool",
        "required": [
          "transactionId",
          "numberPool"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "numberPool": {
            "$ref": "#/components/schemas/NumberPool2"
          }
        },
        "example": {
          "transactionId": "TR73df40c2-fd40-42f8-b2e4-328a18fa4b12",
          "numberPool": {
            "id": "NU33fe6b0c9eb24c67b0e3e1c9fcd9d3e9",
            "holdNumberOutOfPoolInSeconds": 30,
            "poolSize": 3,
            "sortByGeo": false,
            "totalTimeForNumberOutOfPoolInSeconds": 300,
            "assignmentSettings": {
              "countryCode": "US",
              "areaCode": "213",
              "isTollFree": false
            },
            "autoRotateNumbers": false,
            "name": "New Number Pool",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "DeleteanAllocationJob": {
        "title": "DeleteanAllocationJob",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR0bef41b6-1987-40aa-b82f-2b784ce4be10",
          "isSuccessful": true
        }
      },
      "GetBlockedPhoneNumbers": {
        "title": "GetBlockedPhoneNumbers",
        "required": [
          "transactionId",
          "blockedNumbers"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "blockedNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockedNumber"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRa34fd7e6-93c6-40c6-a1b0-72582fe2f53a",
          "blockedNumbers": [
            {
              "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
              "phoneNumber": "+anonymous",
              "campaignId": "CAa2714586592f464f817efc493f3a4b50",
              "timeLimited": true,
              "createdDate": "2021-04-05T21:36:25.1041628Z",
              "expiration": "2021-04-06T05:36:25.104Z",
              "id": "BL93f3ad92960e404d91766fbdbe5f8bda",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
              "phoneNumber": "+307*",
              "campaignId": "",
              "timeLimited": false,
              "createdDate": "2021-04-05T21:38:13.0974695Z",
              "expiration": "9999-01-01T01:01:01Z",
              "id": "BLc2486f8854be46d8bb54657abf3e2d82",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
              "phoneNumber": "+12135551233",
              "campaignId": "",
              "timeLimited": false,
              "createdDate": "2021-04-05T21:39:07.2426791Z",
              "expiration": "9999-01-01T01:01:01Z",
              "id": "BL2f00606c68d7402e95104a2409c8cb75",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "BlockedNumber": {
        "title": "BlockedNumber",
        "required": [
          "objectId",
          "phoneNumber",
          "campaignId",
          "timeLimited",
          "createdDate",
          "expiration",
          "id",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "timeLimited": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
          "phoneNumber": "+anonymous",
          "campaignId": "CAa2714586592f464f817efc493f3a4b50",
          "timeLimited": true,
          "createdDate": "2021-04-05T21:36:25.1041628Z",
          "expiration": "2021-04-06T05:36:25.104Z",
          "id": "BL93f3ad92960e404d91766fbdbe5f8bda",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetDetailsAboutaSingleBlockedNumber": {
        "title": "GetDetailsAboutaSingleBlockedNumber",
        "required": [
          "transactionId",
          "blockedNumber"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "blockedNumber": {
            "$ref": "#/components/schemas/BlockedNumber"
          }
        },
        "example": {
          "transactionId": "TRdcbd607e-af43-469c-a415-b4e21e239047",
          "blockedNumber": {
            "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
            "phoneNumber": "+anonymous",
            "campaignId": "CAa2714586592f464f817efc493f3a4b50",
            "timeLimited": true,
            "createdDate": "2021-04-05T21:36:25.1041628Z",
            "expiration": "2021-04-06T05:36:25.104Z",
            "id": "BL93f3ad92960e404d91766fbdbe5f8bda",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "BlockaPhoneNumberRequest": {
        "title": "BlockaPhoneNumberRequest",
        "required": [
          "phoneNumber",
          "campaignId",
          "expInHour"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "expInHour": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "phoneNumber": "+anonymous",
          "campaignId": "CAa2714586592f464f817efc493f3a4b50",
          "expInHour": 8
        }
      },
      "Blockanonymousnumbersfor8hoursinspecificcampaign": {
        "title": "Blockanonymousnumbersfor8hoursinspecificcampaign",
        "required": [
          "transactionId",
          "blockedNumberId",
          "blockedNumber"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "blockedNumberId": {
            "type": "string"
          },
          "blockedNumber": {
            "$ref": "#/components/schemas/BlockedNumber"
          }
        },
        "example": {
          "transactionId": "TRc4a14f29-ff01-4e6b-9b6d-ac47780024eb",
          "blockedNumberId": "BL3c6bdb6a00644d9b86c3115375382a68",
          "blockedNumber": {
            "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
            "phoneNumber": "+anonymous",
            "campaignId": "CAa2714586592f464f817efc493f3a4b50",
            "timeLimited": true,
            "createdDate": "2021-04-05T21:55:50.090263Z",
            "expiration": "2021-04-06T05:55:50.090263Z",
            "id": "BL3c6bdb6a00644d9b86c3115375382a68",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Blockallnumberswithaspecifiedprefixinallcampaignsforever": {
        "title": "Blockallnumberswithaspecifiedprefixinallcampaignsforever",
        "required": [
          "transactionId",
          "blockedNumberId",
          "blockedNumber"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "blockedNumberId": {
            "type": "string"
          },
          "blockedNumber": {
            "$ref": "#/components/schemas/BlockedNumber"
          }
        },
        "example": {
          "transactionId": "TR41cf9709-4772-45f1-a793-d05030020a17",
          "blockedNumberId": "BL3ab206508b7d47829dbc6b754cf2521c",
          "blockedNumber": {
            "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
            "phoneNumber": "+1307*",
            "campaignId": "",
            "timeLimited": false,
            "createdDate": "2021-04-05T21:57:04.0922325Z",
            "expiration": "9999-01-01T01:01:01Z",
            "id": "BL3ab206508b7d47829dbc6b754cf2521c",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "BlockaPhoneNumberinallcampaignsforever": {
        "title": "BlockaPhoneNumberinallcampaignsforever",
        "required": [
          "transactionId",
          "blockedNumberId",
          "blockedNumber"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "blockedNumberId": {
            "type": "string"
          },
          "blockedNumber": {
            "$ref": "#/components/schemas/BlockedNumber"
          }
        },
        "example": {
          "transactionId": "TR44d45987-fc27-4ceb-9b48-eb3132387841",
          "blockedNumberId": "BL5b45ae98011046858fe1e59da202ff77",
          "blockedNumber": {
            "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
            "phoneNumber": "+12135551223",
            "campaignId": "",
            "timeLimited": false,
            "createdDate": "2021-04-05T21:58:31.5571545Z",
            "expiration": "9999-01-01T01:01:01Z",
            "id": "BL5b45ae98011046858fe1e59da202ff77",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "BlockaPhoneNumberinonecampaignfor24hours": {
        "title": "BlockaPhoneNumberinonecampaignfor24hours",
        "required": [
          "transactionId",
          "blockedNumberId",
          "blockedNumber"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "blockedNumberId": {
            "type": "string"
          },
          "blockedNumber": {
            "$ref": "#/components/schemas/BlockedNumber"
          }
        },
        "example": {
          "transactionId": "TR2ed394de-92bb-4a20-9dc2-ac139506f30d",
          "blockedNumberId": "BLe17fae5151184f4fb70d65e89200d168",
          "blockedNumber": {
            "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
            "phoneNumber": "+12135559876",
            "campaignId": "CAa2714586592f464f817efc493f3a4b50",
            "timeLimited": true,
            "createdDate": "2021-04-05T21:59:52.7724169Z",
            "expiration": "2021-04-06T21:59:52.7724169Z",
            "id": "BLe17fae5151184f4fb70d65e89200d168",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "UpdateaBlockedPhoneNumberRequest": {
        "title": "UpdateaBlockedPhoneNumberRequest",
        "required": [
          "phoneNumber",
          "campaignId",
          "expiration",
          "timeLimited"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "campaignId": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "timeLimited": {
            "type": "boolean"
          }
        },
        "example": {
          "phoneNumber": "+anonymous",
          "campaignId": "CAa2714586592f464f817efc493f3a4b50",
          "expiration": "2021-04-06T05:36:25.104Z",
          "timeLimited": true
        }
      },
      "UpdateaBlockedPhoneNumber": {
        "title": "UpdateaBlockedPhoneNumber",
        "required": [
          "transactionId",
          "blockedNumber"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "blockedNumber": {
            "$ref": "#/components/schemas/BlockedNumber"
          }
        },
        "example": {
          "transactionId": "TRd3f27ff6-1f1d-4b85-ab08-d954110815ce",
          "blockedNumber": {
            "objectId": "BN_UN:RA25107ee2411049989cd8672852278bdb",
            "phoneNumber": "+anonymous",
            "campaignId": "CAa2714586592f464f817efc493f3a4b50",
            "timeLimited": true,
            "createdDate": "2021-04-05T21:36:25.1041628Z",
            "expiration": "2021-04-06T05:36:25.104Z",
            "id": "BL93f3ad92960e404d91766fbdbe5f8bda",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "UnblockaPhoneNumber": {
        "title": "UnblockaPhoneNumber",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR6ce66bc7-3208-42f1-95a5-07490eb1c6c0",
          "isSuccessful": true
        }
      },
      "GETJSONwithCIDandSipOk": {
        "title": "GETJSONwithCIDandSipOk",
        "required": [
          "bidId",
          "bidAmount",
          "expireInSeconds",
          "bidExpireDT",
          "bidExpireEpoch",
          "sipAddress",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "type": "string"
          },
          "bidAmount": {
            "type": "integer",
            "format": "int32"
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "bidExpireDT": {
            "type": "string"
          },
          "bidExpireEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "sipAddress": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "description": ""
          }
        },
        "example": {
          "bidId": "RTBdb9cc996470c40dbb0d145c5adaa2d54",
          "bidAmount": 10,
          "expireInSeconds": 20,
          "bidExpireDT": "3/1/2021 9:46:47 PM +00:00",
          "bidExpireEpoch": 1614635207055,
          "sipAddress": "RTBdb9cc996470c40dbb0d145c5adaa2d54@test.rtb.ringba.sip.telnyx.com",
          "warnings": [
            {
              "code": 200,
              "description": "The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless the actual call is made."
            },
            {
              "code": 222,
              "description": "Request executed in Sandbox mode. The bid amount is NOT guaranteed to be equal to production mode bid, and the phone number and/or SIP address cannot be used to forward your call. This is the best way to send test requests."
            }
          ]
        }
      },
      "Warning": {
        "title": "Warning",
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "code": 200,
          "description": "The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless the actual call is made."
        }
      },
      "Bid": {
        "title": "Bid",
        "required": [
          "BidID",
          "BidAmount",
          "ExpireInSeconds",
          "BidExpireDT",
          "BidExpireEpoch",
          "SIPAddress",
          "Warnings"
        ],
        "type": "object",
        "properties": {
          "BidID": {
            "type": "string",
            "xml": {
              "name": "BidID",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "BidAmount": {
            "type": "number",
            "xml": {
              "name": "BidAmount",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "ExpireInSeconds": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "ExpireInSeconds",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "BidExpireDT": {
            "type": "string",
            "xml": {
              "name": "BidExpireDT",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "BidExpireEpoch": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "BidExpireEpoch",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "SIPAddress": {
            "type": "string",
            "xml": {
              "name": "SIPAddress",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          }
        },
        "xml": {
          "name": "Bid",
          "namespace": "",
          "attribute": false,
          "wrapped": false
        }
      },
      "Warnings": {
        "title": "Warnings",
        "required": [
          "Warning"
        ],
        "type": "object",
        "properties": {
          "Warning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning1"
            },
            "description": "",
            "xml": {
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          }
        },
        "xml": {
          "name": "Warnings",
          "namespace": "",
          "attribute": false,
          "wrapped": false
        }
      },
      "Warning1": {
        "title": "Warning1",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "code",
              "attribute": true,
              "wrapped": false
            }
          }
        },
        "xml": {
          "name": "Warning",
          "namespace": "",
          "attribute": false,
          "wrapped": false
        }
      },
      "bid_request": {
        "title": "bid_request",
        "required": [
          "Tag1",
          "Tag2"
        ],
        "type": "object",
        "properties": {
          "Tag1": {
            "type": "string",
            "xml": {
              "name": "Tag1",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "Tag2": {
            "type": "string",
            "xml": {
              "name": "Tag2",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          }
        },
        "xml": {
          "name": "bid_request",
          "namespace": "",
          "attribute": false,
          "wrapped": false
        }
      },
      "POSTJSONwithCIDandsipOk": {
        "title": "POSTJSONwithCIDandsipOk",
        "required": [
          "bidId",
          "bidAmount",
          "expireInSeconds",
          "bidExpireDT",
          "bidExpireEpoch",
          "sipAddress",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "type": "string"
          },
          "bidAmount": {
            "type": "integer",
            "format": "int32"
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "bidExpireDT": {
            "type": "string"
          },
          "bidExpireEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "sipAddress": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warnings1"
            },
            "description": ""
          }
        },
        "example": {
          "bidId": "RTBd3760024714340b0af9141caa9c7ec9f",
          "bidAmount": 10,
          "expireInSeconds": 20,
          "bidExpireDT": "3/1/2021 9:49:08 PM +00:00",
          "bidExpireEpoch": 1614635348454,
          "sipAddress": "RTBd3760024714340b0af9141caa9c7ec9f@test.rtb.ringba.sip.telnyx.com",
          "warnings": [
            {
              "code": 200,
              "description": "The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless the actual call is made."
            },
            {
              "code": 222,
              "description": "Request executed in Sandbox mode. The bid amount is NOT guaranteed to be equal to production mode bid, and the phone number and/or SIP address cannot be used to forward your call. This is the best way to send test requests."
            }
          ]
        }
      },
      "Warnings1": {
        "title": "Warnings1",
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "code": 200,
          "description": "The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless the actual call is made."
        }
      },
      "POSTJSONusingaXMLbody": {
        "title": "POSTJSONusingaXMLbody",
        "required": [
          "bidId",
          "bidAmount",
          "expireInSeconds",
          "bidExpireDT",
          "bidExpireEpoch",
          "phoneNumber",
          "sipAddress",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "bidId": {
            "type": "string"
          },
          "bidAmount": {
            "type": "integer",
            "format": "int32"
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "bidExpireDT": {
            "type": "string"
          },
          "bidExpireEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "phoneNumber": {
            "type": "string"
          },
          "sipAddress": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warnings1"
            },
            "description": ""
          }
        },
        "example": {
          "bidId": "RTBbcb09a82a33f489d8bcf2023f8bb63ab",
          "bidAmount": 10,
          "expireInSeconds": 20,
          "bidExpireDT": "3/1/2021 9:50:29 PM +00:00",
          "bidExpireEpoch": 1614635429435,
          "phoneNumber": "+17206056802",
          "sipAddress": "RTBbcb09a82a33f489d8bcf2023f8bb63ab@test.rtb.ringba.sip.telnyx.com",
          "warnings": [
            {
              "code": 200,
              "description": "The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless the actual call is made."
            },
            {
              "code": 205,
              "description": "Sending calls via SIP is preferred over routing them to DID. DID numbers are not unique and are not protected from receiving spam calls or calls related to expired bids. Consider always providing Caller ID when not using SIP."
            },
            {
              "code": 222,
              "description": "Request executed in Sandbox mode. The bid amount is NOT guaranteed to be equal to production mode bid, and the phone number and/or SIP address cannot be used to forward your call. This is the best way to send test requests."
            }
          ]
        }
      },
      "POSTXMLREQUEST": {
        "title": "POSTXMLREQUEST",
        "required": [
          "Tag1",
          "Tag2"
        ],
        "type": "object",
        "properties": {
          "Tag1": {
            "type": "string"
          },
          "Tag2": {
            "type": "string"
          }
        },
        "example": {
          "Tag1": "tag1value",
          "Tag2": "tag2value"
        }
      },
      "Bid2": {
        "title": "Bid2",
        "required": [
          "BidID",
          "BidAmount",
          "ExpireInSeconds",
          "BidExpireDT",
          "BidExpireEpoch",
          "PhoneNumber",
          "SIPAddress",
          "Warnings"
        ],
        "type": "object",
        "properties": {
          "BidID": {
            "type": "string",
            "xml": {
              "name": "BidID",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "BidAmount": {
            "type": "number",
            "xml": {
              "name": "BidAmount",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "ExpireInSeconds": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "ExpireInSeconds",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "BidExpireDT": {
            "type": "string",
            "xml": {
              "name": "BidExpireDT",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "BidExpireEpoch": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "name": "BidExpireEpoch",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "PhoneNumber": {
            "type": "string",
            "xml": {
              "name": "PhoneNumber",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "SIPAddress": {
            "type": "string",
            "xml": {
              "name": "SIPAddress",
              "namespace": "",
              "attribute": false,
              "wrapped": false
            }
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          }
        },
        "xml": {
          "name": "Bid",
          "namespace": "",
          "attribute": false,
          "wrapped": false
        }
      },
      "CreateRTBBulkAdjustmentfromCSV": {
        "title": "CreateRTBBulkAdjustmentfromCSV",
        "required": [
          "transactionId",
          "rtbBulkModifierList"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "rtbBulkModifierList": {
            "$ref": "#/components/schemas/RtbBulkModifierList"
          }
        },
        "example": {
          "transactionId": "TRaac524b1-cf14-4eea-8ae2-337ea03cdb17",
          "rtbBulkModifierList": {
            "id": "RTBLISTc5de66696f8142448b0f0de930c35acb",
            "name": "Age-Bulk-Modifier",
            "adjustmentsCount": 30,
            "hasTypeOverrides": false,
            "hasValueOverrides": true
          }
        }
      },
      "RtbBulkModifierList": {
        "title": "RtbBulkModifierList",
        "required": [
          "id",
          "name",
          "adjustmentsCount",
          "hasTypeOverrides",
          "hasValueOverrides"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "adjustmentsCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasTypeOverrides": {
            "type": "boolean"
          },
          "hasValueOverrides": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "RTBLISTc5de66696f8142448b0f0de930c35acb",
          "name": "Age-Bulk-Modifier",
          "adjustmentsCount": 30,
          "hasTypeOverrides": false,
          "hasValueOverrides": true
        }
      },
      "GetTargets": {
        "title": "GetTargets",
        "required": [
          "transactionId",
          "targets"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR30b48faf-70ad-448d-87ee-d50885fcbb64",
          "targets": [
            {
              "id": "TA2f6961e921ef4b92b7304dd76db8336f",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+16317918378"
              },
              "isHighRateTarget": false,
              "highRateCost": 0,
              "ringbaNumberId": "",
              "targetCallIncrement": "onConvert",
              "_SearchNumer": "number:+16317918378",
              "capsMigrated": true,
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Romance Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "Ringba Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "Target": {
        "title": "Target",
        "required": [
          "id",
          "instructions",
          "isHighRateTarget",
          "highRateCost",
          "ringbaNumberId",
          "targetCallIncrement",
          "_SearchNumer",
          "capsMigrated",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "highRateCost": {
            "type": "integer",
            "format": "int32"
          },
          "ringbaNumberId": {
            "type": "string"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "_SearchNumer": {
            "type": "string"
          },
          "capsMigrated": {
            "type": "boolean"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+16317918378"
          },
          "isHighRateTarget": false,
          "highRateCost": 0,
          "ringbaNumberId": "",
          "targetCallIncrement": "onConvert",
          "_SearchNumer": "number:+16317918378",
          "capsMigrated": true,
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Romance Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Ringba Test Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetTargetsWithStats": {
        "title": "GetTargetsWithStats",
        "required": [
          "transactionId",
          "targets",
          "stats",
          "caps"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "description": ""
          },
          "stats": {
            "$ref": "#/components/schemas/Stats2"
          },
          "caps": {
            "$ref": "#/components/schemas/Caps"
          }
        },
        "example": {
          "transactionId": "TRcd76c6ff-fe25-4c8a-8ba9-7802566b81c4",
          "targets": [
            {
              "id": "TA2f6961e921ef4b92b7304dd76db8336f",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+16317918378"
              },
              "isHighRateTarget": false,
              "highRateCost": 0,
              "ringbaNumberId": "",
              "targetCallIncrement": "onConvert",
              "_SearchNumer": "number:+16317918378",
              "capsMigrated": true,
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Romance Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "Ringba Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "stats": {
            "tA2f6961e921ef4b92b7304dd76db8336f": {
              "usageStats": {
                "total": 10,
                "currentMonth": 4,
                "currentDay": 0,
                "currentHour": 0,
                "currentLive": 0
              },
              "status": {
                "blockReason": "NoReason",
                "isAcceptingCalls": true,
                "cappacity": -1,
                "current": -1
              }
            }
          },
          "caps": {
            "tA2f6961e921ef4b92b7304dd76db8336f": {
              "live": -1,
              "hour": -1,
              "month": -1,
              "total": -1,
              "day": -1,
              "isGroup": false
            }
          }
        }
      },
      "Stats2": {
        "title": "Stats2",
        "required": [
          "tA2f6961e921ef4b92b7304dd76db8336f"
        ],
        "type": "object",
        "properties": {
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "$ref": "#/components/schemas/TA2f6961e921ef4b92b7304dd76db8336f"
          }
        },
        "example": {
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "usageStats": {
              "total": 10,
              "currentMonth": 4,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "status": {
              "blockReason": "NoReason",
              "isAcceptingCalls": true,
              "cappacity": -1,
              "current": -1
            }
          }
        }
      },
      "TA2f6961e921ef4b92b7304dd76db8336f": {
        "title": "TA2f6961e921ef4b92b7304dd76db8336f",
        "required": [
          "usageStats",
          "status"
        ],
        "type": "object",
        "properties": {
          "usageStats": {
            "$ref": "#/components/schemas/UsageStats"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "example": {
          "usageStats": {
            "total": 10,
            "currentMonth": 4,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "status": {
            "blockReason": "NoReason",
            "isAcceptingCalls": true,
            "cappacity": -1,
            "current": -1
          }
        }
      },
      "UsageStats": {
        "title": "UsageStats",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 10,
          "currentMonth": 4,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "Status": {
        "title": "Status",
        "required": [
          "blockReason",
          "isAcceptingCalls",
          "cappacity",
          "current"
        ],
        "type": "object",
        "properties": {
          "blockReason": {
            "type": "string"
          },
          "isAcceptingCalls": {
            "type": "boolean"
          },
          "cappacity": {
            "type": "integer",
            "format": "int32"
          },
          "current": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "blockReason": "NoReason",
          "isAcceptingCalls": true,
          "cappacity": -1,
          "current": -1
        }
      },
      "Caps": {
        "title": "Caps",
        "required": [
          "tA2f6961e921ef4b92b7304dd76db8336f"
        ],
        "type": "object",
        "properties": {
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "$ref": "#/components/schemas/TA2f6961e921ef4b92b7304dd76db8336f1"
          }
        },
        "example": {
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "live": -1,
            "hour": -1,
            "month": -1,
            "total": -1,
            "day": -1,
            "isGroup": false
          }
        }
      },
      "TA2f6961e921ef4b92b7304dd76db8336f1": {
        "title": "TA2f6961e921ef4b92b7304dd76db8336f1",
        "required": [
          "live",
          "hour",
          "month",
          "total",
          "day",
          "isGroup"
        ],
        "type": "object",
        "properties": {
          "live": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "isGroup": {
            "type": "boolean"
          }
        },
        "example": {
          "live": -1,
          "hour": -1,
          "month": -1,
          "total": -1,
          "day": -1,
          "isGroup": false
        }
      },
      "GetDetailsAboutaSpecificTarget": {
        "title": "GetDetailsAboutaSpecificTarget",
        "required": [
          "transactionId",
          "target",
          "stats",
          "caps"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target2"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats3"
          },
          "caps": {
            "$ref": "#/components/schemas/Caps1"
          }
        },
        "example": {
          "transactionId": "TR54a64328-3375-4b0a-a802-7b2f32189d5a",
          "target": {
            "highRateCPM": 0,
            "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+16317918378"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Romance Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "id": "TA2f6961e921ef4b92b7304dd76db8336f",
            "name": "Ringba Test Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "stats": {
            "tA234457e6f96945cfa312938d4e358015": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "tA2f6961e921ef4b92b7304dd76db8336f": {
              "totalSum": 0,
              "currentMonthSum": 0,
              "currentHourSum": 0,
              "currentDaySum": 0,
              "total": 11,
              "currentMonth": 5,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          },
          "caps": {
            "hourSum": -1,
            "daySum": -1,
            "monthSum": -1,
            "totalSum": -1,
            "live": -1,
            "isGroup": false,
            "hour": -1,
            "day": -1,
            "month": -1,
            "total": -1
          }
        }
      },
      "Target2": {
        "title": "Target2",
        "required": [
          "highRateCPM",
          "targetGroupId",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "highRateCPM": {
            "type": "integer",
            "format": "int32"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "highRateCPM": 0,
          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+16317918378"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Romance Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
          "name": "Ringba Test Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Stats3": {
        "title": "Stats3",
        "required": [
          "tA234457e6f96945cfa312938d4e358015",
          "tA2f6961e921ef4b92b7304dd76db8336f"
        ],
        "type": "object",
        "properties": {
          "tA234457e6f96945cfa312938d4e358015": {
            "$ref": "#/components/schemas/TA234457e6f96945cfa312938d4e358015"
          },
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "$ref": "#/components/schemas/TA2f6961e921ef4b92b7304dd76db8336f2"
          }
        },
        "example": {
          "tA234457e6f96945cfa312938d4e358015": {
            "total": 0,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "totalSum": 0,
            "currentMonthSum": 0,
            "currentHourSum": 0,
            "currentDaySum": 0,
            "total": 11,
            "currentMonth": 5,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "TA234457e6f96945cfa312938d4e358015": {
        "title": "TA234457e6f96945cfa312938d4e358015",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 0,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "TA2f6961e921ef4b92b7304dd76db8336f2": {
        "title": "TA2f6961e921ef4b92b7304dd76db8336f2",
        "required": [
          "totalSum",
          "currentMonthSum",
          "currentHourSum",
          "currentDaySum",
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "totalSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonthSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentHourSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentDaySum": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "totalSum": 0,
          "currentMonthSum": 0,
          "currentHourSum": 0,
          "currentDaySum": 0,
          "total": 11,
          "currentMonth": 5,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "Caps1": {
        "title": "Caps1",
        "required": [
          "hourSum",
          "daySum",
          "monthSum",
          "totalSum",
          "live",
          "isGroup",
          "hour",
          "day",
          "month",
          "total"
        ],
        "type": "object",
        "properties": {
          "hourSum": {
            "type": "integer",
            "format": "int32"
          },
          "daySum": {
            "type": "integer",
            "format": "int32"
          },
          "monthSum": {
            "type": "integer",
            "format": "int32"
          },
          "totalSum": {
            "type": "integer",
            "format": "int32"
          },
          "live": {
            "type": "integer",
            "format": "int32"
          },
          "isGroup": {
            "type": "boolean"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "hourSum": -1,
          "daySum": -1,
          "monthSum": -1,
          "totalSum": -1,
          "live": -1,
          "isGroup": false,
          "hour": -1,
          "day": -1,
          "month": -1,
          "total": -1
        }
      },
      "GetStatsforaSpecificTarget": {
        "title": "GetStatsforaSpecificTarget",
        "required": [
          "transactionId",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats4"
          }
        },
        "example": {
          "transactionId": "TR31450cf5-309e-41a0-9d92-d994bf0bf1d6",
          "stats": {
            "tA2f6961e921ef4b92b7304dd76db8336f": {
              "totalSum": 0,
              "currentMonthSum": 0,
              "currentHourSum": 0,
              "currentDaySum": 0,
              "total": 10,
              "currentMonth": 4,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "Stats4": {
        "title": "Stats4",
        "required": [
          "tA2f6961e921ef4b92b7304dd76db8336f"
        ],
        "type": "object",
        "properties": {
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "$ref": "#/components/schemas/TA2f6961e921ef4b92b7304dd76db8336f2"
          }
        },
        "example": {
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "totalSum": 0,
            "currentMonthSum": 0,
            "currentHourSum": 0,
            "currentDaySum": 0,
            "total": 10,
            "currentMonth": 4,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "GetInboundReferencesforaSpecificTarget": {
        "title": "GetInboundReferencesforaSpecificTarget",
        "required": [
          "transactionId",
          "id",
          "hasReferences",
          "refByAccount",
          "campaigns"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          },
          "refByAccount": {
            "type": "boolean"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign31"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR73807c87-2bfb-4c9c-9801-254848b65fd7",
          "id": "TA2f6961e921ef4b92b7304dd76db8336f",
          "hasReferences": true,
          "refByAccount": true,
          "campaigns": [
            {
              "campaignId": "CAa2714586592f464f817efc493f3a4b50",
              "campaignName": "RINGBA TEST CAMPAIGN",
              "campaignDefaultTarget": "false"
            },
            {
              "campaignId": "CA74c0b7f1f3824246b73e72a9238b4bfc",
              "campaignName": "API Test",
              "campaignDefaultTarget": "false",
              "campaignNoRoutes": "1"
            }
          ]
        }
      },
      "Campaign31": {
        "title": "Campaign31",
        "required": [
          "campaignId",
          "campaignName",
          "campaignDefaultTarget"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "campaignName": {
            "type": "string"
          },
          "campaignDefaultTarget": {
            "type": "string"
          },
          "campaignNoRoutes": {
            "type": "string"
          }
        },
        "example": {
          "campaignId": "CAa2714586592f464f817efc493f3a4b50",
          "campaignName": "RINGBA TEST CAMPAIGN",
          "campaignDefaultTarget": "false"
        }
      },
      "CreateNewTargetRequest": {
        "title": "CreateNewTargetRequest",
        "required": [
          "name",
          "subId",
          "instructions",
          "schedule"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule24"
          }
        },
        "example": {
          "name": "New Target",
          "subId": "New",
          "instructions": {
            "callType": "number",
            "number": "+13075551234",
            "connectionTimeOut": 0
          },
          "schedule": {
            "timeZoneId": "Hawaiian Standard Time"
          }
        }
      },
      "Schedule24": {
        "title": "Schedule24",
        "required": [
          "timeZoneId"
        ],
        "type": "object",
        "properties": {
          "timeZoneId": {
            "type": "string"
          }
        },
        "example": {
          "timeZoneId": "Hawaiian Standard Time"
        }
      },
      "CreateNewTargetWithPhoneNumber": {
        "title": "CreateNewTargetWithPhoneNumber",
        "required": [
          "transactionId",
          "targetId",
          "target"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target3"
          }
        },
        "example": {
          "transactionId": "TR47046601-905a-4999-ba42-37f0759586bd",
          "targetId": "TAdef30c972ca149468e618900de78906f",
          "target": {
            "highRateCPM": 0,
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+17205551235"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Mountain Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "id": "TAdef30c972ca149468e618900de78906f",
            "name": "Phone Number Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Target3": {
        "title": "Target3",
        "required": [
          "highRateCPM",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "highRateCPM": {
            "type": "integer",
            "format": "int32"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "highRateCPM": 0,
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+17205551235"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Mountain Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "id": "TAdef30c972ca149468e618900de78906f",
          "name": "Phone Number Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "CreateNewTargetWithSIPURI": {
        "title": "CreateNewTargetWithSIPURI",
        "required": [
          "transactionId",
          "targetId",
          "target"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target4"
          }
        },
        "example": {
          "transactionId": "TR2585a461-a7a2-4453-ac29-87b3376ff324",
          "targetId": "TA03a010cba2ca496fb6a245c198b65559",
          "target": {
            "highRateCPM": 0,
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "sip",
              "number": "",
              "sip": {
                "number": "sip:1-999-123-4567@voip-provider.example.net",
                "userName": "SIP User",
                "password": "Pa$$word123"
              }
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Mountain Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "id": "TA03a010cba2ca496fb6a245c198b65559",
            "name": "SIP URI Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Target4": {
        "title": "Target4",
        "required": [
          "highRateCPM",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "highRateCPM": {
            "type": "integer",
            "format": "int32"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions25"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "highRateCPM": 0,
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "sip",
            "number": "",
            "sip": {
              "number": "sip:1-999-123-4567@voip-provider.example.net",
              "userName": "SIP User",
              "password": "Pa$$word123"
            }
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Mountain Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "id": "TA03a010cba2ca496fb6a245c198b65559",
          "name": "SIP URI Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Instructions25": {
        "title": "Instructions25",
        "required": [
          "connectionTimeOut",
          "callType",
          "number",
          "sip"
        ],
        "type": "object",
        "properties": {
          "connectionTimeOut": {
            "type": "integer",
            "format": "int32"
          },
          "callType": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "sip": {
            "$ref": "#/components/schemas/Sip"
          }
        },
        "example": {
          "connectionTimeOut": 0,
          "callType": "sip",
          "number": "",
          "sip": {
            "number": "sip:1-999-123-4567@voip-provider.example.net",
            "userName": "SIP User",
            "password": "Pa$$word123"
          }
        }
      },
      "Sip": {
        "title": "Sip",
        "required": [
          "number",
          "userName",
          "password"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "number": "sip:1-999-123-4567@voip-provider.example.net",
          "userName": "SIP User",
          "password": "Pa$$word123"
        }
      },
      "CreateNewTargetWithConcurrencyMatrix": {
        "title": "CreateNewTargetWithConcurrencyMatrix",
        "required": [
          "transactionId",
          "targetId",
          "target"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target5"
          }
        },
        "example": {
          "transactionId": "TR67528e6e-ad90-4337-b041-183c49517edb",
          "targetId": "TA904a869ef552438b953647384b2d7af2",
          "target": {
            "highRateCPM": 0,
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+13075551234"
            },
            "isHighRateTarget": false,
            "subId": "New",
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "callConcurrencyMatrix": [
                [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1
                ],
                [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1
                ],
                [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1
                ],
                [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1
                ],
                [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1
                ],
                [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  2,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1
                ],
                [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1
                ]
              ],
              "concurrencyCap": -1,
              "timeZoneId": "Hawaiian Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "id": "TA904a869ef552438b953647384b2d7af2",
            "name": "New Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Target5": {
        "title": "Target5",
        "required": [
          "highRateCPM",
          "instructions",
          "isHighRateTarget",
          "subId",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "highRateCPM": {
            "type": "integer",
            "format": "int32"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "subId": {
            "type": "string"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule27"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "highRateCPM": 0,
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+13075551234"
          },
          "isHighRateTarget": false,
          "subId": "New",
          "targetCallIncrement": "onConvert",
          "conversionTimerOffset": 0,
          "schedule": {
            "callConcurrencyMatrix": [
              [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ],
              [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ],
              [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ],
              [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ],
              [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ],
              [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ],
              [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ]
            ],
            "concurrencyCap": -1,
            "timeZoneId": "Hawaiian Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "id": "TA904a869ef552438b953647384b2d7af2",
          "name": "New Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Schedule27": {
        "title": "Schedule27",
        "required": [
          "callConcurrencyMatrix",
          "concurrencyCap",
          "timeZoneId",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap"
        ],
        "type": "object",
        "properties": {
          "callConcurrencyMatrix": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "callConcurrencyMatrix": [
            [
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1
            ],
            [
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1
            ],
            [
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1
            ],
            [
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1
            ],
            [
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1
            ],
            [
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              2,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1
            ],
            [
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1,
              -1
            ]
          ],
          "concurrencyCap": -1,
          "timeZoneId": "Hawaiian Standard Time",
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1
        }
      },
      "CreateNewTargetWithHoursofOperation": {
        "title": "CreateNewTargetWithHoursofOperation",
        "required": [
          "transactionId",
          "targetId",
          "target"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target6"
          }
        },
        "example": {
          "transactionId": "TR0594e89c-f30c-40a1-a8b0-144e343417a1",
          "targetId": "TA37d7871f1ad34525a073697e0a849b46",
          "target": {
            "highRateCPM": 0,
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+13075551234"
            },
            "isHighRateTarget": false,
            "subId": "New",
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "hoursOfOperation": [
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": true
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": true
                }
              ],
              "timeZoneId": "Hawaiian Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "id": "TA37d7871f1ad34525a073697e0a849b46",
            "name": "New Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Target6": {
        "title": "Target6",
        "required": [
          "highRateCPM",
          "instructions",
          "isHighRateTarget",
          "subId",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "id",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "highRateCPM": {
            "type": "integer",
            "format": "int32"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "subId": {
            "type": "string"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule28"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "highRateCPM": 0,
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+13075551234"
          },
          "isHighRateTarget": false,
          "subId": "New",
          "targetCallIncrement": "onConvert",
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "hoursOfOperation": [
              {
                "openTime": {
                  "minute": 0,
                  "hour": 9
                },
                "closeTime": {
                  "minute": 0,
                  "hour": 17
                },
                "inverted": false,
                "isClosed": true
              },
              {
                "openTime": {
                  "minute": 0,
                  "hour": 9
                },
                "closeTime": {
                  "minute": 0,
                  "hour": 17
                },
                "inverted": false,
                "isClosed": false
              },
              {
                "openTime": {
                  "minute": 0,
                  "hour": 9
                },
                "closeTime": {
                  "minute": 0,
                  "hour": 17
                },
                "inverted": false,
                "isClosed": false
              },
              {
                "openTime": {
                  "minute": 0,
                  "hour": 9
                },
                "closeTime": {
                  "minute": 0,
                  "hour": 17
                },
                "inverted": false,
                "isClosed": false
              },
              {
                "openTime": {
                  "minute": 0,
                  "hour": 9
                },
                "closeTime": {
                  "minute": 0,
                  "hour": 17
                },
                "inverted": false,
                "isClosed": false
              },
              {
                "openTime": {
                  "minute": 0,
                  "hour": 9
                },
                "closeTime": {
                  "minute": 0,
                  "hour": 17
                },
                "inverted": false,
                "isClosed": false
              },
              {
                "openTime": {
                  "minute": 0,
                  "hour": 9
                },
                "closeTime": {
                  "minute": 0,
                  "hour": 17
                },
                "inverted": false,
                "isClosed": true
              }
            ],
            "timeZoneId": "Hawaiian Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "id": "TA37d7871f1ad34525a073697e0a849b46",
          "name": "New Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Schedule28": {
        "title": "Schedule28",
        "required": [
          "concurrencyCap",
          "hoursOfOperation",
          "timeZoneId",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap"
        ],
        "type": "object",
        "properties": {
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hoursOfOperation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoursOfOperation"
            },
            "description": ""
          },
          "timeZoneId": {
            "type": "string"
          },
          "allTimeSumCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlySumCap": {
            "type": "integer",
            "format": "int32"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "concurrencyCap": -1,
          "hoursOfOperation": [
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": true
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": false
            },
            {
              "openTime": {
                "minute": 0,
                "hour": 9
              },
              "closeTime": {
                "minute": 0,
                "hour": 17
              },
              "inverted": false,
              "isClosed": true
            }
          ],
          "timeZoneId": "Hawaiian Standard Time",
          "allTimeSumCap": -1,
          "monthlySumCap": -1,
          "dailySumCap": -1,
          "hourlySumCap": -1,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1
        }
      },
      "HoursOfOperation": {
        "title": "HoursOfOperation",
        "required": [
          "openTime",
          "closeTime",
          "inverted",
          "isClosed"
        ],
        "type": "object",
        "properties": {
          "openTime": {
            "$ref": "#/components/schemas/OpenTime"
          },
          "closeTime": {
            "$ref": "#/components/schemas/CloseTime"
          },
          "inverted": {
            "type": "boolean"
          },
          "isClosed": {
            "type": "boolean"
          }
        },
        "example": {
          "openTime": {
            "minute": 0,
            "hour": 9
          },
          "closeTime": {
            "minute": 0,
            "hour": 17
          },
          "inverted": false,
          "isClosed": true
        }
      },
      "CreateNewTargetWithAllAvailableParameters": {
        "title": "CreateNewTargetWithAllAvailableParameters",
        "required": [
          "transactionId",
          "targetId",
          "target"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target6"
          }
        },
        "example": {
          "transactionId": "TR08ba4fda-841c-4f98-8116-f11b20e7cb91",
          "targetId": "TA8d775849ba6849d9995ca0db97702609",
          "target": {
            "highRateCPM": 0,
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+13075551234"
            },
            "isHighRateTarget": false,
            "subId": "New",
            "targetCallIncrement": "onConnect",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": 2,
              "hoursOfOperation": [
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                },
                {
                  "openTime": {
                    "minute": 0,
                    "hour": 9
                  },
                  "closeTime": {
                    "minute": 0,
                    "hour": 17
                  },
                  "inverted": false,
                  "isClosed": false
                }
              ],
              "timeZoneId": "Hawaiian Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": 2000,
              "monthlyCap": 250,
              "dailyCap": 21,
              "hourlyCap": 3
            },
            "blockRecordings": false,
            "id": "TA8d775849ba6849d9995ca0db97702609",
            "name": "New Target",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "CheckDuplicateTargetsRequest": {
        "title": "CheckDuplicateTargetsRequest",
        "required": [
          "id",
          "targetGroupId",
          "instructions",
          "isHighRateTarget",
          "highRateCost",
          "ringbaNumberId",
          "targetCallIncrement",
          "_SearchNumer",
          "capsMigrated",
          "owner",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "highRateCost": {
            "type": "number"
          },
          "ringbaNumberId": {
            "type": "string"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "_SearchNumer": {
            "type": "string"
          },
          "capsMigrated": {
            "type": "boolean"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner20"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule30"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TAa58f7dbd65be4b9f938fd4172d63ce57",
          "targetGroupId": "",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+18885852294"
          },
          "isHighRateTarget": false,
          "highRateCost": 0.0,
          "ringbaNumberId": "PNZFWQO0",
          "targetCallIncrement": "onConvert",
          "_SearchNumer": "number:+18885852294",
          "capsMigrated": true,
          "owner": {
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "id": "BUec50e9c7fa294283ba10a35893b13198",
            "userIds": [
              "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
            ],
            "canPauseTargets": true,
            "canSetConcurrencyCaps": false,
            "canDisputeConversions": true,
            "capacity": {
              "timeZoneId": "UTC",
              "allTimeSumCap": -1.0,
              "monthlySumCap": -1.0,
              "dailySumCap": -1.0,
              "hourlySumCap": -1.0,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "name": "Example Buyer Co.",
            "enabled": true,
            "version": 1
          },
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Pacific Standard Time",
            "allTimeSumCap": -1.0,
            "monthlySumCap": -1.0,
            "dailySumCap": -1.0,
            "hourlySumCap": -1.0,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Ringba Test Target - Copy",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Owner20": {
        "title": "Owner20",
        "required": [
          "accountId",
          "id",
          "userIds",
          "canPauseTargets",
          "canSetConcurrencyCaps",
          "canDisputeConversions",
          "capacity",
          "name",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "canPauseTargets": {
            "type": "boolean"
          },
          "canSetConcurrencyCaps": {
            "type": "boolean"
          },
          "canDisputeConversions": {
            "type": "boolean"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity21"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "id": "BUec50e9c7fa294283ba10a35893b13198",
          "userIds": [
            "1f14ed10-c279-4897-b033-7e4d2db8a0c5"
          ],
          "canPauseTargets": true,
          "canSetConcurrencyCaps": false,
          "canDisputeConversions": true,
          "capacity": {
            "timeZoneId": "UTC",
            "allTimeSumCap": -1.0,
            "monthlySumCap": -1.0,
            "dailySumCap": -1.0,
            "hourlySumCap": -1.0,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "name": "Example Buyer Co.",
          "enabled": true,
          "version": 1
        }
      },
      "Capacity21": {
        "title": "Capacity21",
        "required": [
          "timeZoneId",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap"
        ],
        "type": "object",
        "properties": {
          "timeZoneId": {
            "type": "string"
          },
          "allTimeSumCap": {
            "type": "number"
          },
          "monthlySumCap": {
            "type": "number"
          },
          "dailySumCap": {
            "type": "number"
          },
          "hourlySumCap": {
            "type": "number"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "timeZoneId": "UTC",
          "allTimeSumCap": -1.0,
          "monthlySumCap": -1.0,
          "dailySumCap": -1.0,
          "hourlySumCap": -1.0,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1
        }
      },
      "Schedule30": {
        "title": "Schedule30",
        "required": [
          "concurrencyCap",
          "timeZoneId",
          "allTimeSumCap",
          "monthlySumCap",
          "dailySumCap",
          "hourlySumCap",
          "allTimeCap",
          "monthlyCap",
          "dailyCap",
          "hourlyCap"
        ],
        "type": "object",
        "properties": {
          "concurrencyCap": {
            "type": "integer",
            "format": "int32"
          },
          "timeZoneId": {
            "type": "string"
          },
          "allTimeSumCap": {
            "type": "number"
          },
          "monthlySumCap": {
            "type": "number"
          },
          "dailySumCap": {
            "type": "number"
          },
          "hourlySumCap": {
            "type": "number"
          },
          "allTimeCap": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyCap": {
            "type": "integer",
            "format": "int32"
          },
          "dailyCap": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyCap": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "concurrencyCap": -1,
          "timeZoneId": "Pacific Standard Time",
          "allTimeSumCap": -1.0,
          "monthlySumCap": -1.0,
          "dailySumCap": -1.0,
          "hourlySumCap": -1.0,
          "allTimeCap": -1,
          "monthlyCap": -1,
          "dailyCap": -1,
          "hourlyCap": -1
        }
      },
      "CheckDuplicateTargetswithnon-duplicatetarget": {
        "title": "CheckDuplicateTargetswithnon-duplicatetarget",
        "required": [
          "transactionId",
          "message",
          "isDuplicate",
          "isDuplicateName",
          "isDuplicatePhoneNumber",
          "isDuplicateSIP"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "isDuplicate": {
            "type": "boolean"
          },
          "isDuplicateName": {
            "type": "boolean"
          },
          "isDuplicatePhoneNumber": {
            "type": "boolean"
          },
          "isDuplicateSIP": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRfd9d0380-9f80-44cd-94d7-d0d6d856c9f0",
          "message": "Target already exists",
          "isDuplicate": false,
          "isDuplicateName": false,
          "isDuplicatePhoneNumber": false,
          "isDuplicateSIP": false
        }
      },
      "CheckDuplicateTargetswithduplicatetarget": {
        "title": "CheckDuplicateTargetswithduplicatetarget",
        "required": [
          "transactionId",
          "message",
          "isDuplicate",
          "isDuplicateName",
          "isDuplicatePhoneNumber",
          "isDuplicateSIP"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "isDuplicate": {
            "type": "boolean"
          },
          "isDuplicateName": {
            "type": "boolean"
          },
          "isDuplicatePhoneNumber": {
            "type": "boolean"
          },
          "isDuplicateSIP": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRb9a72ca5-8b01-4fb5-a0fb-06e3bd2ae2a9",
          "message": "Target already exists",
          "isDuplicate": true,
          "isDuplicateName": true,
          "isDuplicatePhoneNumber": true,
          "isDuplicateSIP": false
        }
      },
      "AssignTargettoBuyerRequest": {
        "title": "AssignTargettoBuyerRequest",
        "required": [
          "buyerId"
        ],
        "type": "object",
        "properties": {
          "buyerId": {
            "type": "string"
          }
        },
        "example": {
          "buyerId": "{{buyerId}}"
        }
      },
      "AddBuyertoTarget": {
        "title": "AddBuyertoTarget",
        "required": [
          "transactionId",
          "target"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target8"
          }
        },
        "example": {
          "transactionId": "TR81eac9cc-98df-4c8d-9295-b60da3f339ff",
          "target": {
            "id": "TA4286d3a65fb446e59030d105a34d2ac7",
            "targetGroupId": "",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+18442757927"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "owner": {
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "id": "BUec50e9c7fa294283ba10a35893b13198",
              "canPauseTargets": true,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": false,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "name": "Example Buyer Co.",
              "enabled": true,
              "version": 1
            },
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Mountain Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Test Target Three",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "Target8": {
        "title": "Target8",
        "required": [
          "id",
          "targetGroupId",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "owner",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner21"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA4286d3a65fb446e59030d105a34d2ac7",
          "targetGroupId": "",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+18442757927"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "owner": {
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "id": "BUec50e9c7fa294283ba10a35893b13198",
            "canPauseTargets": true,
            "canSetConcurrencyCaps": false,
            "canDisputeConversions": false,
            "capacity": {
              "timeZoneId": "UTC",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "name": "Example Buyer Co.",
            "enabled": true,
            "version": 1
          },
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Mountain Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Test Target Three",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Owner21": {
        "title": "Owner21",
        "required": [
          "accountId",
          "id",
          "canPauseTargets",
          "canSetConcurrencyCaps",
          "canDisputeConversions",
          "capacity",
          "name",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "canPauseTargets": {
            "type": "boolean"
          },
          "canSetConcurrencyCaps": {
            "type": "boolean"
          },
          "canDisputeConversions": {
            "type": "boolean"
          },
          "capacity": {
            "$ref": "#/components/schemas/Capacity"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "id": "BUec50e9c7fa294283ba10a35893b13198",
          "canPauseTargets": true,
          "canSetConcurrencyCaps": false,
          "canDisputeConversions": false,
          "capacity": {
            "timeZoneId": "UTC",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "name": "Example Buyer Co.",
          "enabled": true,
          "version": 1
        }
      },
      "UpdateTarget": {
        "title": "UpdateTarget",
        "required": [
          "transactionId",
          "target",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target9"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats5"
          }
        },
        "example": {
          "transactionId": "TR2387d7be-ef38-422b-a363-ab8d9448a5af",
          "target": {
            "id": "TA4286d3a65fb446e59030d105a34d2ac7",
            "targetGroupId": "",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+18442757927"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Mountain Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Test Target Three",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "stats": {
            "tA4286d3a65fb446e59030d105a34d2ac7": {
              "totalSum": 0,
              "currentMonthSum": 0,
              "currentHourSum": 0,
              "currentDaySum": 0,
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "Target9": {
        "title": "Target9",
        "required": [
          "id",
          "targetGroupId",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA4286d3a65fb446e59030d105a34d2ac7",
          "targetGroupId": "",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+18442757927"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Mountain Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Test Target Three",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "Stats5": {
        "title": "Stats5",
        "required": [
          "tA4286d3a65fb446e59030d105a34d2ac7"
        ],
        "type": "object",
        "properties": {
          "tA4286d3a65fb446e59030d105a34d2ac7": {
            "$ref": "#/components/schemas/TA4286d3a65fb446e59030d105a34d2ac7"
          }
        },
        "example": {
          "tA4286d3a65fb446e59030d105a34d2ac7": {
            "totalSum": 0,
            "currentMonthSum": 0,
            "currentHourSum": 0,
            "currentDaySum": 0,
            "total": 0,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "TA4286d3a65fb446e59030d105a34d2ac7": {
        "title": "TA4286d3a65fb446e59030d105a34d2ac7",
        "required": [
          "totalSum",
          "currentMonthSum",
          "currentHourSum",
          "currentDaySum",
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "totalSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonthSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentHourSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentDaySum": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "totalSum": 0,
          "currentMonthSum": 0,
          "currentHourSum": 0,
          "currentDaySum": 0,
          "total": 0,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "ResetCountforaSpecificTarget": {
        "title": "ResetCountforaSpecificTarget",
        "required": [
          "transactionId",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats6"
          }
        },
        "example": {
          "transactionId": "TR02327d36-21d7-49bb-afbd-0228bf34c339",
          "stats": {
            "tAc915194e11ab428f91178e897e1d67cb": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "tAfa4c37e44a274af8b8927ed67d536d89": {
              "totalSum": 0,
              "currentMonthSum": 0,
              "currentHourSum": 0,
              "currentDaySum": 0,
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "Stats6": {
        "title": "Stats6",
        "required": [
          "tAc915194e11ab428f91178e897e1d67cb",
          "tAfa4c37e44a274af8b8927ed67d536d89"
        ],
        "type": "object",
        "properties": {
          "tAc915194e11ab428f91178e897e1d67cb": {
            "$ref": "#/components/schemas/TAc915194e11ab428f91178e897e1d67cb"
          },
          "tAfa4c37e44a274af8b8927ed67d536d89": {
            "$ref": "#/components/schemas/TAfa4c37e44a274af8b8927ed67d536d89"
          }
        },
        "example": {
          "tAc915194e11ab428f91178e897e1d67cb": {
            "total": 0,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "tAfa4c37e44a274af8b8927ed67d536d89": {
            "totalSum": 0,
            "currentMonthSum": 0,
            "currentHourSum": 0,
            "currentDaySum": 0,
            "total": 0,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "TAc915194e11ab428f91178e897e1d67cb": {
        "title": "TAc915194e11ab428f91178e897e1d67cb",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 0,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "TAfa4c37e44a274af8b8927ed67d536d89": {
        "title": "TAfa4c37e44a274af8b8927ed67d536d89",
        "required": [
          "totalSum",
          "currentMonthSum",
          "currentHourSum",
          "currentDaySum",
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "totalSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonthSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentHourSum": {
            "type": "integer",
            "format": "int32"
          },
          "currentDaySum": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "totalSum": 0,
          "currentMonthSum": 0,
          "currentHourSum": 0,
          "currentDaySum": 0,
          "total": 0,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "DeleteTarget": {
        "title": "DeleteTarget",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TRb3d1a3e7-625d-4101-8f64-2d0ca2d79598",
          "isSuccessful": true
        }
      },
      "DeleteBuyerFromTarget": {
        "title": "DeleteBuyerFromTarget",
        "required": [
          "transactionId",
          "target"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Target9"
          }
        },
        "example": {
          "transactionId": "TR1714cd3b-5801-407c-b3a8-009f52ea56e9",
          "target": {
            "id": "TA4286d3a65fb446e59030d105a34d2ac7",
            "targetGroupId": "",
            "instructions": {
              "connectionTimeOut": 0,
              "callType": "number",
              "number": "+18442757927"
            },
            "isHighRateTarget": false,
            "targetCallIncrement": "onConvert",
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Mountain Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Test Target Three",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "GetTargetGroups": {
        "title": "GetTargetGroups",
        "required": [
          "transactionId",
          "targetGroups"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetGroup"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRf2b4dddd-50c8-49a3-835a-fb27b57a855a",
          "targetGroups": [
            {
              "id": "TA234457e6f96945cfa312938d4e358015",
              "isSimalDial": false,
              "oRouteSettings": {
                "campaignOverride": false,
                "globalOverride": false,
                "waterFallOverride": false
              },
              "oCapacity": {
                "campaignOverride": false,
                "globalOverride": false,
                "waterFallOverride": false
              },
              "oConcurrency": {
                "campaignOverride": false,
                "globalOverride": false,
                "waterFallOverride": false
              },
              "oSchedule": {
                "campaignOverride": false,
                "globalOverride": false,
                "waterFallOverride": false
              },
              "targets": [
                {
                  "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+17605550149"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "owner": {
                    "canPauseTargets": true,
                    "canSetConcurrencyCaps": false,
                    "canDisputeConversions": false,
                    "capacity": {
                      "timeZoneId": "UTC",
                      "allTimeSumCap": -1,
                      "monthlySumCap": -1,
                      "dailySumCap": -1,
                      "hourlySumCap": -1,
                      "allTimeCap": -1,
                      "monthlyCap": -1,
                      "dailyCap": -1,
                      "hourlyCap": -1
                    },
                    "id": "BUec50e9c7fa294283ba10a35893b13198",
                    "name": "Example Buyer Co.",
                    "accountId": "RA25107ee2411049989cd8672852278bdb",
                    "enabled": true,
                    "version": 1
                  },
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Mountain Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "New Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                {
                  "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                  "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                  "instructions": {
                    "connectionTimeOut": 0,
                    "callType": "number",
                    "number": "+16317918378"
                  },
                  "isHighRateTarget": false,
                  "targetCallIncrement": "onConvert",
                  "conversionTimerOffset": 0,
                  "schedule": {
                    "concurrencyCap": -1,
                    "timeZoneId": "Romance Standard Time",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "blockRecordings": false,
                  "name": "Ringba Test Target",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                }
              ],
              "disableTargets": false,
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Pacific Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "Test Buyer Group",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 2
            }
          ]
        }
      },
      "TargetGroup": {
        "title": "TargetGroup",
        "required": [
          "id",
          "isSimalDial",
          "oRouteSettings",
          "oCapacity",
          "oConcurrency",
          "oSchedule",
          "targets",
          "disableTargets",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isSimalDial": {
            "type": "boolean"
          },
          "oRouteSettings": {
            "$ref": "#/components/schemas/ORouteSettings"
          },
          "oCapacity": {
            "$ref": "#/components/schemas/OCapacity"
          },
          "oConcurrency": {
            "$ref": "#/components/schemas/OConcurrency"
          },
          "oSchedule": {
            "$ref": "#/components/schemas/OSchedule"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target11"
            },
            "description": ""
          },
          "disableTargets": {
            "type": "boolean"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA234457e6f96945cfa312938d4e358015",
          "isSimalDial": false,
          "oRouteSettings": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oCapacity": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oConcurrency": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oSchedule": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "targets": [
            {
              "id": "TAfa4c37e44a274af8b8927ed67d536d89",
              "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17605550149"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": true,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUec50e9c7fa294283ba10a35893b13198",
                "name": "Example Buyer Co.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "New Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "TA2f6961e921ef4b92b7304dd76db8336f",
              "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+16317918378"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Romance Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "Ringba Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "disableTargets": false,
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Pacific Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Test Buyer Group",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 2
        }
      },
      "Target11": {
        "title": "Target11",
        "required": [
          "id",
          "targetGroupId",
          "instructions",
          "isHighRateTarget",
          "targetCallIncrement",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "isHighRateTarget": {
            "type": "boolean"
          },
          "targetCallIncrement": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner21"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TAfa4c37e44a274af8b8927ed67d536d89",
          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
          "instructions": {
            "connectionTimeOut": 0,
            "callType": "number",
            "number": "+17605550149"
          },
          "isHighRateTarget": false,
          "targetCallIncrement": "onConvert",
          "owner": {
            "canPauseTargets": true,
            "canSetConcurrencyCaps": false,
            "canDisputeConversions": false,
            "capacity": {
              "timeZoneId": "UTC",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "id": "BUec50e9c7fa294283ba10a35893b13198",
            "name": "Example Buyer Co.",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Mountain Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "New Test Target",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "GetDetailsaboutSpecificTargetGroup": {
        "title": "GetDetailsaboutSpecificTargetGroup",
        "required": [
          "transactionId",
          "targetGroup",
          "stats",
          "caps"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetGroup": {
            "$ref": "#/components/schemas/TargetGroup1"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats7"
          },
          "caps": {
            "$ref": "#/components/schemas/Caps2"
          }
        },
        "example": {
          "transactionId": "TR51baf16f-4113-4baa-aac1-6f70f221389a",
          "targetGroup": {
            "id": "TA6bd8e3e01cc0492b9427e04f0312fa98",
            "isSimalDial": false,
            "oRouteSettings": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oCapacity": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oConcurrency": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oSchedule": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "targets": [],
            "disableTargets": false,
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Pacific Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Example Target Group",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 2
          },
          "stats": {
            "tA6bd8e3e01cc0492b9427e04f0312fa98": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          },
          "caps": {
            "live": -1,
            "isGroup": false,
            "hour": -1,
            "day": -1,
            "month": -1,
            "total": -1
          }
        }
      },
      "TargetGroup1": {
        "title": "TargetGroup1",
        "required": [
          "id",
          "isSimalDial",
          "oRouteSettings",
          "oCapacity",
          "oConcurrency",
          "oSchedule",
          "targets",
          "disableTargets",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isSimalDial": {
            "type": "boolean"
          },
          "oRouteSettings": {
            "$ref": "#/components/schemas/ORouteSettings"
          },
          "oCapacity": {
            "$ref": "#/components/schemas/OCapacity"
          },
          "oConcurrency": {
            "$ref": "#/components/schemas/OConcurrency"
          },
          "oSchedule": {
            "$ref": "#/components/schemas/OSchedule"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "disableTargets": {
            "type": "boolean"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA6bd8e3e01cc0492b9427e04f0312fa98",
          "isSimalDial": false,
          "oRouteSettings": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oCapacity": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oConcurrency": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oSchedule": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "targets": [],
          "disableTargets": false,
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Pacific Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Example Target Group",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 2
        }
      },
      "Stats7": {
        "title": "Stats7",
        "required": [
          "tA6bd8e3e01cc0492b9427e04f0312fa98"
        ],
        "type": "object",
        "properties": {
          "tA6bd8e3e01cc0492b9427e04f0312fa98": {
            "$ref": "#/components/schemas/TA6bd8e3e01cc0492b9427e04f0312fa98"
          }
        },
        "example": {
          "tA6bd8e3e01cc0492b9427e04f0312fa98": {
            "total": 0,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "TA6bd8e3e01cc0492b9427e04f0312fa98": {
        "title": "TA6bd8e3e01cc0492b9427e04f0312fa98",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 0,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "Caps2": {
        "title": "Caps2",
        "required": [
          "live",
          "isGroup",
          "hour",
          "day",
          "month",
          "total"
        ],
        "type": "object",
        "properties": {
          "live": {
            "type": "integer",
            "format": "int32"
          },
          "isGroup": {
            "type": "boolean"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "live": -1,
          "isGroup": false,
          "hour": -1,
          "day": -1,
          "month": -1,
          "total": -1
        }
      },
      "GetStatsforSpecificTargetGroup": {
        "title": "GetStatsforSpecificTargetGroup",
        "required": [
          "transactionId",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats7"
          }
        },
        "example": {
          "transactionId": "TR59e2b6b5-e25f-4947-9c6d-628f92185411",
          "stats": {
            "tA6bd8e3e01cc0492b9427e04f0312fa98": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "GetTargetsforTargetGroup": {
        "title": "GetTargetsforTargetGroup",
        "required": [
          "transactionId",
          "targets"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target8"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR181eabe9-ab85-465b-a21b-ecd3bd8ba78a",
          "targets": [
            {
              "id": "TAfa4c37e44a274af8b8927ed67d536d89",
              "targetGroupId": "TAc915194e11ab428f91178e897e1d67cb",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17605550149"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": true,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUec50e9c7fa294283ba10a35893b13198",
                "name": "Example Buyer Co.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "New Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "TA1183b884e2df4541ad9651c168e3bab9",
              "targetGroupId": "TAc915194e11ab428f91178e897e1d67cb",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17205550167"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": false,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUaf8fb40966cc40cd83e3ac27d9fa5c9a",
                "name": "Call Buying Inc.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "Test Target Two",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "GetInboundReferencesforSpecificTargetGroup": {
        "title": "GetInboundReferencesforSpecificTargetGroup",
        "required": [
          "transactionId",
          "id",
          "hasReferences",
          "refByAccount",
          "campaigns",
          "targets"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "hasReferences": {
            "type": "boolean"
          },
          "refByAccount": {
            "type": "boolean"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign32"
            },
            "description": ""
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target13"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR2d6120f7-88e5-4521-b312-816481f7b8eb",
          "id": "TA234457e6f96945cfa312938d4e358015",
          "hasReferences": true,
          "refByAccount": true,
          "campaigns": [
            {
              "campaignId": "CAa2714586592f464f817efc493f3a4b50",
              "campaignName": "RINGBA TEST CAMPAIGN",
              "campaignNoRoutes": "1"
            }
          ],
          "targets": [
            {
              "targetId": "TAfa4c37e44a274af8b8927ed67d536d89",
              "targetName": "New Test Target"
            },
            {
              "targetId": "TA2f6961e921ef4b92b7304dd76db8336f",
              "targetName": "Ringba Test Target"
            }
          ]
        }
      },
      "Campaign32": {
        "title": "Campaign32",
        "required": [
          "campaignId",
          "campaignName",
          "campaignNoRoutes"
        ],
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "campaignName": {
            "type": "string"
          },
          "campaignNoRoutes": {
            "type": "string"
          }
        },
        "example": {
          "campaignId": "CAa2714586592f464f817efc493f3a4b50",
          "campaignName": "RINGBA TEST CAMPAIGN",
          "campaignNoRoutes": "1"
        }
      },
      "Target13": {
        "title": "Target13",
        "required": [
          "targetId",
          "targetName"
        ],
        "type": "object",
        "properties": {
          "targetId": {
            "type": "string"
          },
          "targetName": {
            "type": "string"
          }
        },
        "example": {
          "targetId": "TAfa4c37e44a274af8b8927ed67d536d89",
          "targetName": "New Test Target"
        }
      },
      "CreateTargetGroupRequest": {
        "title": "CreateTargetGroupRequest",
        "required": [
          "name",
          "isSimalDial",
          "schedule"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isSimalDial": {
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule24"
          }
        },
        "example": {
          "name": "Example Target Grouprtert",
          "isSimalDial": false,
          "schedule": {
            "timeZoneId": "Pacific Standard Time"
          }
        }
      },
      "CreateTargetGroup": {
        "title": "CreateTargetGroup",
        "required": [
          "transactionId",
          "targetGroupId",
          "targetGroup"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetGroupId": {
            "type": "string"
          },
          "targetGroup": {
            "$ref": "#/components/schemas/TargetGroup1"
          }
        },
        "example": {
          "transactionId": "TR9b1ac08a-cad8-4167-aaa3-e98cde02999c",
          "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
          "targetGroup": {
            "id": "TA234457e6f96945cfa312938d4e358015",
            "isSimalDial": false,
            "oRouteSettings": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oCapacity": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oConcurrency": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oSchedule": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "targets": [],
            "disableTargets": false,
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Pacific Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Test Buyer Group",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "AssignTargetGrouptoaBuyerRequest": {
        "title": "AssignTargetGrouptoaBuyerRequest",
        "required": [
          "buyerId"
        ],
        "type": "object",
        "properties": {
          "buyerId": {
            "type": "string"
          }
        },
        "example": {
          "buyerId": "{{buyerId}}"
        }
      },
      "AddBuyertoTargetGroup": {
        "title": "AddBuyertoTargetGroup",
        "required": [
          "transactionId",
          "targetGroup"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetGroup": {
            "$ref": "#/components/schemas/TargetGroup4"
          }
        },
        "example": {
          "transactionId": "TR5836fa52-dcf9-4d19-899c-c713d528b213",
          "targetGroup": {
            "id": "TA234457e6f96945cfa312938d4e358015",
            "isSimalDial": false,
            "oRouteSettings": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oCapacity": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oConcurrency": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oSchedule": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "targets": [
              {
                "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17605550149"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": false,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "New Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "disableTargets": false,
            "owner": {
              "canPauseTargets": false,
              "canSetConcurrencyCaps": false,
              "canDisputeConversions": false,
              "capacity": {
                "timeZoneId": "UTC",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "id": "BU0db0aea8954049468ed3d2893d0b00e9",
              "name": "Acme Call Buyers",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Pacific Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Test Buyer Group",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 2
          }
        }
      },
      "TargetGroup4": {
        "title": "TargetGroup4",
        "required": [
          "id",
          "isSimalDial",
          "oRouteSettings",
          "oCapacity",
          "oConcurrency",
          "oSchedule",
          "targets",
          "disableTargets",
          "owner",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isSimalDial": {
            "type": "boolean"
          },
          "oRouteSettings": {
            "$ref": "#/components/schemas/ORouteSettings"
          },
          "oCapacity": {
            "$ref": "#/components/schemas/OCapacity"
          },
          "oConcurrency": {
            "$ref": "#/components/schemas/OConcurrency"
          },
          "oSchedule": {
            "$ref": "#/components/schemas/OSchedule"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target8"
            },
            "description": ""
          },
          "disableTargets": {
            "type": "boolean"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner21"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA234457e6f96945cfa312938d4e358015",
          "isSimalDial": false,
          "oRouteSettings": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oCapacity": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oConcurrency": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oSchedule": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "targets": [
            {
              "id": "TAfa4c37e44a274af8b8927ed67d536d89",
              "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17605550149"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": true,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUec50e9c7fa294283ba10a35893b13198",
                "name": "Example Buyer Co.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "New Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "disableTargets": false,
          "owner": {
            "canPauseTargets": false,
            "canSetConcurrencyCaps": false,
            "canDisputeConversions": false,
            "capacity": {
              "timeZoneId": "UTC",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "id": "BU0db0aea8954049468ed3d2893d0b00e9",
            "name": "Acme Call Buyers",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          },
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Pacific Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Test Buyer Group",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 2
        }
      },
      "AddSingleTargettoTargetGroupRequest": {
        "title": "AddSingleTargettoTargetGroupRequest",
        "required": [
          "targetId"
        ],
        "type": "object",
        "properties": {
          "targetId": {
            "type": "string"
          }
        },
        "example": {
          "targetId": "{{targetId}}"
        }
      },
      "AddSingleTargettoTargetGroup": {
        "title": "AddSingleTargettoTargetGroup",
        "required": [
          "transactionId",
          "targets"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target9"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRe3afbbc9-1bf4-4436-9c52-58f9c9aa1e73",
          "targets": [
            {
              "id": "TA2f6961e921ef4b92b7304dd76db8336f",
              "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+16317918378"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Romance Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "Ringba Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "AddRemoveMultipleTargetstofromTargetGroupRequest": {
        "title": "AddRemoveMultipleTargetstofromTargetGroupRequest",
        "required": [
          "targetAddIds",
          "targetRemoveIds"
        ],
        "type": "object",
        "properties": {
          "targetAddIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "targetRemoveIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "targetAddIds": [
            "TAfa4c37e44a274af8b8927ed67d536d89",
            "TA1183b884e2df4541ad9651c168e3bab9"
          ],
          "targetRemoveIds": []
        }
      },
      "RemoveMultipleTargetsfromTargetGroup": {
        "title": "RemoveMultipleTargetsfromTargetGroup",
        "required": [
          "transactionId",
          "targets"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRae12b694-a01f-4ba8-9f02-6353d90d9475",
          "targets": []
        }
      },
      "AddMultipleTargetstoTargetGroup": {
        "title": "AddMultipleTargetstoTargetGroup",
        "required": [
          "transactionId",
          "targets"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target8"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR616fba90-f989-43fd-95c7-550d6bca3515",
          "targets": [
            {
              "id": "TAfa4c37e44a274af8b8927ed67d536d89",
              "targetGroupId": "TAc915194e11ab428f91178e897e1d67cb",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17605550149"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": true,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUec50e9c7fa294283ba10a35893b13198",
                "name": "Example Buyer Co.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "New Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "TA1183b884e2df4541ad9651c168e3bab9",
              "targetGroupId": "TAc915194e11ab428f91178e897e1d67cb",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17205550167"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": false,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUaf8fb40966cc40cd83e3ac27d9fa5c9a",
                "name": "Call Buying Inc.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "Test Target Two",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "EditTargetGroupRequest": {
        "title": "EditTargetGroupRequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "New Name"
        }
      },
      "EditTargetGroup": {
        "title": "EditTargetGroup",
        "required": [
          "transactionId",
          "targetGroup",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetGroup": {
            "$ref": "#/components/schemas/TargetGroup"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats9"
          }
        },
        "example": {
          "transactionId": "TRa1ef9e89-f551-4fc0-ab8f-4f649e7d25cf",
          "targetGroup": {
            "id": "TA234457e6f96945cfa312938d4e358015",
            "isSimalDial": false,
            "oRouteSettings": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oCapacity": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oConcurrency": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oSchedule": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "targets": [
              {
                "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17605550149"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": false,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "New Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              {
                "id": "TA2f6961e921ef4b92b7304dd76db8336f",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+16317918378"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Romance Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "Ringba Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "disableTargets": false,
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Pacific Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "New Name",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 2
          },
          "stats": {
            "tAfa4c37e44a274af8b8927ed67d536d89": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "tA2f6961e921ef4b92b7304dd76db8336f": {
              "total": 11,
              "currentMonth": 5,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "tA234457e6f96945cfa312938d4e358015": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "Stats9": {
        "title": "Stats9",
        "required": [
          "tAfa4c37e44a274af8b8927ed67d536d89",
          "tA2f6961e921ef4b92b7304dd76db8336f",
          "tA234457e6f96945cfa312938d4e358015"
        ],
        "type": "object",
        "properties": {
          "tAfa4c37e44a274af8b8927ed67d536d89": {
            "$ref": "#/components/schemas/TAfa4c37e44a274af8b8927ed67d536d891"
          },
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "$ref": "#/components/schemas/TA2f6961e921ef4b92b7304dd76db8336f4"
          },
          "tA234457e6f96945cfa312938d4e358015": {
            "$ref": "#/components/schemas/TA234457e6f96945cfa312938d4e358015"
          }
        },
        "example": {
          "tAfa4c37e44a274af8b8927ed67d536d89": {
            "total": 0,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "tA2f6961e921ef4b92b7304dd76db8336f": {
            "total": 11,
            "currentMonth": 5,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          },
          "tA234457e6f96945cfa312938d4e358015": {
            "total": 0,
            "currentMonth": 0,
            "currentDay": 0,
            "currentHour": 0,
            "currentLive": 0
          }
        }
      },
      "TAfa4c37e44a274af8b8927ed67d536d891": {
        "title": "TAfa4c37e44a274af8b8927ed67d536d891",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 0,
          "currentMonth": 0,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "TA2f6961e921ef4b92b7304dd76db8336f4": {
        "title": "TA2f6961e921ef4b92b7304dd76db8336f4",
        "required": [
          "total",
          "currentMonth",
          "currentDay",
          "currentHour",
          "currentLive"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "currentMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentDay": {
            "type": "integer",
            "format": "int32"
          },
          "currentHour": {
            "type": "integer",
            "format": "int32"
          },
          "currentLive": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "total": 11,
          "currentMonth": 5,
          "currentDay": 0,
          "currentHour": 0,
          "currentLive": 0
        }
      },
      "ResetCountsforTargetGroup": {
        "title": "ResetCountsforTargetGroup",
        "required": [
          "transactionId",
          "stats"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats9"
          }
        },
        "example": {
          "transactionId": "TR662de660-2c32-494f-9085-2fa3daef784b",
          "stats": {
            "tAfa4c37e44a274af8b8927ed67d536d89": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "tA2f6961e921ef4b92b7304dd76db8336f": {
              "total": 11,
              "currentMonth": 5,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            },
            "tA234457e6f96945cfa312938d4e358015": {
              "total": 0,
              "currentMonth": 0,
              "currentDay": 0,
              "currentHour": 0,
              "currentLive": 0
            }
          }
        }
      },
      "DeleteSingleTargetfromTargetGroup": {
        "title": "DeleteSingleTargetfromTargetGroup",
        "required": [
          "transactionId",
          "targets"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target8"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TRe038b810-0363-453e-a569-b05910ed1e91",
          "targets": [
            {
              "id": "TAfa4c37e44a274af8b8927ed67d536d89",
              "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17605550149"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": true,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUec50e9c7fa294283ba10a35893b13198",
                "name": "Example Buyer Co.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "New Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "RemoveBuyerfromTargetGroup": {
        "title": "RemoveBuyerfromTargetGroup",
        "required": [
          "transactionId",
          "targetGroup"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "targetGroup": {
            "$ref": "#/components/schemas/TargetGroup6"
          }
        },
        "example": {
          "transactionId": "TR24809c7e-02af-4fa7-9176-cca2bfef9124",
          "targetGroup": {
            "id": "TA234457e6f96945cfa312938d4e358015",
            "isSimalDial": false,
            "oRouteSettings": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oCapacity": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oConcurrency": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "oSchedule": {
              "campaignOverride": false,
              "globalOverride": false,
              "waterFallOverride": false
            },
            "targets": [
              {
                "id": "TAfa4c37e44a274af8b8927ed67d536d89",
                "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
                "instructions": {
                  "connectionTimeOut": 0,
                  "callType": "number",
                  "number": "+17605550149"
                },
                "isHighRateTarget": false,
                "targetCallIncrement": "onConvert",
                "owner": {
                  "canPauseTargets": true,
                  "canSetConcurrencyCaps": false,
                  "canDisputeConversions": false,
                  "capacity": {
                    "timeZoneId": "UTC",
                    "allTimeSumCap": -1,
                    "monthlySumCap": -1,
                    "dailySumCap": -1,
                    "hourlySumCap": -1,
                    "allTimeCap": -1,
                    "monthlyCap": -1,
                    "dailyCap": -1,
                    "hourlyCap": -1
                  },
                  "id": "BUec50e9c7fa294283ba10a35893b13198",
                  "name": "Example Buyer Co.",
                  "accountId": "RA25107ee2411049989cd8672852278bdb",
                  "enabled": true,
                  "version": 1
                },
                "conversionTimerOffset": 0,
                "schedule": {
                  "concurrencyCap": -1,
                  "timeZoneId": "Mountain Standard Time",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "blockRecordings": false,
                "name": "New Test Target",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              }
            ],
            "disableTargets": false,
            "conversionTimerOffset": 0,
            "schedule": {
              "concurrencyCap": -1,
              "timeZoneId": "Pacific Standard Time",
              "allTimeSumCap": -1,
              "monthlySumCap": -1,
              "dailySumCap": -1,
              "hourlySumCap": -1,
              "allTimeCap": -1,
              "monthlyCap": -1,
              "dailyCap": -1,
              "hourlyCap": -1
            },
            "blockRecordings": false,
            "name": "Test Buyer Group",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 2
          }
        }
      },
      "TargetGroup6": {
        "title": "TargetGroup6",
        "required": [
          "id",
          "isSimalDial",
          "oRouteSettings",
          "oCapacity",
          "oConcurrency",
          "oSchedule",
          "targets",
          "disableTargets",
          "conversionTimerOffset",
          "schedule",
          "blockRecordings",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isSimalDial": {
            "type": "boolean"
          },
          "oRouteSettings": {
            "$ref": "#/components/schemas/ORouteSettings"
          },
          "oCapacity": {
            "$ref": "#/components/schemas/OCapacity"
          },
          "oConcurrency": {
            "$ref": "#/components/schemas/OConcurrency"
          },
          "oSchedule": {
            "$ref": "#/components/schemas/OSchedule"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target8"
            },
            "description": ""
          },
          "disableTargets": {
            "type": "boolean"
          },
          "conversionTimerOffset": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "blockRecordings": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "TA234457e6f96945cfa312938d4e358015",
          "isSimalDial": false,
          "oRouteSettings": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oCapacity": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oConcurrency": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "oSchedule": {
            "campaignOverride": false,
            "globalOverride": false,
            "waterFallOverride": false
          },
          "targets": [
            {
              "id": "TAfa4c37e44a274af8b8927ed67d536d89",
              "targetGroupId": "TA234457e6f96945cfa312938d4e358015",
              "instructions": {
                "connectionTimeOut": 0,
                "callType": "number",
                "number": "+17605550149"
              },
              "isHighRateTarget": false,
              "targetCallIncrement": "onConvert",
              "owner": {
                "canPauseTargets": true,
                "canSetConcurrencyCaps": false,
                "canDisputeConversions": false,
                "capacity": {
                  "timeZoneId": "UTC",
                  "allTimeSumCap": -1,
                  "monthlySumCap": -1,
                  "dailySumCap": -1,
                  "hourlySumCap": -1,
                  "allTimeCap": -1,
                  "monthlyCap": -1,
                  "dailyCap": -1,
                  "hourlyCap": -1
                },
                "id": "BUec50e9c7fa294283ba10a35893b13198",
                "name": "Example Buyer Co.",
                "accountId": "RA25107ee2411049989cd8672852278bdb",
                "enabled": true,
                "version": 1
              },
              "conversionTimerOffset": 0,
              "schedule": {
                "concurrencyCap": -1,
                "timeZoneId": "Mountain Standard Time",
                "allTimeSumCap": -1,
                "monthlySumCap": -1,
                "dailySumCap": -1,
                "hourlySumCap": -1,
                "allTimeCap": -1,
                "monthlyCap": -1,
                "dailyCap": -1,
                "hourlyCap": -1
              },
              "blockRecordings": false,
              "name": "New Test Target",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ],
          "disableTargets": false,
          "conversionTimerOffset": 0,
          "schedule": {
            "concurrencyCap": -1,
            "timeZoneId": "Pacific Standard Time",
            "allTimeSumCap": -1,
            "monthlySumCap": -1,
            "dailySumCap": -1,
            "hourlySumCap": -1,
            "allTimeCap": -1,
            "monthlyCap": -1,
            "dailyCap": -1,
            "hourlyCap": -1
          },
          "blockRecordings": false,
          "name": "Test Buyer Group",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 2
        }
      },
      "DeleteTargetGroupError1": {
        "title": "DeleteTargetGroupError1",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Please remove all references to this Target Group."
        }
      },
      "DeleteTargetGroup": {
        "title": "DeleteTargetGroup",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR4e7a48b9-b680-4541-afcb-9ec2357f6fb8",
          "isSuccessful": true
        }
      },
      "LookupNumber-Numbernotblocked": {
        "title": "LookupNumber-Numbernotblocked",
        "required": [
          "sid",
          "status",
          "message",
          "code",
          "offset",
          "results"
        ],
        "type": "object",
        "properties": {
          "sid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "sid": "0ebacb14-0046-4f64-876a-e5e1c217f8e2",
          "status": "success",
          "message": "",
          "code": null,
          "offset": 1593558602221,
          "results": 0
        }
      },
      "LookupNumber-Blacklisednumber": {
        "title": "LookupNumber-Blacklisednumber",
        "required": [
          "sid",
          "status",
          "message",
          "code",
          "offset",
          "results"
        ],
        "type": "object",
        "properties": {
          "sid": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "sid": "cfeabdbe-a141-4b2b-b87d-c2b3bd13c4b0",
          "status": "success",
          "message": "Blacklisted",
          "code": null,
          "offset": 1593558364169,
          "results": 1
        }
      },
      "LookupNumbersBulkRequest": {
        "title": "LookupNumbersBulkRequest",
        "required": [
          "phones"
        ],
        "type": "object",
        "properties": {
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "phones": [
            "16196308544",
            "15555558353",
            "15555555555",
            "15555552740",
            "15555552741",
            "15555552738",
            "16196308541"
          ]
        }
      },
      "GetWebhooks": {
        "title": "GetWebhooks",
        "required": [
          "transactionId",
          "webHooks"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "webHooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebHook"
            },
            "description": ""
          }
        },
        "example": {
          "transactionId": "TR4621d4ae-1e95-456f-b399-92382a4bc1c2",
          "webHooks": [
            {
              "id": "WHa4dacc8b9c5640df808a5605402bfda2",
              "webHookType": "conversion",
              "qPathMaps": [
                {
                  "incomingQueryStringName": "call_id",
                  "mapToTagType": "Conversion",
                  "mapToTagName": "callUUID"
                },
                {
                  "incomingQueryStringName": "call_revenue",
                  "mapToTagType": "Conversion",
                  "mapToTagName": "conversionAmount"
                }
              ],
              "defaultValues": [],
              "parameterTest": "sale_successful=yes",
              "endPointUrl": "https://webhook.ringba.com/hook/WHa4dacc8b9c5640df808a5605402bfda2?call_id=[callUUID]&call_revenue=[conversionAmount]&sale_successful=yes",
              "name": "New Webhook",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            },
            {
              "id": "WH52c673bd5c21402388fd347d1442ef3f",
              "webHookType": "conversion",
              "qPathMaps": [
                {
                  "incomingQueryStringName": "example_id",
                  "mapToTagType": "Conversion",
                  "mapToTagName": "callUUID"
                },
                {
                  "incomingQueryStringName": "example_revenue",
                  "mapToTagType": "Conversion",
                  "mapToTagName": "conversionAmount"
                }
              ],
              "defaultValues": [],
              "parameterTest": "successful_sale=yes",
              "endPointUrl": "https://webhook.ringba.com/hook/WH52c673bd5c21402388fd347d1442ef3f?example_id=[callUUID]&example_revenue=[conversionAmount]&successful_sale=yes",
              "name": "Example Webhook",
              "accountId": "RA25107ee2411049989cd8672852278bdb",
              "enabled": true,
              "version": 1
            }
          ]
        }
      },
      "WebHook": {
        "title": "WebHook",
        "required": [
          "id",
          "webHookType",
          "qPathMaps",
          "defaultValues",
          "parameterTest",
          "endPointUrl",
          "name",
          "accountId",
          "enabled",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "webHookType": {
            "type": "string"
          },
          "qPathMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QPathMap"
            },
            "description": ""
          },
          "defaultValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "parameterTest": {
            "type": "string"
          },
          "endPointUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "WHa4dacc8b9c5640df808a5605402bfda2",
          "webHookType": "conversion",
          "qPathMaps": [
            {
              "incomingQueryStringName": "call_id",
              "mapToTagType": "Conversion",
              "mapToTagName": "callUUID"
            },
            {
              "incomingQueryStringName": "call_revenue",
              "mapToTagType": "Conversion",
              "mapToTagName": "conversionAmount"
            }
          ],
          "defaultValues": [],
          "parameterTest": "sale_successful=yes",
          "endPointUrl": "https://webhook.ringba.com/hook/WHa4dacc8b9c5640df808a5605402bfda2?call_id=[callUUID]&call_revenue=[conversionAmount]&sale_successful=yes",
          "name": "New Webhook",
          "accountId": "RA25107ee2411049989cd8672852278bdb",
          "enabled": true,
          "version": 1
        }
      },
      "QPathMap": {
        "title": "QPathMap",
        "required": [
          "incomingQueryStringName",
          "mapToTagType",
          "mapToTagName"
        ],
        "type": "object",
        "properties": {
          "incomingQueryStringName": {
            "type": "string"
          },
          "mapToTagType": {
            "type": "string"
          },
          "mapToTagName": {
            "type": "string"
          }
        },
        "example": {
          "incomingQueryStringName": "call_id",
          "mapToTagType": "Conversion",
          "mapToTagName": "callUUID"
        }
      },
      "GetDetailsforaSingleWebhook": {
        "title": "GetDetailsforaSingleWebhook",
        "required": [
          "transactionId",
          "webHook"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "webHook": {
            "$ref": "#/components/schemas/WebHook"
          }
        },
        "example": {
          "transactionId": "TRafca69bf-9a3c-4c5c-be5e-f1297ae50a68",
          "webHook": {
            "id": "WHa4dacc8b9c5640df808a5605402bfda2",
            "webHookType": "conversion",
            "qPathMaps": [
              {
                "incomingQueryStringName": "call_id",
                "mapToTagType": "Conversion",
                "mapToTagName": "callUUID"
              },
              {
                "incomingQueryStringName": "call_revenue",
                "mapToTagType": "Conversion",
                "mapToTagName": "conversionAmount"
              }
            ],
            "defaultValues": [],
            "parameterTest": "sale_successful=yes",
            "endPointUrl": "https://webhook.ringba.com/hook/WHa4dacc8b9c5640df808a5605402bfda2?call_id=[callUUID]&call_revenue=[conversionAmount]&sale_successful=yes",
            "name": "New Webhook",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "CreateNewWebhookRequest": {
        "title": "CreateNewWebhookRequest",
        "required": [
          "name",
          "incomingCallIdQueryStringParameter",
          "conversionAmountQueryStringParameter",
          "conversionCriteriaParameterMatch"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "incomingCallIdQueryStringParameter": {
            "type": "string"
          },
          "conversionAmountQueryStringParameter": {
            "type": "string"
          },
          "conversionCriteriaParameterMatch": {
            "type": "string"
          }
        },
        "example": {
          "name": "New Webhook",
          "incomingCallIdQueryStringParameter": "call_id",
          "conversionAmountQueryStringParameter": "call_revenue",
          "conversionCriteriaParameterMatch": "sale_successful=yes"
        }
      },
      "CreateNewWebhook": {
        "title": "CreateNewWebhook",
        "required": [
          "transactionId",
          "webHookId",
          "webHook"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "webHookId": {
            "type": "string"
          },
          "webHook": {
            "$ref": "#/components/schemas/WebHook"
          }
        },
        "example": {
          "transactionId": "TR67a40bcc-9be7-412f-a63c-7e65a1103454",
          "webHookId": "WHa4dacc8b9c5640df808a5605402bfda2",
          "webHook": {
            "id": "WHa4dacc8b9c5640df808a5605402bfda2",
            "webHookType": "conversion",
            "qPathMaps": [
              {
                "incomingQueryStringName": "call_id",
                "mapToTagType": "Conversion",
                "mapToTagName": "callUUID"
              },
              {
                "incomingQueryStringName": "call_revenue",
                "mapToTagType": "Conversion",
                "mapToTagName": "conversionAmount"
              }
            ],
            "defaultValues": [],
            "parameterTest": "sale_successful=yes",
            "endPointUrl": "https://webhook.ringba.com/hook/WHa4dacc8b9c5640df808a5605402bfda2?call_id=[callUUID]&call_revenue=[conversionAmount]&sale_successful=yes",
            "name": "New Webhook",
            "accountId": "RA25107ee2411049989cd8672852278bdb",
            "enabled": true,
            "version": 1
          }
        }
      },
      "DeleteaWebhook": {
        "title": "DeleteaWebhook",
        "required": [
          "transactionId",
          "isSuccessful"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "isSuccessful": {
            "type": "boolean"
          }
        },
        "example": {
          "transactionId": "TR013c6aaa-a58c-42ed-9ca2-47d52cbc7f72",
          "isSuccessful": true
        }
      }
    },
    "securitySchemes": {
      "httpBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "httpBearer": []
    }
  ],
  "tags": [
    {
      "name": "Bearer Tokens",
      "description": "## How to generate and utilize your Bearer Token\n\nTo get your token, make a POST request to `https://{{url}}/token` with your user credentials in the body (in urlencoded format). When performed successfully you will get a response containing a token like the following:\n\n```\n\"access_token\": \"f0093At900LqRTnpeLMgev9V...xjeN##########\"\n```\n\nYou will need this token in order to get or create an API Token. The authentication header to make subsequent requests will be:\n\n```\nAuthorization: Bearer {{accessToken}}\n```\n\nSo for the example above it would translate to the following:\n\n```\nAuthorization: Bearer f0093At900LqRTnpeLMgev9V...xjeN##########\n```\n"
    },
    {
      "name": "API Tokens",
      "description": "## Get or Create API Token\n\nIn addition to our user authentication tokens, you can also use API Tokens whenever you want to avoid saving credentials in your apps for Ringba API consumption. API Tokens do not have an expiration date and can only be created and deleted by Admin accounts. It is important to note that the token will only be shown once, so it must be kept in a safe location at all times. Ringba staff cannot retrieve a lost API Token and it would need to be replaced if lost.\n\nWhenever an API Token is to be used, the Authorization header must include the word \"Token\" followed by the token string like the following. \n\n```\nAuthorization:\tToken {{apitoken}}\n```"
    },
    {
      "name": "Account Information",
      "description": "#### Get Your Account Information"
    },
    {
      "name": "Addresses",
      "description": "#### Get addresses associated with account"
    },
    {
      "name": "Buyers",
      "description": "#### Get and Edit Information About Buyers Associated With Your Account"
    },
    {
      "name": "Call Adjustments",
      "description": "Group of requests to modify the payout and revenue for specific calls."
    },
    {
      "name": "Get Call Logs",
      "description": "These four requests can be used to create a call log to your desired specifications. Once the call log is created, the two requests in the next folder can be used to export it."
    },
    {
      "name": "Export Call Logs",
      "description": "Two requests needed to export a call log in a CSV format. The POST request generates the CSV and the GET request will return a url that can be used to download a zip file with the CSV of the call log."
    },
    {
      "name": "Campaign Information"
    },
    {
      "name": "Campaign Numbers"
    },
    {
      "name": "Campaign Publishers"
    },
    {
      "name": "Number Js Tags",
      "description": "These requests will help you to get, create, or delete a Js tag from a campaign. Js tags allow you to inject JavaScript into your webpage to connect a number on your webpage to the specified campaign."
    },
    {
      "name": "Campaign Target Routes"
    },
    {
      "name": "Campaign Offers",
      "description": "A group of requests that allow you to create and manage offers to publishers. An Offer is a convenient way to present the campaign to your publishers. It is a public representation of the campaign that allows publishers to quickly decide whether they want to send calls to a campaign and whether their calls meet the requirements.\n\n__NOTE:__ You can have multiple draft offers at any time, but only one published offer per campaign."
    },
    {
      "name": "Default Payouts for Campaign"
    },
    {
      "name": "Publisher Payout Overrides"
    },
    {
      "name": "Campaign RTB Settings"
    },
    {
      "name": "Publisher RTB Overrides"
    },
    {
      "name": "IVR Trees"
    },
    {
      "name": "Publishers",
      "description": "### Get Information About Publishers"
    },
    {
      "name": "Publisher Invitations"
    },
    {
      "name": "Numbers",
      "description": "##### Get Numbers Associated With Your Account"
    },
    {
      "name": "Number Pools",
      "description": "### Get Information About Number Pools"
    },
    {
      "name": "Blocked Numbers"
    },
    {
      "name": "Real Time Bidding (RTB)",
      "description": "Ringba's RTB technology was built specifically to facilitate programmatic call trading between buyers and sellers. This API gives buyers the ability to bid on live phone calls in real-time. \n\n### Getting Started\n<hr>\nRingba's flexible architecture allows for the passing of unlimited dynamic data points along with bid requests in a single transaction via GET or a POST using JSON or XML.\n\n\n### Selecting Your Environment\n<hr>\nThe `Environment` variable can have one of 3 different values:\n\n<table>\n<tr>\n<th>Environment Value</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>Production</code></td>\n<td>This environment is used for live bidding</td>\n</tr>\n<tr>\n<td><code>Test</code></td>\n<td>This environment is for testing your RTB integration. Please note that the Test environment has a restrictive rate limit, non-routable numbers, and may result in billable costs if TCPA Shield, Instant Caller Profiles, or other incremental service is enabled on the campaign</td>\n</tr>\n<tr>\n<td><code>Sandbox</code></td>\n<td>Similar to the Test environment, but only returns sample data as opposed to live campaign data</td>\n</tr>\n</table>\n\n\n### Configuring your RTB ID\n<hr>\nThe `rtbI` is a unique identifier that is assigned to every publisher inside an RTB-enabled campaign. Publishers will have a different `rtbId` for every campaign. To view the `rtbId` follow these steps in the portal:\n\n__For Publishers:__\nUnder the \"Campaigns\" tab, click \"Manage Campaigns\". Click on the name of a campaign that has an \"RTB Status\" of \"ON\". This will bring up the details for the campaign selected. At the top of the page under the campaign title, click the \"Real Time Bidding\" tab, which will display the RTB setting for the campaign. At the top of the details, there is field called \"RTB Id\" which contains your `rtbId` for use in the following requests.\n\n__For Admin Users:__\nUnder the \"Campaigns\" tab, click \"Manage Campaigns\". Click on the name of a campaign that has an \"RTB Status\" of \"ON\". This will bring up the details for the campaign selected. Scroll down to the \"Publishers\" section of the page. Under the name of each publisher you will see an \"RTB ID\" and the value that follows is the `rtbId` for use in the following requests.\n\n### Bid Explanation\n<hr>\nBids are in US dollars, rounded to two decimal places. For example, $33.10 is reflected in the bid amount as 33.10.\n\nIf a call is received to a SIP address after the bid expiration has elapsed, the call will be rejected. If the call is received to a DID after the bid expiration the call may be rejected or may still connect, however, no value will be credited to the publisher. Please ensure that calls are forwarded and connected before the bid expires.\n\n\n### Response Overview\n<hr>\n<br>\n\n#### Bid Field Definitions\n<table>\n<tr>\n<th>Field</th>\n<th>Definition</th>\n</tr>\n<tr>\n<td><code>bidId</code></td>\n<td>Bid's unique ID</td>\n</tr>\n<tr>\n<td><code>bidAmount</code></td>\n<td>Payout for the publisher if the <code>bidTerms</code> are accomplished</td>\n</tr>\n<tr>\n<td><code>expireInSeconds</code></td>\n<td>After this period of time, the bid will expire and may not be honored</td>\n</tr>\n<tr>\n<td><code>bidExpireDT</code></td>\n<td>The exact Date and Time when the bid expires</td>\n</tr>\n<tr>\n<td><code>bidExpireEpoch</code></td>\n<td>The epoch of the expiration time</td>\n</tr>\n<tr>\n<td><code>phoneNumber</code></td>\n<td>The Phone Number to route the phone call to</td>\n</tr>\n<tr>\n<td><code>sipAddress</code></td>\n<td>The SIP Address to route the phone call to</td>\n</tr>\n<tr>\n<td><code>bidTerms</code></td>\n<td>The specific conditions that must be accomplished in order to the publisher be paid. See the <b>Bid Terms Codes</b> table below for more details</td>\n</tr>\n<tr>\n<td><code>warnings</code></td>\n<td>Important notifications about this bid request. See the following <b>Warning Codes</b> table for more details</td>\n</tr>\n</table>\n\n#### Warning Codes\n<table>\n<tr>\n<th>Warning Code</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>200</code></td>\n<td>The bid cannot be guaranteed without a caller ID. Calls may be routed differently based on the information about the caller. Provided Caller ID will not be disclosed to the account administrator unless they win the bid and the call is connected.<td/>\n</tr>\n<tr>\n<td><code>205</code></td>\n<td>Sending calls via SIP is preferred over routing them to DID. DID numbers are not unique and are not protected from receiving spam calls or calls from expired bids. Consider always providing Caller ID when not using SIP.\n<td/>\n</tr>\n<tr>\n<td><code>220</code></td>\n<td>Request executed in Test mode. The bid amount is guaranteed to be equal to a production mode bid, but the phone number and/or SIP address cannot be used to forward your call. Requests to this endpoint are heavily throttled, if you need to do significant testing use Sandbox mode instead.<td/>\n</tr>\n<tr>\n<td><code>222</code></td>\n<td>Request executed in Sandbox mode. The bid amount is not guaranteed to be equal to a production mode bid, and the phone number and/or SIP address cannot be used to forward your call. This is the best way to send test requests.<td/>\n</tr>\n</table>\n<br>\n\n#### Bid Terms Codes\nThe `bidTerms` response object contains the specific conditions and requirements that a buyer needs to be met in order for the publisher to be paid for the call. Here is a full list of bidding codes\n<table>\n<tr>\n<th>Bid Terms Code</th>\n<th>Description</th>\n</tr>\n<tr>\n<td><code>100</code></td>\n<td>Minimum call duration in seconds</td>\n</tr>\n<tr>\n<td><code>101</code></td>\n<td>Call must connect</td>\n</tr>\n<tr>\n<td><code>102</code></td>\n<td>Call must convert</td>\n</tr>\n<tr>\n<td><code>110</code></td>\n<td>Duplicate calls are not allowed</td>\n</tr>\n</table>\n"
    },
    {
      "name": "RTB Bulk Modifiers"
    },
    {
      "name": "Targets",
      "description": "#### Get and Edit Information About Your Targets"
    },
    {
      "name": "Target Groups",
      "description": "#### Get and Edit Information About Your Target Groups"
    },
    {
      "name": "TCPA Shield"
    },
    {
      "name": "Webhooks",
      "description": "A Webhook is used to get information into Ringba from outside the platform. Webhooks are endpoints that allow you to send data back to Ringba for performance based routing and enhanced reporting. After generating a webhook, you can pass Ringba back data using the Call Token assigned to every call.\n\n__NOTE:__ To set up a webhook, you must be an Account Administrator."
    }
  ]
}