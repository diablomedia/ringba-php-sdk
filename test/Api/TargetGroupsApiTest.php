<?php
/**
 * TargetGroupsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ringba API Documentation
 *
 * Ringbaâ€™s APIs allow you to interact, gather information, and make dynamic changes in real-time. All functions found within the Ringba portal are also available programmatically through our API.  If this is your first time using our API, please read the __Getting Started__ section below.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TargetGroupsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TargetGroupsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for accountIdTargetGroupsGet
     *
     * Get Target Groups.
     *
     */
    public function testAccountIdTargetGroupsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdBuyerBuyerIdDelete
     *
     * Remove Buyer from Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdBuyerBuyerIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdBuyerPut
     *
     * Assign Target Group to a Buyer.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdBuyerPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdCountsGet
     *
     * Get Stats for Specific Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdCountsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdDelete
     *
     * Delete Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdGet
     *
     * Get Details about Specific Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdInboundReferencesGet
     *
     * Get Inbound References for Specific Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdInboundReferencesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdPatch
     *
     * Edit Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdResetCountDelete
     *
     * Reset Counts for Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdResetCountDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdTargetsGet
     *
     * Get Targets for Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdTargetsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdTargetsPatch
     *
     * Add Single Target to Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdTargetsPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetGroupsTargetGroupIdTargetsTargetIdDelete
     *
     * Delete Single Target from Target Group.
     *
     */
    public function testAccountIdTargetGroupsTargetGroupIdTargetsTargetIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetgroupsPost
     *
     * Create Target Group.
     *
     */
    public function testAccountIdTargetgroupsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountIdTargetgroupsTargetGroupIdTargetsBulkUpdatePatch
     *
     * Add/Remove Multiple Targets to/from Target Group.
     *
     */
    public function testAccountIdTargetgroupsTargetGroupIdTargetsBulkUpdatePatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
