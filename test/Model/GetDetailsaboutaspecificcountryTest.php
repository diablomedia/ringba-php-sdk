<?php
/**
 * GetDetailsaboutaspecificcountryTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Ringba
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ringba API Documentation
 *
 * Ringbaâ€™s APIs allow you to interact, gather information, and make dynamic changes in real-time. All functions found within the Ringba portal are also available programmatically through our API.   If this is your first time using our API, please read the __Getting Started__ section below.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ringba\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * GetDetailsaboutaspecificcountryTest Class Doc Comment
 *
 * @category    Class
 * @description GetDetailsaboutaspecificcountry
 * @package     Ringba
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GetDetailsaboutaspecificcountryTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetDetailsaboutaspecificcountry"
     */
    public function testGetDetailsaboutaspecificcountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addressRequirementFullfilledForTollFreeNumbers"
     */
    public function testPropertyAddressRequirementFullfilledForTollFreeNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addressRequirementFullfilledForLocalNumbers"
     */
    public function testPropertyAddressRequirementFullfilledForLocalNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "countryCode"
     */
    public function testPropertyCountryCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hasTollFreeNumbers"
     */
    public function testPropertyHasTollFreeNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hasMobileNumbers"
     */
    public function testPropertyHasMobileNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hasLocalNumbers"
     */
    public function testPropertyHasLocalNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addressRequirementForTollFreeNumbers"
     */
    public function testPropertyAddressRequirementForTollFreeNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addressRequirementForLocalNumbers"
     */
    public function testPropertyAddressRequirementForLocalNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addressProofRequirementForTollFreeNumbers"
     */
    public function testPropertyAddressProofRequirementForTollFreeNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addressProofRequirementForLocalNumbers"
     */
    public function testPropertyAddressProofRequirementForLocalNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "identityRequirementForTollFreeNumbers"
     */
    public function testPropertyIdentityRequirementForTollFreeNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "identityRequirementForLocalNumbers"
     */
    public function testPropertyIdentityRequirementForLocalNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "identityProofRequirementForTollFreeNumbers"
     */
    public function testPropertyIdentityProofRequirementForTollFreeNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "identityProofRequirementForLocalNumbers"
     */
    public function testPropertyIdentityProofRequirementForLocalNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "canSearchByZipCode"
     */
    public function testPropertyCanSearchByZipCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "canSearchByRegion"
     */
    public function testPropertyCanSearchByRegion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "canSearchByPrefix"
     */
    public function testPropertyCanSearchByPrefix()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
